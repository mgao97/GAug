[I 2024-01-18 04:09:35,393] A new study created in memory with name: HGAugM_CoauthorshipCora_study
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:10:03,680] Trial 0 finished with value: 0.6869158744812012 and parameters: {'border': 0.991}. Best is trial 0 with value: 0.6869158744812012.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:10:31,702] Trial 1 finished with value: 0.6799065470695496 and parameters: {'border': 0.978}. Best is trial 0 with value: 0.6869158744812012.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:11:00,660] Trial 2 finished with value: 0.6444703936576843 and parameters: {'border': 0.9390000000000001}. Best is trial 0 with value: 0.6869158744812012.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:11:29,121] Trial 3 finished with value: 0.6592679023742676 and parameters: {'border': 0.96}. Best is trial 0 with value: 0.6869158744812012.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Hypergraph(num_v=2708, num_e=1102)
Epoch: 0, Time: 0.03870s, Loss: 1.94657
update best: 0.12188
Epoch: 1, Time: 0.02659s, Loss: 1.94023
update best: 0.30607
Epoch: 2, Time: 0.02319s, Loss: 1.93316
Epoch: 3, Time: 0.01990s, Loss: 1.92488
Epoch: 4, Time: 0.01991s, Loss: 1.91427
Epoch: 5, Time: 0.01996s, Loss: 1.90135
Epoch: 6, Time: 0.02385s, Loss: 1.88781
update best: 0.31542
Epoch: 7, Time: 0.02082s, Loss: 1.87181
update best: 0.33294
Epoch: 8, Time: 0.02121s, Loss: 1.85377
update best: 0.36254
Epoch: 9, Time: 0.02309s, Loss: 1.83219
update best: 0.39914
Epoch: 10, Time: 0.02114s, Loss: 1.81465
update best: 0.43692
Epoch: 11, Time: 0.02165s, Loss: 1.78920
update best: 0.48014
Epoch: 12, Time: 0.02219s, Loss: 1.75812
update best: 0.52142
Epoch: 13, Time: 0.02147s, Loss: 1.72718
update best: 0.54322
Epoch: 14, Time: 0.02088s, Loss: 1.70052
update best: 0.55997
Epoch: 15, Time: 0.01935s, Loss: 1.66493
update best: 0.57204
Epoch: 16, Time: 0.01996s, Loss: 1.62775
update best: 0.58061
Epoch: 17, Time: 0.01995s, Loss: 1.59314
update best: 0.58995
Epoch: 18, Time: 0.02275s, Loss: 1.55636
update best: 0.61137
Epoch: 19, Time: 0.01971s, Loss: 1.51844
update best: 0.63318
Epoch: 20, Time: 0.01948s, Loss: 1.46758
update best: 0.64564
Epoch: 21, Time: 0.02325s, Loss: 1.42809
update best: 0.65421
Epoch: 22, Time: 0.01977s, Loss: 1.38406
update best: 0.65888
Epoch: 23, Time: 0.02024s, Loss: 1.34019
update best: 0.66628
Epoch: 24, Time: 0.02121s, Loss: 1.30156
update best: 0.67056
Epoch: 25, Time: 0.02148s, Loss: 1.25232
update best: 0.67445
Epoch: 26, Time: 0.01896s, Loss: 1.21016
update best: 0.68030
Epoch: 27, Time: 0.01961s, Loss: 1.16988
update best: 0.68224
Epoch: 28, Time: 0.01921s, Loss: 1.13035
update best: 0.68692
Epoch: 29, Time: 0.01966s, Loss: 1.10171

train finished!
best val: 0.68692
test...
final result: epoch: 28
{'accuracy': 0.6869158744812012, 'f1_score': 0.6625469363553543, 'f1_score -> average@micro': 0.6869158878504673}
Hypergraph(num_v=2708, num_e=1359)
Epoch: 0, Time: 0.03567s, Loss: 1.94652
update best: 0.12188
Epoch: 1, Time: 0.02020s, Loss: 1.94092
update best: 0.34657
Epoch: 2, Time: 0.02135s, Loss: 1.93404
Epoch: 3, Time: 0.02147s, Loss: 1.92623
Epoch: 4, Time: 0.02194s, Loss: 1.91628
Epoch: 5, Time: 0.02086s, Loss: 1.90348
Epoch: 6, Time: 0.01815s, Loss: 1.89045
update best: 0.34735
Epoch: 7, Time: 0.01998s, Loss: 1.87511
update best: 0.38357
Epoch: 8, Time: 0.01997s, Loss: 1.85656
update best: 0.41121
Epoch: 9, Time: 0.02012s, Loss: 1.83572
update best: 0.44587
Epoch: 10, Time: 0.01904s, Loss: 1.81887
update best: 0.49221
Epoch: 11, Time: 0.01959s, Loss: 1.79267
update best: 0.52492
Epoch: 12, Time: 0.02120s, Loss: 1.76275
update best: 0.55452
Epoch: 13, Time: 0.02103s, Loss: 1.73204
update best: 0.56854
Epoch: 14, Time: 0.01675s, Loss: 1.70430
update best: 0.57593
Epoch: 15, Time: 0.01976s, Loss: 1.66881
update best: 0.58372
Epoch: 16, Time: 0.01980s, Loss: 1.63361
update best: 0.61526
Epoch: 17, Time: 0.02115s, Loss: 1.59837
update best: 0.63279
Epoch: 18, Time: 0.02033s, Loss: 1.56147
update best: 0.64603
Epoch: 19, Time: 0.01651s, Loss: 1.52374
update best: 0.65265
Epoch: 20, Time: 0.02095s, Loss: 1.47675
update best: 0.66199
Epoch: 21, Time: 0.02051s, Loss: 1.43589
update best: 0.66978
Epoch: 22, Time: 0.01807s, Loss: 1.39525
update best: 0.67095
Epoch: 23, Time: 0.02111s, Loss: 1.34581
update best: 0.67368
Epoch: 24, Time: 0.01696s, Loss: 1.30915
update best: 0.67601
Epoch: 25, Time: 0.01903s, Loss: 1.26228
update best: 0.67640
Epoch: 26, Time: 0.01709s, Loss: 1.22188
update best: 0.67796
Epoch: 27, Time: 0.02096s, Loss: 1.18048
Epoch: 28, Time: 0.01943s, Loss: 1.14303
update best: 0.67874
Epoch: 29, Time: 0.02015s, Loss: 1.11654
update best: 0.67991

train finished!
best val: 0.67991
test...
final result: epoch: 29
{'accuracy': 0.6799065470695496, 'f1_score': 0.6615280864557621, 'f1_score -> average@micro': 0.6799065420560748}
Hypergraph(num_v=2708, num_e=1705)
Epoch: 0, Time: 0.04619s, Loss: 1.94657
update best: 0.12150
Epoch: 1, Time: 0.03007s, Loss: 1.94233
update best: 0.30880
Epoch: 2, Time: 0.02938s, Loss: 1.93733
Epoch: 3, Time: 0.02940s, Loss: 1.93180
Epoch: 4, Time: 0.02970s, Loss: 1.92504
Epoch: 5, Time: 0.02957s, Loss: 1.91598
Epoch: 6, Time: 0.02964s, Loss: 1.90696
update best: 0.31036
Epoch: 7, Time: 0.02969s, Loss: 1.89635
update best: 0.31815
Epoch: 8, Time: 0.02929s, Loss: 1.88338
update best: 0.35047
Epoch: 9, Time: 0.02996s, Loss: 1.86871
update best: 0.38551
Epoch: 10, Time: 0.02936s, Loss: 1.85666
update best: 0.41978
Epoch: 11, Time: 0.02708s, Loss: 1.83851
update best: 0.46301
Epoch: 12, Time: 0.02973s, Loss: 1.81709
update best: 0.48209
Epoch: 13, Time: 0.02760s, Loss: 1.79424
update best: 0.51129
Epoch: 14, Time: 0.03004s, Loss: 1.77754
update best: 0.52336
Epoch: 15, Time: 0.02965s, Loss: 1.75099
update best: 0.55062
Epoch: 16, Time: 0.02747s, Loss: 1.72594
update best: 0.57555
Epoch: 17, Time: 0.02996s, Loss: 1.69920
update best: 0.59229
Epoch: 18, Time: 0.02982s, Loss: 1.67014
update best: 0.60436
Epoch: 19, Time: 0.03012s, Loss: 1.64558
update best: 0.61449
Epoch: 20, Time: 0.02986s, Loss: 1.60459
update best: 0.62111
Epoch: 21, Time: 0.02945s, Loss: 1.57502
update best: 0.63045
Epoch: 22, Time: 0.02949s, Loss: 1.54315
update best: 0.63162
Epoch: 23, Time: 0.02984s, Loss: 1.50990
Epoch: 24, Time: 0.02965s, Loss: 1.47198
update best: 0.63474
Epoch: 25, Time: 0.03162s, Loss: 1.43774
Epoch: 26, Time: 0.03007s, Loss: 1.40288
Epoch: 27, Time: 0.02972s, Loss: 1.36806
update best: 0.63551
Epoch: 28, Time: 0.03010s, Loss: 1.34001
update best: 0.63863
Epoch: 29, Time: 0.02982s, Loss: 1.31270
update best: 0.64447

train finished!
best val: 0.64447
test...
final result: epoch: 29
{'accuracy': 0.6444703936576843, 'f1_score': 0.6159388927174764, 'f1_score -> average@micro': 0.6444704049844237}
Hypergraph(num_v=2708, num_e=1600)
Epoch: 0, Time: 0.04465s, Loss: 1.94650
update best: 0.12188
Epoch: 1, Time: 0.02343s, Loss: 1.94149
update best: 0.31231
Epoch: 2, Time: 0.02351s, Loss: 1.93501
Epoch: 3, Time: 0.02013s, Loss: 1.92822
Epoch: 4, Time: 0.02351s, Loss: 1.91903
Epoch: 5, Time: 0.02368s, Loss: 1.90767
Epoch: 6, Time: 0.02039s, Loss: 1.89589
update best: 0.31698
Epoch: 7, Time: 0.02028s, Loss: 1.88264
update best: 0.34502
Epoch: 8, Time: 0.02298s, Loss: 1.86560
update best: 0.37928
Epoch: 9, Time: 0.02045s, Loss: 1.84567
update best: 0.41121
Epoch: 10, Time: 0.02269s, Loss: 1.83125
update best: 0.44860
Epoch: 11, Time: 0.02326s, Loss: 1.80757
update best: 0.47002
Epoch: 12, Time: 0.02271s, Loss: 1.78013
update best: 0.49299
Epoch: 13, Time: 0.02316s, Loss: 1.75322
update best: 0.51908
Epoch: 14, Time: 0.02032s, Loss: 1.72747
update best: 0.53972
Epoch: 15, Time: 0.02267s, Loss: 1.69647
update best: 0.57087
Epoch: 16, Time: 0.02039s, Loss: 1.66411
update best: 0.59969
Epoch: 17, Time: 0.02193s, Loss: 1.63390
update best: 0.61098
Epoch: 18, Time: 0.02271s, Loss: 1.59660
update best: 0.62227
Epoch: 19, Time: 0.02287s, Loss: 1.56574
update best: 0.63551
Epoch: 20, Time: 0.02312s, Loss: 1.52007
update best: 0.64408
Epoch: 21, Time: 0.02265s, Loss: 1.48226
update best: 0.64875
Epoch: 22, Time: 0.02287s, Loss: 1.44718
Epoch: 23, Time: 0.02322s, Loss: 1.40324
Epoch: 24, Time: 0.02282s, Loss: 1.36724
update best: 0.64953
Epoch: 25, Time: 0.01984s, Loss: 1.32357
update best: 0.65226
Epoch: 26, Time: 0.02326s, Loss: 1.29039
update best: 0.65537
Epoch: 27, Time: 0.02362s, Loss: 1.24906
update best: 0.65615
Epoch: 28, Time: 0.02275s, Loss: 1.21635
Epoch: 29, Time: 0.02250s, Loss: 1.18858
update best: 0.65927

train finished!
best val: 0.65927
test...
final result: epoch: 29
{'accuracy': 0.6592679023742676, 'f1_score': 0.6357243425141829, 'f1_score -> average@micro': 0.6592679127725857}
Hypergraph(num_v=2708, num_e=1345)
Epoch: 0, Time: 0.03609s, Loss: 1.94659
update best: 0.12188
Epoch: 1, Time: 0.02025s, Loss: 1.94095
update best: 0.32360
Epoch: 2, Time: 0.02092s, Loss: 1.93416
Epoch: 3, Time: 0.02110s, Loss: 1.92638
Epoch: 4, Time: 0.02348s, Loss: 1.91670
Epoch: 5, Time: 0.01985s, Loss: 1.90424
Epoch: 6, Time: 0.02302s, Loss: 1.89131
update best: 0.32788
Epoch: 7, Time: 0.02140s, Loss: 1.87635
[I 2024-01-18 04:11:57,503] Trial 4 finished with value: 0.6826323866844177 and parameters: {'border': 0.979}. Best is trial 0 with value: 0.6869158744812012.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:12:25,971] Trial 5 finished with value: 0.6826323866844177 and parameters: {'border': 0.979}. Best is trial 0 with value: 0.6869158744812012.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:12:55,037] Trial 6 finished with value: 0.6417445540428162 and parameters: {'border': 0.9430000000000001}. Best is trial 0 with value: 0.6869158744812012.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:13:23,547] Trial 7 finished with value: 0.6514797210693359 and parameters: {'border': 0.9480000000000001}. Best is trial 0 with value: 0.6869158744812012.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
update best: 0.35787
Epoch: 8, Time: 0.02017s, Loss: 1.85825
update best: 0.39447
Epoch: 9, Time: 0.02266s, Loss: 1.83854
update best: 0.42874
Epoch: 10, Time: 0.02235s, Loss: 1.82155
update best: 0.47975
Epoch: 11, Time: 0.02000s, Loss: 1.79628
update best: 0.52064
Epoch: 12, Time: 0.02191s, Loss: 1.76693
update best: 0.55179
Epoch: 13, Time: 0.02154s, Loss: 1.73684
update best: 0.56386
Epoch: 14, Time: 0.02163s, Loss: 1.71107
update best: 0.57204
Epoch: 15, Time: 0.02073s, Loss: 1.67572
update best: 0.58061
Epoch: 16, Time: 0.02112s, Loss: 1.64067
update best: 0.59346
Epoch: 17, Time: 0.02030s, Loss: 1.60716
update best: 0.62227
Epoch: 18, Time: 0.02128s, Loss: 1.56921
update best: 0.64213
Epoch: 19, Time: 0.01812s, Loss: 1.53324
update best: 0.64992
Epoch: 20, Time: 0.02089s, Loss: 1.48675
update best: 0.65771
Epoch: 21, Time: 0.02052s, Loss: 1.44620
update best: 0.66355
Epoch: 22, Time: 0.02083s, Loss: 1.40500
update best: 0.67095
Epoch: 23, Time: 0.02078s, Loss: 1.35729
update best: 0.67445
Epoch: 24, Time: 0.01957s, Loss: 1.31995
update best: 0.67679
Epoch: 25, Time: 0.02119s, Loss: 1.27582
Epoch: 26, Time: 0.02111s, Loss: 1.23493
update best: 0.67952
Epoch: 27, Time: 0.02144s, Loss: 1.19152
update best: 0.67991
Epoch: 28, Time: 0.01734s, Loss: 1.15504
update best: 0.68263
Epoch: 29, Time: 0.02054s, Loss: 1.12700

train finished!
best val: 0.68263
test...
final result: epoch: 28
{'accuracy': 0.6826323866844177, 'f1_score': 0.6626007336573592, 'f1_score -> average@micro': 0.682632398753894}
Hypergraph(num_v=2708, num_e=1345)
Epoch: 0, Time: 0.03463s, Loss: 1.94659
update best: 0.12188
Epoch: 1, Time: 0.02011s, Loss: 1.94095
update best: 0.32360
Epoch: 2, Time: 0.02108s, Loss: 1.93416
Epoch: 3, Time: 0.02031s, Loss: 1.92638
Epoch: 4, Time: 0.02138s, Loss: 1.91670
Epoch: 5, Time: 0.02049s, Loss: 1.90424
Epoch: 6, Time: 0.02146s, Loss: 1.89131
update best: 0.32788
Epoch: 7, Time: 0.02180s, Loss: 1.87635
update best: 0.35787
Epoch: 8, Time: 0.02181s, Loss: 1.85825
update best: 0.39447
Epoch: 9, Time: 0.02218s, Loss: 1.83854
update best: 0.42874
Epoch: 10, Time: 0.02229s, Loss: 1.82155
update best: 0.47975
Epoch: 11, Time: 0.02085s, Loss: 1.79628
update best: 0.52064
Epoch: 12, Time: 0.01861s, Loss: 1.76693
update best: 0.55179
Epoch: 13, Time: 0.02048s, Loss: 1.73684
update best: 0.56386
Epoch: 14, Time: 0.01949s, Loss: 1.71107
update best: 0.57204
Epoch: 15, Time: 0.01775s, Loss: 1.67572
update best: 0.58061
Epoch: 16, Time: 0.02136s, Loss: 1.64067
update best: 0.59346
Epoch: 17, Time: 0.02002s, Loss: 1.60716
update best: 0.62227
Epoch: 18, Time: 0.01978s, Loss: 1.56921
update best: 0.64213
Epoch: 19, Time: 0.02117s, Loss: 1.53324
update best: 0.64992
Epoch: 20, Time: 0.02137s, Loss: 1.48675
update best: 0.65771
Epoch: 21, Time: 0.02068s, Loss: 1.44620
update best: 0.66355
Epoch: 22, Time: 0.01747s, Loss: 1.40500
update best: 0.67095
Epoch: 23, Time: 0.01974s, Loss: 1.35729
update best: 0.67445
Epoch: 24, Time: 0.02009s, Loss: 1.31995
update best: 0.67679
Epoch: 25, Time: 0.01949s, Loss: 1.27582
Epoch: 26, Time: 0.02105s, Loss: 1.23493
update best: 0.67952
Epoch: 27, Time: 0.02043s, Loss: 1.19152
update best: 0.67991
Epoch: 28, Time: 0.01764s, Loss: 1.15504
update best: 0.68263
Epoch: 29, Time: 0.02062s, Loss: 1.12700

train finished!
best val: 0.68263
test...
final result: epoch: 28
{'accuracy': 0.6826323866844177, 'f1_score': 0.6626007336573592, 'f1_score -> average@micro': 0.682632398753894}
Hypergraph(num_v=2708, num_e=1685)
Epoch: 0, Time: 0.05000s, Loss: 1.94644
update best: 0.12266
Epoch: 1, Time: 0.02874s, Loss: 1.94223
update best: 0.31269
Epoch: 2, Time: 0.02884s, Loss: 1.93710
Epoch: 3, Time: 0.02841s, Loss: 1.93134
Epoch: 4, Time: 0.02804s, Loss: 1.92400
Epoch: 5, Time: 0.02799s, Loss: 1.91451
Epoch: 6, Time: 0.02794s, Loss: 1.90447
update best: 0.31386
Epoch: 7, Time: 0.02795s, Loss: 1.89321
update best: 0.34151
Epoch: 8, Time: 0.02793s, Loss: 1.87935
update best: 0.37889
Epoch: 9, Time: 0.02786s, Loss: 1.86301
update best: 0.40849
Epoch: 10, Time: 0.02815s, Loss: 1.85043
update best: 0.44899
Epoch: 11, Time: 0.02766s, Loss: 1.83007
update best: 0.47547
Epoch: 12, Time: 0.02820s, Loss: 1.80757
update best: 0.51012
Epoch: 13, Time: 0.02802s, Loss: 1.78283
update best: 0.54245
Epoch: 14, Time: 0.02820s, Loss: 1.76418
update best: 0.57126
Epoch: 15, Time: 0.02550s, Loss: 1.73519
update best: 0.58489
Epoch: 16, Time: 0.02793s, Loss: 1.70877
update best: 0.59696
Epoch: 17, Time: 0.02788s, Loss: 1.67938
update best: 0.60514
Epoch: 18, Time: 0.02768s, Loss: 1.64868
update best: 0.61332
Epoch: 19, Time: 0.02785s, Loss: 1.62234
update best: 0.62850
Epoch: 20, Time: 0.02758s, Loss: 1.57796
update best: 0.63045
Epoch: 21, Time: 0.02754s, Loss: 1.54814
update best: 0.63551
Epoch: 22, Time: 0.02759s, Loss: 1.51420
Epoch: 23, Time: 0.02490s, Loss: 1.47905
update best: 0.64097
Epoch: 24, Time: 0.02496s, Loss: 1.44034
Epoch: 25, Time: 0.02504s, Loss: 1.40403
Epoch: 26, Time: 0.02794s, Loss: 1.36860
Epoch: 27, Time: 0.02747s, Loss: 1.33066
Epoch: 28, Time: 0.02497s, Loss: 1.30389
Epoch: 29, Time: 0.02746s, Loss: 1.27782
update best: 0.64174

train finished!
best val: 0.64174
test...
final result: epoch: 29
{'accuracy': 0.6417445540428162, 'f1_score': 0.6178249501801609, 'f1_score -> average@micro': 0.6417445482866043}
Hypergraph(num_v=2708, num_e=1651)
Epoch: 0, Time: 0.04134s, Loss: 1.94644
update best: 0.12188
Epoch: 1, Time: 0.02794s, Loss: 1.94161
update best: 0.30802
Epoch: 2, Time: 0.02834s, Loss: 1.93593
Epoch: 3, Time: 0.02709s, Loss: 1.92974
Epoch: 4, Time: 0.02627s, Loss: 1.92167
Epoch: 5, Time: 0.02643s, Loss: 1.91170
Epoch: 6, Time: 0.02727s, Loss: 1.90169
update best: 0.30919
Epoch: 7, Time: 0.02658s, Loss: 1.88978
update best: 0.32477
Epoch: 8, Time: 0.02671s, Loss: 1.87485
update best: 0.35826
Epoch: 9, Time: 0.02660s, Loss: 1.85755
update best: 0.39836
Epoch: 10, Time: 0.02645s, Loss: 1.84441
update best: 0.43536
Epoch: 11, Time: 0.02652s, Loss: 1.82321
update best: 0.46963
Epoch: 12, Time: 0.02699s, Loss: 1.80036
update best: 0.49961
Epoch: 13, Time: 0.02513s, Loss: 1.77466
update best: 0.52492
Epoch: 14, Time: 0.02650s, Loss: 1.75425
update best: 0.54556
Epoch: 15, Time: 0.02630s, Loss: 1.72588
update best: 0.57087
Epoch: 16, Time: 0.02657s, Loss: 1.69725
update best: 0.58528
Epoch: 17, Time: 0.02526s, Loss: 1.66833
update best: 0.59969
Epoch: 18, Time: 0.02600s, Loss: 1.63552
update best: 0.60748
Epoch: 19, Time: 0.02686s, Loss: 1.60798
update best: 0.62344
Epoch: 20, Time: 0.02696s, Loss: 1.56326
update best: 0.63240
Epoch: 21, Time: 0.02706s, Loss: 1.53131
update best: 0.64174
Epoch: 22, Time: 0.02703s, Loss: 1.49605
update best: 0.64447
Epoch: 23, Time: 0.02629s, Loss: 1.46076
update best: 0.64486
Epoch: 24, Time: 0.02714s, Loss: 1.42177
Epoch: 25, Time: 0.02655s, Loss: 1.38297
Epoch: 26, Time: 0.02606s, Loss: 1.34649
Epoch: 27, Time: 0.02663s, Loss: 1.31041
update best: 0.64836
Epoch: 28, Time: 0.02654s, Loss: 1.28020
update best: 0.65148
Epoch: 29, Time: 0.02676s, Loss: 1.25209

train finished!
best val: 0.65148
test...
final result: epoch: 28
{'accuracy': 0.6514797210693359, 'f1_score': 0.6215663822132231, 'f1_score -> average@micro': 0.6514797507788161}
Hypergraph(num_v=2708, num_e=1745)
Epoch: 0, Time: 0.06088s, Loss: 1.94672
update best: 0.12227
Epoch: 1, Time: 0.03537s, Loss: 1.94283
update best: 0.30335
Epoch: 2, Time: 0.03553s, Loss: 1.93847
Epoch: 3, Time: 0.03693s, Loss: 1.93379
Epoch: 4, Time: 0.03526s, Loss: 1.92816
Epoch: 5, Time: 0.03241s, Loss: 1.92066
Epoch: 6, Time: 0.03485s, Loss: 1.91268
update best: 0.30530
Epoch: 7, Time: 0.03497s, Loss: 1.90351
update best: 0.30841
Epoch: 8, Time: 0.03483s, Loss: 1.89327
update best: 0.31581
Epoch: 9, Time: 0.03529s, Loss: 1.88087
update best: 0.34034
Epoch: 10, Time: 0.03483s, Loss: 1.87072
update best: 0.37734
Epoch: 11, Time: 0.03473s, Loss: 1.85543
update best: 0.40226
Epoch: 12, Time: 0.03448s, Loss: 1.83860
update best: 0.42835
Epoch: 13, Time: 0.03330s, Loss: 1.81971
update best: 0.46379
Epoch: 14, Time: 0.03335s, Loss: 1.80458
update best: 0.48209
Epoch: 15, Time: 0.03411s, Loss: 1.78163
update best: 0.51207
Epoch: 16, Time: 0.03198s, Loss: 1.76017
[I 2024-01-18 04:13:52,367] Trial 8 finished with value: 0.639018714427948 and parameters: {'border': 0.93}. Best is trial 0 with value: 0.6869158744812012.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:14:20,893] Trial 9 finished with value: 0.6514797210693359 and parameters: {'border': 0.9540000000000001}. Best is trial 0 with value: 0.6869158744812012.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:14:51,218] Trial 10 finished with value: 0.5965732336044312 and parameters: {'border': 0.902}. Best is trial 0 with value: 0.6869158744812012.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:15:19,864] Trial 11 finished with value: 0.6876947283744812 and parameters: {'border': 0.998}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
update best: 0.53583
Epoch: 17, Time: 0.03354s, Loss: 1.73792
update best: 0.55685
Epoch: 18, Time: 0.03183s, Loss: 1.71363
update best: 0.57905
Epoch: 19, Time: 0.03386s, Loss: 1.69144
update best: 0.59112
Epoch: 20, Time: 0.03439s, Loss: 1.65888
update best: 0.59930
Epoch: 21, Time: 0.03500s, Loss: 1.63055
update best: 0.60670
Epoch: 22, Time: 0.03390s, Loss: 1.60407
update best: 0.61098
Epoch: 23, Time: 0.03377s, Loss: 1.57392
update best: 0.61526
Epoch: 24, Time: 0.03427s, Loss: 1.53903
update best: 0.62188
Epoch: 25, Time: 0.03350s, Loss: 1.50897
Epoch: 26, Time: 0.03398s, Loss: 1.47573
update best: 0.62227
Epoch: 27, Time: 0.03348s, Loss: 1.44789
update best: 0.62617
Epoch: 28, Time: 0.03416s, Loss: 1.42151
update best: 0.63240
Epoch: 29, Time: 0.03385s, Loss: 1.39179
update best: 0.63902

train finished!
best val: 0.63902
test...
final result: epoch: 29
{'accuracy': 0.639018714427948, 'f1_score': 0.6062909840524392, 'f1_score -> average@micro': 0.639018691588785}
Hypergraph(num_v=2708, num_e=1629)
Epoch: 0, Time: 0.03988s, Loss: 1.94640
update best: 0.12150
Epoch: 1, Time: 0.02682s, Loss: 1.94144
update best: 0.30491
Epoch: 2, Time: 0.02539s, Loss: 1.93539
Epoch: 3, Time: 0.02492s, Loss: 1.92861
Epoch: 4, Time: 0.02446s, Loss: 1.91965
Epoch: 5, Time: 0.02431s, Loss: 1.90871
Epoch: 6, Time: 0.02203s, Loss: 1.89766
update best: 0.30919
Epoch: 7, Time: 0.02155s, Loss: 1.88506
update best: 0.32710
Epoch: 8, Time: 0.02184s, Loss: 1.86854
update best: 0.36760
Epoch: 9, Time: 0.02509s, Loss: 1.84931
update best: 0.39252
Epoch: 10, Time: 0.02217s, Loss: 1.83557
update best: 0.42640
Epoch: 11, Time: 0.02485s, Loss: 1.81272
update best: 0.45444
Epoch: 12, Time: 0.02481s, Loss: 1.78728
update best: 0.48481
Epoch: 13, Time: 0.02179s, Loss: 1.76101
update best: 0.50662
Epoch: 14, Time: 0.02423s, Loss: 1.73723
update best: 0.52220
Epoch: 15, Time: 0.02164s, Loss: 1.70669
update best: 0.54089
Epoch: 16, Time: 0.02443s, Loss: 1.67808
update best: 0.56347
Epoch: 17, Time: 0.02436s, Loss: 1.64832
update best: 0.59774
Epoch: 18, Time: 0.02575s, Loss: 1.61332
update best: 0.60436
Epoch: 19, Time: 0.02314s, Loss: 1.58227
update best: 0.61526
Epoch: 20, Time: 0.02492s, Loss: 1.53791
update best: 0.62889
Epoch: 21, Time: 0.02479s, Loss: 1.50288
update best: 0.63551
Epoch: 22, Time: 0.02190s, Loss: 1.46642
update best: 0.63824
Epoch: 23, Time: 0.02430s, Loss: 1.42703
update best: 0.64136
Epoch: 24, Time: 0.02168s, Loss: 1.38873
update best: 0.64252
Epoch: 25, Time: 0.02417s, Loss: 1.34734
update best: 0.64408
Epoch: 26, Time: 0.02460s, Loss: 1.31318
update best: 0.64564
Epoch: 27, Time: 0.02164s, Loss: 1.27401
Epoch: 28, Time: 0.02409s, Loss: 1.24312
update best: 0.65148
Epoch: 29, Time: 0.02475s, Loss: 1.21118

train finished!
best val: 0.65148
test...
final result: epoch: 28
{'accuracy': 0.6514797210693359, 'f1_score': 0.6262179975638047, 'f1_score -> average@micro': 0.6514797507788161}
Hypergraph(num_v=2708, num_e=1909)
Epoch: 0, Time: 0.09357s, Loss: 1.94668
update best: 0.11955
Epoch: 1, Time: 0.06231s, Loss: 1.94424
update best: 0.30919
Epoch: 2, Time: 0.06230s, Loss: 1.94181
Epoch: 3, Time: 0.06242s, Loss: 1.93951
Epoch: 4, Time: 0.06215s, Loss: 1.93771
Epoch: 5, Time: 0.06257s, Loss: 1.93398
Epoch: 6, Time: 0.06112s, Loss: 1.93107
Epoch: 7, Time: 0.05909s, Loss: 1.92709
update best: 0.30958
Epoch: 8, Time: 0.06010s, Loss: 1.92212
update best: 0.31114
Epoch: 9, Time: 0.05935s, Loss: 1.91714
update best: 0.31659
Epoch: 10, Time: 0.06002s, Loss: 1.91406
update best: 0.32632
Epoch: 11, Time: 0.06043s, Loss: 1.90741
update best: 0.35787
Epoch: 12, Time: 0.05872s, Loss: 1.90069
update best: 0.38123
Epoch: 13, Time: 0.05899s, Loss: 1.89213
update best: 0.40187
Epoch: 14, Time: 0.05929s, Loss: 1.88646
update best: 0.40888
Epoch: 15, Time: 0.05828s, Loss: 1.87567
update best: 0.42095
Epoch: 16, Time: 0.05799s, Loss: 1.86699
update best: 0.43380
Epoch: 17, Time: 0.05903s, Loss: 1.85573
update best: 0.44938
Epoch: 18, Time: 0.05878s, Loss: 1.84506
update best: 0.47391
Epoch: 19, Time: 0.05795s, Loss: 1.83367
update best: 0.49922
Epoch: 20, Time: 0.06010s, Loss: 1.81737
update best: 0.52142
Epoch: 21, Time: 0.05993s, Loss: 1.80218
update best: 0.53855
Epoch: 22, Time: 0.05875s, Loss: 1.79141
update best: 0.55179
Epoch: 23, Time: 0.05990s, Loss: 1.77435
update best: 0.56347
Epoch: 24, Time: 0.06016s, Loss: 1.75419
update best: 0.56970
Epoch: 25, Time: 0.05963s, Loss: 1.73924
update best: 0.57243
Epoch: 26, Time: 0.06118s, Loss: 1.71829
update best: 0.57516
Epoch: 27, Time: 0.05800s, Loss: 1.70431
update best: 0.58294
Epoch: 28, Time: 0.05825s, Loss: 1.68977
update best: 0.59190
Epoch: 29, Time: 0.05898s, Loss: 1.66809
update best: 0.59657

train finished!
best val: 0.59657
test...
final result: epoch: 29
{'accuracy': 0.5965732336044312, 'f1_score': 0.5550227450964218, 'f1_score -> average@micro': 0.5965732087227414}
Hypergraph(num_v=2708, num_e=998)
Epoch: 0, Time: 0.03140s, Loss: 1.94643
update best: 0.12188
Epoch: 1, Time: 0.01608s, Loss: 1.94035
update best: 0.32165
Epoch: 2, Time: 0.01782s, Loss: 1.93314
Epoch: 3, Time: 0.02001s, Loss: 1.92472
Epoch: 4, Time: 0.02038s, Loss: 1.91413
Epoch: 5, Time: 0.01988s, Loss: 1.90032
Epoch: 6, Time: 0.01952s, Loss: 1.88651
update best: 0.33294
Epoch: 7, Time: 0.01949s, Loss: 1.87035
update best: 0.36604
Epoch: 8, Time: 0.02253s, Loss: 1.85113
update best: 0.39798
Epoch: 9, Time: 0.01676s, Loss: 1.82957
update best: 0.43536
Epoch: 10, Time: 0.02278s, Loss: 1.81008
update best: 0.47002
Epoch: 11, Time: 0.02299s, Loss: 1.78340
update best: 0.51012
Epoch: 12, Time: 0.02267s, Loss: 1.75299
update best: 0.53738
Epoch: 13, Time: 0.02061s, Loss: 1.72087
update best: 0.55569
Epoch: 14, Time: 0.02141s, Loss: 1.69186
update best: 0.56893
Epoch: 15, Time: 0.02037s, Loss: 1.65602
update best: 0.58100
Epoch: 16, Time: 0.02024s, Loss: 1.61612
update best: 0.60202
Epoch: 17, Time: 0.01969s, Loss: 1.58036
update best: 0.62422
Epoch: 18, Time: 0.01635s, Loss: 1.54216
update best: 0.64019
Epoch: 19, Time: 0.01846s, Loss: 1.50401
update best: 0.65187
Epoch: 20, Time: 0.01861s, Loss: 1.45066
update best: 0.65771
Epoch: 21, Time: 0.01909s, Loss: 1.40938
update best: 0.66044
Epoch: 22, Time: 0.01885s, Loss: 1.36611
update best: 0.66589
Epoch: 23, Time: 0.01954s, Loss: 1.31971
update best: 0.67212
Epoch: 24, Time: 0.01821s, Loss: 1.28073
update best: 0.67562
Epoch: 25, Time: 0.01903s, Loss: 1.23086
update best: 0.68107
Epoch: 26, Time: 0.01808s, Loss: 1.18821
update best: 0.68146
Epoch: 27, Time: 0.01923s, Loss: 1.14715
update best: 0.68341
Epoch: 28, Time: 0.01785s, Loss: 1.10630
update best: 0.68653
Epoch: 29, Time: 0.01877s, Loss: 1.07622
update best: 0.68769

train finished!
best val: 0.68769
test...
final result: epoch: 29
{'accuracy': 0.6876947283744812, 'f1_score': 0.6670244056478333, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=998)
Epoch: 0, Time: 0.03067s, Loss: 1.94643
update best: 0.12188
Epoch: 1, Time: 0.01845s, Loss: 1.94035
update best: 0.32165
Epoch: 2, Time: 0.01573s, Loss: 1.93314
Epoch: 3, Time: 0.01982s, Loss: 1.92472
Epoch: 4, Time: 0.02014s, Loss: 1.91413
Epoch: 5, Time: 0.02015s, Loss: 1.90032
Epoch: 6, Time: 0.01980s, Loss: 1.88651
update best: 0.33294
Epoch: 7, Time: 0.01993s, Loss: 1.87035
update best: 0.36604
Epoch: 8, Time: 0.01951s, Loss: 1.85113
update best: 0.39798
Epoch: 9, Time: 0.01960s, Loss: 1.82957
update best: 0.43536
Epoch: 10, Time: 0.01961s, Loss: 1.81008
update best: 0.47002
Epoch: 11, Time: 0.01964s, Loss: 1.78340
update best: 0.51012
Epoch: 12, Time: 0.01894s, Loss: 1.75299
update best: 0.53738
Epoch: 13, Time: 0.01848s, Loss: 1.72087
update best: 0.55569
Epoch: 14, Time: 0.02112s, Loss: 1.69186
update best: 0.56893
Epoch: 15, Time: 0.01966s, Loss: 1.65602
update best: 0.58100
Epoch: 16, Time: 0.02092s, Loss: 1.61612
update best: 0.60202
Epoch: 17, Time: 0.01874s, Loss: 1.58036
update best: 0.62422
Epoch: 18, Time: 0.01920s, Loss: 1.54216
update best: 0.64019
Epoch: 19, Time: 0.01914s, Loss: 1.50401
update best: 0.65187
Epoch: 20, Time: 0.01830s, Loss: 1.45066
update best: 0.65771
Epoch: 21, Time: 0.01926s, Loss: 1.40938
update best: 0.66044
[I 2024-01-18 04:15:48,864] Trial 12 finished with value: 0.6876947283744812 and parameters: {'border': 0.998}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:16:17,286] Trial 13 finished with value: 0.6876947283744812 and parameters: {'border': 0.999}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:17:02,314] Trial 14 finished with value: 0.6876947283744812 and parameters: {'border': 0.998}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:17:47,451] Trial 15 finished with value: 0.6573208570480347 and parameters: {'border': 0.964}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 22, Time: 0.01913s, Loss: 1.36611
update best: 0.66589
Epoch: 23, Time: 0.01970s, Loss: 1.31971
update best: 0.67212
Epoch: 24, Time: 0.01852s, Loss: 1.28073
update best: 0.67562
Epoch: 25, Time: 0.01939s, Loss: 1.23086
update best: 0.68107
Epoch: 26, Time: 0.01974s, Loss: 1.18821
update best: 0.68146
Epoch: 27, Time: 0.01922s, Loss: 1.14715
update best: 0.68341
Epoch: 28, Time: 0.01973s, Loss: 1.10630
update best: 0.68653
Epoch: 29, Time: 0.01898s, Loss: 1.07622
update best: 0.68769

train finished!
best val: 0.68769
test...
final result: epoch: 29
{'accuracy': 0.6876947283744812, 'f1_score': 0.6670244056478333, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=980)
Epoch: 0, Time: 0.03037s, Loss: 1.94639
update best: 0.12188
Epoch: 1, Time: 0.01986s, Loss: 1.94030
update best: 0.34268
Epoch: 2, Time: 0.01695s, Loss: 1.93302
Epoch: 3, Time: 0.02093s, Loss: 1.92449
Epoch: 4, Time: 0.01884s, Loss: 1.91373
Epoch: 5, Time: 0.01761s, Loss: 1.89997
Epoch: 6, Time: 0.01903s, Loss: 1.88599
update best: 0.34502
Epoch: 7, Time: 0.01739s, Loss: 1.86989
update best: 0.37072
Epoch: 8, Time: 0.01984s, Loss: 1.85056
update best: 0.39642
Epoch: 9, Time: 0.02253s, Loss: 1.82889
update best: 0.43692
Epoch: 10, Time: 0.01613s, Loss: 1.80956
update best: 0.47118
Epoch: 11, Time: 0.01426s, Loss: 1.78307
update best: 0.51051
Epoch: 12, Time: 0.01416s, Loss: 1.75245
update best: 0.53699
Epoch: 13, Time: 0.01568s, Loss: 1.72024
update best: 0.55685
Epoch: 14, Time: 0.01393s, Loss: 1.69164
update best: 0.56659
Epoch: 15, Time: 0.01443s, Loss: 1.65562
update best: 0.57827
Epoch: 16, Time: 0.01573s, Loss: 1.61610
update best: 0.59229
Epoch: 17, Time: 0.01494s, Loss: 1.57988
update best: 0.61838
Epoch: 18, Time: 0.01493s, Loss: 1.54242
update best: 0.63551
Epoch: 19, Time: 0.01485s, Loss: 1.50395
update best: 0.64914
Epoch: 20, Time: 0.01728s, Loss: 1.45141
update best: 0.65382
Epoch: 21, Time: 0.01973s, Loss: 1.40964
update best: 0.65849
Epoch: 22, Time: 0.01749s, Loss: 1.36696
update best: 0.66238
Epoch: 23, Time: 0.01498s, Loss: 1.32126
update best: 0.67017
Epoch: 24, Time: 0.01803s, Loss: 1.28172
update best: 0.67445
Epoch: 25, Time: 0.01945s, Loss: 1.23249
update best: 0.67835
Epoch: 26, Time: 0.01954s, Loss: 1.19173
update best: 0.67991
Epoch: 27, Time: 0.01962s, Loss: 1.14975
update best: 0.68224
Epoch: 28, Time: 0.01952s, Loss: 1.10959
update best: 0.68458
Epoch: 29, Time: 0.01944s, Loss: 1.07848
update best: 0.68769

train finished!
best val: 0.68769
test...
final result: epoch: 29
{'accuracy': 0.6876947283744812, 'f1_score': 0.665811060440636, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=998)
Epoch: 0, Time: 0.03193s, Loss: 1.94643
update best: 0.12188
Epoch: 1, Time: 0.02065s, Loss: 1.94035
update best: 0.32165
Epoch: 2, Time: 0.01855s, Loss: 1.93314
Epoch: 3, Time: 0.02040s, Loss: 1.92472
Epoch: 4, Time: 0.02177s, Loss: 1.91413
Epoch: 5, Time: 0.01829s, Loss: 1.90032
Epoch: 6, Time: 0.01902s, Loss: 1.88651
update best: 0.33294
Epoch: 7, Time: 0.01677s, Loss: 1.87035
update best: 0.36604
Epoch: 8, Time: 0.01480s, Loss: 1.85113
update best: 0.39798
Epoch: 9, Time: 0.01457s, Loss: 1.82957
update best: 0.43536
Epoch: 10, Time: 0.01445s, Loss: 1.81008
update best: 0.47002
Epoch: 11, Time: 0.01479s, Loss: 1.78340
update best: 0.51012
Epoch: 12, Time: 0.01502s, Loss: 1.75299
update best: 0.53738
Epoch: 13, Time: 0.01620s, Loss: 1.72087
update best: 0.55569
Epoch: 14, Time: 0.01467s, Loss: 1.69186
update best: 0.56893
Epoch: 15, Time: 0.01530s, Loss: 1.65602
update best: 0.58100
Epoch: 16, Time: 0.01568s, Loss: 1.61612
update best: 0.60202
Epoch: 17, Time: 0.01672s, Loss: 1.58036
update best: 0.62422
Epoch: 18, Time: 0.01594s, Loss: 1.54216
update best: 0.64019
Epoch: 19, Time: 0.01614s, Loss: 1.50401
update best: 0.65187
Epoch: 20, Time: 0.01516s, Loss: 1.45066
update best: 0.65771
Epoch: 21, Time: 0.01560s, Loss: 1.40938
update best: 0.66044
Epoch: 22, Time: 0.01924s, Loss: 1.36611
update best: 0.66589
Epoch: 23, Time: 0.01989s, Loss: 1.31971
update best: 0.67212
Epoch: 24, Time: 0.01911s, Loss: 1.28073
update best: 0.67562
Epoch: 25, Time: 0.01353s, Loss: 1.23086
update best: 0.68107
Epoch: 26, Time: 0.01412s, Loss: 1.18821
update best: 0.68146
Epoch: 27, Time: 0.01756s, Loss: 1.14715
update best: 0.68341
Epoch: 28, Time: 0.01950s, Loss: 1.10630
update best: 0.68653
Epoch: 29, Time: 0.01967s, Loss: 1.07622
update best: 0.68769

train finished!
best val: 0.68769
test...
final result: epoch: 29
{'accuracy': 0.6876947283744812, 'f1_score': 0.6670244056478333, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=1569)
Epoch: 0, Time: 0.04166s, Loss: 1.94645
update best: 0.12150
Epoch: 1, Time: 0.02349s, Loss: 1.94138
update best: 0.30296
Epoch: 2, Time: 0.02300s, Loss: 1.93518
Epoch: 3, Time: 0.02441s, Loss: 1.92795
Epoch: 4, Time: 0.02427s, Loss: 1.91877
Epoch: 5, Time: 0.02365s, Loss: 1.90701
Epoch: 6, Time: 0.02259s, Loss: 1.89500
update best: 0.30685
Epoch: 7, Time: 0.02264s, Loss: 1.88089
update best: 0.33178
Epoch: 8, Time: 0.02276s, Loss: 1.86411
update best: 0.37539
Epoch: 9, Time: 0.02244s, Loss: 1.84411
update best: 0.39720
Epoch: 10, Time: 0.02247s, Loss: 1.82870
update best: 0.43146
Epoch: 11, Time: 0.02219s, Loss: 1.80470
update best: 0.46729
Epoch: 12, Time: 0.02253s, Loss: 1.77709
update best: 0.49338
Epoch: 13, Time: 0.02278s, Loss: 1.74851
update best: 0.51986
Epoch: 14, Time: 0.02229s, Loss: 1.72314
update best: 0.54868
Epoch: 15, Time: 0.02370s, Loss: 1.69053
update best: 0.57516
Epoch: 16, Time: 0.02298s, Loss: 1.65770
update best: 0.59969
Epoch: 17, Time: 0.02251s, Loss: 1.62754
update best: 0.61682
Epoch: 18, Time: 0.02258s, Loss: 1.58831
update best: 0.63084
Epoch: 19, Time: 0.02241s, Loss: 1.55709
update best: 0.64330
Epoch: 20, Time: 0.02239s, Loss: 1.50894
update best: 0.64564
Epoch: 21, Time: 0.02224s, Loss: 1.46958
update best: 0.64798
Epoch: 22, Time: 0.02241s, Loss: 1.43360
Epoch: 23, Time: 0.02232s, Loss: 1.39029
update best: 0.64992
Epoch: 24, Time: 0.02248s, Loss: 1.35279
update best: 0.65109
Epoch: 25, Time: 0.02273s, Loss: 1.30825
update best: 0.65382
Epoch: 26, Time: 0.02278s, Loss: 1.27415
update best: 0.65732
Epoch: 27, Time: 0.02203s, Loss: 1.23033
Epoch: 28, Time: 0.02228s, Loss: 1.19580
Epoch: 29, Time: 0.02195s, Loss: 1.17116

train finished!
best val: 0.65732
test...
final result: epoch: 26
{'accuracy': 0.6573208570480347, 'f1_score': 0.6339397292291388, 'f1_score -> average@micro': 0.6573208722741433}
Hypergraph(num_v=2708, num_e=1167)
Epoch: 0, Time: 0.03522s, Loss: 1.94655
update best: 0.12188
Epoch: 1, Time: 0.01665s, Loss: 1.94050
update best: 0.36137
Epoch: 2, Time: 0.02212s, Loss: 1.93356
Epoch: 3, Time: 0.01970s, Loss: 1.92526
Epoch: 4, Time: 0.01963s, Loss: 1.91494
Epoch: 5, Time: 0.01913s, Loss: 1.90198
Epoch: 6, Time: 0.02021s, Loss: 1.88824
Epoch: 7, Time: 0.01973s, Loss: 1.87201
update best: 0.36332
Epoch: 8, Time: 0.02065s, Loss: 1.85422
update best: 0.39136
Epoch: 9, Time: 0.02121s, Loss: 1.83320
update best: 0.41316
Epoch: 10, Time: 0.02020s, Loss: 1.81546
update best: 0.45210
Epoch: 11, Time: 0.02311s, Loss: 1.78970
update best: 0.48326
Epoch: 12, Time: 0.01737s, Loss: 1.75844
update best: 0.52181
Epoch: 13, Time: 0.02122s, Loss: 1.72821
update best: 0.53972
Epoch: 14, Time: 0.01968s, Loss: 1.70130
update best: 0.56308
Epoch: 15, Time: 0.01872s, Loss: 1.66473
update best: 0.56970
Epoch: 16, Time: 0.01918s, Loss: 1.62751
update best: 0.58606
Epoch: 17, Time: 0.01915s, Loss: 1.59296
update best: 0.61565
Epoch: 18, Time: 0.01929s, Loss: 1.55566
update best: 0.63240
Epoch: 19, Time: 0.01663s, Loss: 1.51956
update best: 0.64408
Epoch: 20, Time: 0.01976s, Loss: 1.46854
update best: 0.65343
Epoch: 21, Time: 0.01739s, Loss: 1.42859
update best: 0.65693
Epoch: 22, Time: 0.01927s, Loss: 1.38404
update best: 0.66511
Epoch: 23, Time: 0.01932s, Loss: 1.34054
update best: 0.67056
Epoch: 24, Time: 0.01928s, Loss: 1.30011
update best: 0.67523
Epoch: 25, Time: 0.01932s, Loss: 1.25329
update best: 0.67913
Epoch: 26, Time: 0.01932s, Loss: 1.21459
update best: 0.68030
Epoch: 27, Time: 0.01925s, Loss: 1.17088
update best: 0.68224
[I 2024-01-18 04:18:31,936] Trial 16 finished with value: 0.6822429895401001 and parameters: {'border': 0.987}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:19:00,553] Trial 17 finished with value: 0.6713395714759827 and parameters: {'border': 0.968}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:19:30,360] Trial 18 finished with value: 0.625 and parameters: {'border': 0.915}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:19:59,013] Trial 19 finished with value: 0.6822429895401001 and parameters: {'border': 0.987}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:20:43,955] Trial 20 finished with value: 0.6806853413581848 and parameters: {'border': 0.975}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 28, Time: 0.01902s, Loss: 1.13562
Epoch: 29, Time: 0.01916s, Loss: 1.10751

train finished!
best val: 0.68224
test...
final result: epoch: 27
{'accuracy': 0.6822429895401001, 'f1_score': 0.6574355708299444, 'f1_score -> average@micro': 0.6822429906542056}
Hypergraph(num_v=2708, num_e=1532)
Epoch: 0, Time: 0.03301s, Loss: 1.94649
update best: 0.12150
Epoch: 1, Time: 0.02234s, Loss: 1.94098
update best: 0.38201
Epoch: 2, Time: 0.02161s, Loss: 1.93464
Epoch: 3, Time: 0.02142s, Loss: 1.92672
Epoch: 4, Time: 0.02180s, Loss: 1.91746
Epoch: 5, Time: 0.02204s, Loss: 1.90496
Epoch: 6, Time: 0.02172s, Loss: 1.89276
Epoch: 7, Time: 0.02307s, Loss: 1.87767
Epoch: 8, Time: 0.02185s, Loss: 1.86064
update best: 0.39058
Epoch: 9, Time: 0.02278s, Loss: 1.83965
update best: 0.42290
Epoch: 10, Time: 0.02163s, Loss: 1.82318
update best: 0.46145
Epoch: 11, Time: 0.02168s, Loss: 1.79934
update best: 0.48793
Epoch: 12, Time: 0.02170s, Loss: 1.77080
update best: 0.51324
Epoch: 13, Time: 0.02166s, Loss: 1.74093
update best: 0.54400
Epoch: 14, Time: 0.02150s, Loss: 1.71486
update best: 0.55880
Epoch: 15, Time: 0.02181s, Loss: 1.68178
update best: 0.56386
Epoch: 16, Time: 0.02141s, Loss: 1.64813
update best: 0.57788
Epoch: 17, Time: 0.02097s, Loss: 1.61707
update best: 0.60709
Epoch: 18, Time: 0.02135s, Loss: 1.57971
update best: 0.62266
Epoch: 19, Time: 0.01818s, Loss: 1.54580
update best: 0.63941
Epoch: 20, Time: 0.02149s, Loss: 1.49800
update best: 0.64914
Epoch: 21, Time: 0.01859s, Loss: 1.46135
update best: 0.65187
Epoch: 22, Time: 0.02208s, Loss: 1.42428
update best: 0.65460
Epoch: 23, Time: 0.02120s, Loss: 1.37797
update best: 0.65537
Epoch: 24, Time: 0.02044s, Loss: 1.34076
Epoch: 25, Time: 0.02150s, Loss: 1.29835
update best: 0.65693
Epoch: 26, Time: 0.02166s, Loss: 1.26291
update best: 0.66394
Epoch: 27, Time: 0.02137s, Loss: 1.21865
update best: 0.66861
Epoch: 28, Time: 0.02156s, Loss: 1.18830
update best: 0.66978
Epoch: 29, Time: 0.01856s, Loss: 1.16059
update best: 0.67134

train finished!
best val: 0.67134
test...
final result: epoch: 29
{'accuracy': 0.6713395714759827, 'f1_score': 0.6486578849821919, 'f1_score -> average@micro': 0.6713395638629284}
Hypergraph(num_v=2708, num_e=1852)
Epoch: 0, Time: 0.07632s, Loss: 1.94692
update best: 0.12111
Epoch: 1, Time: 0.04598s, Loss: 1.94356
update best: 0.30802
Epoch: 2, Time: 0.04295s, Loss: 1.93996
Epoch: 3, Time: 0.04265s, Loss: 1.93622
Epoch: 4, Time: 0.04550s, Loss: 1.93239
Epoch: 5, Time: 0.04536s, Loss: 1.92670
Epoch: 6, Time: 0.04667s, Loss: 1.92092
update best: 0.30880
Epoch: 7, Time: 0.04537s, Loss: 1.91414
update best: 0.31075
Epoch: 8, Time: 0.04489s, Loss: 1.90617
update best: 0.31425
Epoch: 9, Time: 0.04578s, Loss: 1.89770
update best: 0.31737
Epoch: 10, Time: 0.04695s, Loss: 1.89082
update best: 0.32905
Epoch: 11, Time: 0.04513s, Loss: 1.87926
update best: 0.34930
Epoch: 12, Time: 0.04512s, Loss: 1.86738
update best: 0.37889
Epoch: 13, Time: 0.04581s, Loss: 1.85248
update best: 0.40382
Epoch: 14, Time: 0.04250s, Loss: 1.84205
update best: 0.41900
Epoch: 15, Time: 0.04633s, Loss: 1.82421
update best: 0.43302
Epoch: 16, Time: 0.04603s, Loss: 1.81013
update best: 0.44548
Epoch: 17, Time: 0.04589s, Loss: 1.79326
update best: 0.48481
Epoch: 18, Time: 0.04584s, Loss: 1.77499
update best: 0.52025
Epoch: 19, Time: 0.04499s, Loss: 1.75523
update best: 0.55296
Epoch: 20, Time: 0.04637s, Loss: 1.73326
update best: 0.56737
Epoch: 21, Time: 0.04494s, Loss: 1.70905
update best: 0.58645
Epoch: 22, Time: 0.04287s, Loss: 1.69031
update best: 0.59463
Epoch: 23, Time: 0.04494s, Loss: 1.66577
update best: 0.59618
Epoch: 24, Time: 0.04501s, Loss: 1.63699
Epoch: 25, Time: 0.04437s, Loss: 1.61125
update best: 0.60008
Epoch: 26, Time: 0.04505s, Loss: 1.58727
update best: 0.60709
Epoch: 27, Time: 0.04584s, Loss: 1.56527
update best: 0.61293
Epoch: 28, Time: 0.04510s, Loss: 1.54479
update best: 0.61410
Epoch: 29, Time: 0.04535s, Loss: 1.51978
update best: 0.62500

train finished!
best val: 0.62500
test...
final result: epoch: 29
{'accuracy': 0.625, 'f1_score': 0.5809527209850724, 'f1_score -> average@micro': 0.625}
Hypergraph(num_v=2708, num_e=1167)
Epoch: 0, Time: 0.03364s, Loss: 1.94655
update best: 0.12188
Epoch: 1, Time: 0.01899s, Loss: 1.94050
update best: 0.36137
Epoch: 2, Time: 0.01907s, Loss: 1.93356
Epoch: 3, Time: 0.01981s, Loss: 1.92526
Epoch: 4, Time: 0.01972s, Loss: 1.91494
Epoch: 5, Time: 0.02018s, Loss: 1.90198
Epoch: 6, Time: 0.01940s, Loss: 1.88824
Epoch: 7, Time: 0.01982s, Loss: 1.87201
update best: 0.36332
Epoch: 8, Time: 0.01920s, Loss: 1.85422
update best: 0.39136
Epoch: 9, Time: 0.01916s, Loss: 1.83320
update best: 0.41316
Epoch: 10, Time: 0.01993s, Loss: 1.81546
update best: 0.45210
Epoch: 11, Time: 0.01861s, Loss: 1.78970
update best: 0.48326
Epoch: 12, Time: 0.01886s, Loss: 1.75844
update best: 0.52181
Epoch: 13, Time: 0.01921s, Loss: 1.72821
update best: 0.53972
Epoch: 14, Time: 0.01919s, Loss: 1.70130
update best: 0.56308
Epoch: 15, Time: 0.01910s, Loss: 1.66473
update best: 0.56970
Epoch: 16, Time: 0.01920s, Loss: 1.62751
update best: 0.58606
Epoch: 17, Time: 0.01882s, Loss: 1.59296
update best: 0.61565
Epoch: 18, Time: 0.01945s, Loss: 1.55566
update best: 0.63240
Epoch: 19, Time: 0.01865s, Loss: 1.51956
update best: 0.64408
Epoch: 20, Time: 0.01517s, Loss: 1.46854
update best: 0.65343
Epoch: 21, Time: 0.01611s, Loss: 1.42859
update best: 0.65693
Epoch: 22, Time: 0.01460s, Loss: 1.38404
update best: 0.66511
Epoch: 23, Time: 0.01604s, Loss: 1.34054
update best: 0.67056
Epoch: 24, Time: 0.01598s, Loss: 1.30011
update best: 0.67523
Epoch: 25, Time: 0.01604s, Loss: 1.25329
update best: 0.67913
Epoch: 26, Time: 0.01606s, Loss: 1.21459
update best: 0.68030
Epoch: 27, Time: 0.01463s, Loss: 1.17088
update best: 0.68224
Epoch: 28, Time: 0.01581s, Loss: 1.13562
Epoch: 29, Time: 0.01436s, Loss: 1.10751

train finished!
best val: 0.68224
test...
final result: epoch: 27
{'accuracy': 0.6822429895401001, 'f1_score': 0.6574355708299444, 'f1_score -> average@micro': 0.6822429906542056}
Hypergraph(num_v=2708, num_e=1414)
Epoch: 0, Time: 0.03527s, Loss: 1.94649
update best: 0.12188
Epoch: 1, Time: 0.02163s, Loss: 1.94097
update best: 0.30491
Epoch: 2, Time: 0.02211s, Loss: 1.93435
Epoch: 3, Time: 0.02082s, Loss: 1.92684
Epoch: 4, Time: 0.02001s, Loss: 1.91749
Epoch: 5, Time: 0.02175s, Loss: 1.90488
update best: 0.31114
Epoch: 6, Time: 0.02064s, Loss: 1.89205
update best: 0.32009
Epoch: 7, Time: 0.02189s, Loss: 1.87718
update best: 0.35280
Epoch: 8, Time: 0.02045s, Loss: 1.85932
update best: 0.38201
Epoch: 9, Time: 0.02195s, Loss: 1.83880
update best: 0.42134
Epoch: 10, Time: 0.02231s, Loss: 1.82217
update best: 0.46495
Epoch: 11, Time: 0.02224s, Loss: 1.79651
update best: 0.50701
Epoch: 12, Time: 0.02240s, Loss: 1.76672
update best: 0.53505
Epoch: 13, Time: 0.01723s, Loss: 1.73664
update best: 0.56231
Epoch: 14, Time: 0.01830s, Loss: 1.70951
update best: 0.57749
Epoch: 15, Time: 0.01861s, Loss: 1.67594
update best: 0.60748
Epoch: 16, Time: 0.01730s, Loss: 1.64022
update best: 0.62227
Epoch: 17, Time: 0.01899s, Loss: 1.60615
update best: 0.63629
Epoch: 18, Time: 0.01820s, Loss: 1.56910
update best: 0.65265
Epoch: 19, Time: 0.01796s, Loss: 1.53427
update best: 0.66121
Epoch: 20, Time: 0.01902s, Loss: 1.48720
update best: 0.66238
Epoch: 21, Time: 0.01715s, Loss: 1.44629
update best: 0.66550
Epoch: 22, Time: 0.02030s, Loss: 1.40505
update best: 0.66861
Epoch: 23, Time: 0.01710s, Loss: 1.35909
update best: 0.66978
Epoch: 24, Time: 0.01995s, Loss: 1.31947
update best: 0.67095
Epoch: 25, Time: 0.01699s, Loss: 1.27662
update best: 0.67523
Epoch: 26, Time: 0.01607s, Loss: 1.23783
update best: 0.67640
Epoch: 27, Time: 0.01751s, Loss: 1.19532
update best: 0.67757
Epoch: 28, Time: 0.01687s, Loss: 1.15630
update best: 0.68069
Epoch: 29, Time: 0.02053s, Loss: 1.13221

train finished!
best val: 0.68069
test...
final result: epoch: 28
{'accuracy': 0.6806853413581848, 'f1_score': 0.6611809622880408, 'f1_score -> average@micro': 0.6806853582554517}
Hypergraph(num_v=2708, num_e=971)
Epoch: 0, Time: 0.03145s, Loss: 1.94641
update best: 0.12188
Epoch: 1, Time: 0.01982s, Loss: 1.94033
update best: 0.34307
[I 2024-01-18 04:21:27,969] Trial 21 finished with value: 0.6861370801925659 and parameters: {'border': 1.0}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:22:11,996] Trial 22 finished with value: 0.6857476830482483 and parameters: {'border': 0.993}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:22:40,408] Trial 23 finished with value: 0.6861370801925659 and parameters: {'border': 1.0}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:23:09,304] Trial 24 finished with value: 0.6822429895401001 and parameters: {'border': 0.987}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 2, Time: 0.01919s, Loss: 1.93312
Epoch: 3, Time: 0.01634s, Loss: 1.92471
Epoch: 4, Time: 0.01979s, Loss: 1.91394
Epoch: 5, Time: 0.01878s, Loss: 1.90033
Epoch: 6, Time: 0.01984s, Loss: 1.88647
Epoch: 7, Time: 0.01924s, Loss: 1.87034
update best: 0.36643
Epoch: 8, Time: 0.01934s, Loss: 1.85130
update best: 0.39330
Epoch: 9, Time: 0.01726s, Loss: 1.82924
update best: 0.42718
Epoch: 10, Time: 0.01942s, Loss: 1.81064
update best: 0.46379
Epoch: 11, Time: 0.01943s, Loss: 1.78458
update best: 0.50896
Epoch: 12, Time: 0.01927s, Loss: 1.75335
update best: 0.53388
Epoch: 13, Time: 0.01690s, Loss: 1.72121
update best: 0.55452
Epoch: 14, Time: 0.01978s, Loss: 1.69312
update best: 0.56581
Epoch: 15, Time: 0.02020s, Loss: 1.65749
update best: 0.57710
Epoch: 16, Time: 0.01862s, Loss: 1.61835
update best: 0.58879
Epoch: 17, Time: 0.01928s, Loss: 1.58219
update best: 0.61643
Epoch: 18, Time: 0.01610s, Loss: 1.54515
update best: 0.63435
Epoch: 19, Time: 0.01981s, Loss: 1.50626
update best: 0.64681
Epoch: 20, Time: 0.01961s, Loss: 1.45349
update best: 0.65927
Epoch: 21, Time: 0.01946s, Loss: 1.41288
Epoch: 22, Time: 0.01665s, Loss: 1.37024
update best: 0.66160
Epoch: 23, Time: 0.01825s, Loss: 1.32470
update best: 0.66628
Epoch: 24, Time: 0.01867s, Loss: 1.28567
update best: 0.67484
Epoch: 25, Time: 0.01930s, Loss: 1.23676
update best: 0.67796
Epoch: 26, Time: 0.01967s, Loss: 1.19497
update best: 0.67874
Epoch: 27, Time: 0.01653s, Loss: 1.15239
update best: 0.68146
Epoch: 28, Time: 0.01518s, Loss: 1.11260
update best: 0.68263
Epoch: 29, Time: 0.01534s, Loss: 1.08225
update best: 0.68614

train finished!
best val: 0.68614
test...
final result: epoch: 29
{'accuracy': 0.6861370801925659, 'f1_score': 0.6645933831713843, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1066)
Epoch: 0, Time: 0.03421s, Loss: 1.94661
update best: 0.12188
Epoch: 1, Time: 0.01918s, Loss: 1.94046
update best: 0.30530
Epoch: 2, Time: 0.02059s, Loss: 1.93331
Epoch: 3, Time: 0.02119s, Loss: 1.92522
Epoch: 4, Time: 0.01955s, Loss: 1.91456
update best: 0.30763
Epoch: 5, Time: 0.02081s, Loss: 1.90174
update best: 0.31114
Epoch: 6, Time: 0.01887s, Loss: 1.88815
update best: 0.31970
Epoch: 7, Time: 0.02083s, Loss: 1.87207
update best: 0.33139
Epoch: 8, Time: 0.01964s, Loss: 1.85384
update best: 0.36332
Epoch: 9, Time: 0.01909s, Loss: 1.83240
update best: 0.40849
Epoch: 10, Time: 0.01896s, Loss: 1.81465
update best: 0.44626
Epoch: 11, Time: 0.01814s, Loss: 1.78872
update best: 0.49611
Epoch: 12, Time: 0.02012s, Loss: 1.75774
update best: 0.53154
Epoch: 13, Time: 0.01886s, Loss: 1.72686
update best: 0.54712
Epoch: 14, Time: 0.02012s, Loss: 1.69984
update best: 0.56386
Epoch: 15, Time: 0.01995s, Loss: 1.66400
update best: 0.57126
Epoch: 16, Time: 0.01948s, Loss: 1.62690
update best: 0.58450
Epoch: 17, Time: 0.01945s, Loss: 1.59191
update best: 0.60125
Epoch: 18, Time: 0.01957s, Loss: 1.55389
update best: 0.62383
Epoch: 19, Time: 0.01949s, Loss: 1.51634
update best: 0.64603
Epoch: 20, Time: 0.01937s, Loss: 1.46539
update best: 0.65460
Epoch: 21, Time: 0.01929s, Loss: 1.42424
update best: 0.66083
Epoch: 22, Time: 0.02317s, Loss: 1.38151
update best: 0.66783
Epoch: 23, Time: 0.01948s, Loss: 1.33602
update best: 0.66939
Epoch: 24, Time: 0.01532s, Loss: 1.29777
update best: 0.67056
Epoch: 25, Time: 0.01928s, Loss: 1.24729
update best: 0.67523
Epoch: 26, Time: 0.01826s, Loss: 1.20611
update best: 0.67874
Epoch: 27, Time: 0.01953s, Loss: 1.16709
update best: 0.68146
Epoch: 28, Time: 0.01958s, Loss: 1.12644
update best: 0.68419
Epoch: 29, Time: 0.01940s, Loss: 1.09693
update best: 0.68575

train finished!
best val: 0.68575
test...
final result: epoch: 29
{'accuracy': 0.6857476830482483, 'f1_score': 0.6643047200238158, 'f1_score -> average@micro': 0.6857476635514018}
Hypergraph(num_v=2708, num_e=971)
Epoch: 0, Time: 0.03121s, Loss: 1.94641
update best: 0.12188
Epoch: 1, Time: 0.01819s, Loss: 1.94033
update best: 0.34307
Epoch: 2, Time: 0.02124s, Loss: 1.93312
Epoch: 3, Time: 0.02005s, Loss: 1.92471
Epoch: 4, Time: 0.01827s, Loss: 1.91394
Epoch: 5, Time: 0.01836s, Loss: 1.90033
Epoch: 6, Time: 0.01741s, Loss: 1.88647
Epoch: 7, Time: 0.01970s, Loss: 1.87034
update best: 0.36643
Epoch: 8, Time: 0.01966s, Loss: 1.85130
update best: 0.39330
Epoch: 9, Time: 0.01907s, Loss: 1.82924
update best: 0.42718
Epoch: 10, Time: 0.01970s, Loss: 1.81064
update best: 0.46379
Epoch: 11, Time: 0.01952s, Loss: 1.78458
update best: 0.50896
Epoch: 12, Time: 0.01965s, Loss: 1.75335
update best: 0.53388
Epoch: 13, Time: 0.01965s, Loss: 1.72121
update best: 0.55452
Epoch: 14, Time: 0.01966s, Loss: 1.69312
update best: 0.56581
Epoch: 15, Time: 0.01974s, Loss: 1.65749
update best: 0.57710
Epoch: 16, Time: 0.01859s, Loss: 1.61835
update best: 0.58879
Epoch: 17, Time: 0.01820s, Loss: 1.58219
update best: 0.61643
Epoch: 18, Time: 0.01789s, Loss: 1.54515
update best: 0.63435
Epoch: 19, Time: 0.01964s, Loss: 1.50626
update best: 0.64681
Epoch: 20, Time: 0.01942s, Loss: 1.45349
update best: 0.65927
Epoch: 21, Time: 0.01819s, Loss: 1.41288
Epoch: 22, Time: 0.01811s, Loss: 1.37024
update best: 0.66160
Epoch: 23, Time: 0.01928s, Loss: 1.32470
update best: 0.66628
Epoch: 24, Time: 0.01995s, Loss: 1.28567
update best: 0.67484
Epoch: 25, Time: 0.01931s, Loss: 1.23676
update best: 0.67796
Epoch: 26, Time: 0.01976s, Loss: 1.19497
update best: 0.67874
Epoch: 27, Time: 0.01942s, Loss: 1.15239
update best: 0.68146
Epoch: 28, Time: 0.01984s, Loss: 1.11260
update best: 0.68263
Epoch: 29, Time: 0.01966s, Loss: 1.08225
update best: 0.68614

train finished!
best val: 0.68614
test...
final result: epoch: 29
{'accuracy': 0.6861370801925659, 'f1_score': 0.6645933831713843, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1167)
Epoch: 0, Time: 0.03235s, Loss: 1.94655
update best: 0.12188
Epoch: 1, Time: 0.02027s, Loss: 1.94050
update best: 0.36137
Epoch: 2, Time: 0.02138s, Loss: 1.93356
Epoch: 3, Time: 0.02134s, Loss: 1.92526
Epoch: 4, Time: 0.01989s, Loss: 1.91494
Epoch: 5, Time: 0.02081s, Loss: 1.90198
Epoch: 6, Time: 0.02087s, Loss: 1.88824
Epoch: 7, Time: 0.02111s, Loss: 1.87201
update best: 0.36332
Epoch: 8, Time: 0.01965s, Loss: 1.85422
update best: 0.39136
Epoch: 9, Time: 0.01975s, Loss: 1.83320
update best: 0.41316
Epoch: 10, Time: 0.01980s, Loss: 1.81546
update best: 0.45210
Epoch: 11, Time: 0.02047s, Loss: 1.78970
update best: 0.48326
Epoch: 12, Time: 0.02243s, Loss: 1.75844
update best: 0.52181
Epoch: 13, Time: 0.01993s, Loss: 1.72821
update best: 0.53972
Epoch: 14, Time: 0.02056s, Loss: 1.70130
update best: 0.56308
Epoch: 15, Time: 0.02321s, Loss: 1.66473
update best: 0.56970
Epoch: 16, Time: 0.01927s, Loss: 1.62751
update best: 0.58606
Epoch: 17, Time: 0.01970s, Loss: 1.59296
update best: 0.61565
Epoch: 18, Time: 0.01968s, Loss: 1.55566
update best: 0.63240
Epoch: 19, Time: 0.01846s, Loss: 1.51956
update best: 0.64408
Epoch: 20, Time: 0.01887s, Loss: 1.46854
update best: 0.65343
Epoch: 21, Time: 0.01939s, Loss: 1.42859
update best: 0.65693
Epoch: 22, Time: 0.01881s, Loss: 1.38404
update best: 0.66511
Epoch: 23, Time: 0.01958s, Loss: 1.34054
update best: 0.67056
Epoch: 24, Time: 0.01944s, Loss: 1.30011
update best: 0.67523
Epoch: 25, Time: 0.01918s, Loss: 1.25329
update best: 0.67913
Epoch: 26, Time: 0.01942s, Loss: 1.21459
update best: 0.68030
Epoch: 27, Time: 0.01916s, Loss: 1.17088
update best: 0.68224
Epoch: 28, Time: 0.01940s, Loss: 1.13562
Epoch: 29, Time: 0.02183s, Loss: 1.10751

train finished!
best val: 0.68224
test...
final result: epoch: 27
{'accuracy': 0.6822429895401001, 'f1_score': 0.6574355708299444, 'f1_score -> average@micro': 0.6822429906542056}
Hypergraph(num_v=2708, num_e=1472)
Epoch: 0, Time: 0.03659s, Loss: 1.94653
update best: 0.12227
Epoch: 1, Time: 0.02135s, Loss: 1.94087
update best: 0.30452
Epoch: 2, Time: 0.02263s, Loss: 1.93418
Epoch: 3, Time: 0.02267s, Loss: 1.92612
Epoch: 4, Time: 0.02348s, Loss: 1.91662
Epoch: 5, Time: 0.01871s, Loss: 1.90378
update best: 0.30607
Epoch: 6, Time: 0.01900s, Loss: 1.89099
update best: 0.32477
Epoch: 7, Time: 0.02302s, Loss: 1.87564
update best: 0.36137
Epoch: 8, Time: 0.01913s, Loss: 1.85759
update best: 0.39213
[I 2024-01-18 04:23:37,827] Trial 25 finished with value: 0.6717289686203003 and parameters: {'border': 0.972}. Best is trial 11 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:24:06,737] Trial 26 finished with value: 0.6884735226631165 and parameters: {'border': 0.984}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:24:35,557] Trial 27 finished with value: 0.6849688291549683 and parameters: {'border': 0.983}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:25:03,958] Trial 28 finished with value: 0.6853582262992859 and parameters: {'border': 0.994}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 9, Time: 0.02052s, Loss: 1.83643
update best: 0.42445
Epoch: 10, Time: 0.02279s, Loss: 1.81918
update best: 0.47313
Epoch: 11, Time: 0.02109s, Loss: 1.79348
update best: 0.50545
Epoch: 12, Time: 0.01960s, Loss: 1.76411
update best: 0.54322
Epoch: 13, Time: 0.02149s, Loss: 1.73476
update best: 0.55997
Epoch: 14, Time: 0.02410s, Loss: 1.70616
update best: 0.57165
Epoch: 15, Time: 0.02214s, Loss: 1.67186
update best: 0.59735
Epoch: 16, Time: 0.02140s, Loss: 1.63594
update best: 0.62033
Epoch: 17, Time: 0.02220s, Loss: 1.60378
update best: 0.63629
Epoch: 18, Time: 0.01901s, Loss: 1.56476
update best: 0.65304
Epoch: 19, Time: 0.02053s, Loss: 1.52987
update best: 0.65615
Epoch: 20, Time: 0.02184s, Loss: 1.48328
Epoch: 21, Time: 0.02391s, Loss: 1.44283
Epoch: 22, Time: 0.02214s, Loss: 1.40191
update best: 0.65966
Epoch: 23, Time: 0.01750s, Loss: 1.35544
update best: 0.66433
Epoch: 24, Time: 0.01992s, Loss: 1.31733
update best: 0.66550
Epoch: 25, Time: 0.02225s, Loss: 1.27503
update best: 0.66939
Epoch: 26, Time: 0.02134s, Loss: 1.23890
Epoch: 27, Time: 0.02214s, Loss: 1.19493
update best: 0.67134
Epoch: 28, Time: 0.02122s, Loss: 1.15832
Epoch: 29, Time: 0.01844s, Loss: 1.13232
update best: 0.67173

train finished!
best val: 0.67173
test...
final result: epoch: 29
{'accuracy': 0.6717289686203003, 'f1_score': 0.6520928705096602, 'f1_score -> average@micro': 0.6717289719626168}
Hypergraph(num_v=2708, num_e=1231)
Epoch: 0, Time: 0.03234s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.01659s, Loss: 1.94050
update best: 0.35903
Epoch: 2, Time: 0.01770s, Loss: 1.93351
Epoch: 3, Time: 0.02024s, Loss: 1.92539
Epoch: 4, Time: 0.01994s, Loss: 1.91512
Epoch: 5, Time: 0.01958s, Loss: 1.90216
Epoch: 6, Time: 0.01911s, Loss: 1.88841
Epoch: 7, Time: 0.01896s, Loss: 1.87295
update best: 0.36332
Epoch: 8, Time: 0.02017s, Loss: 1.85512
update best: 0.39058
Epoch: 9, Time: 0.02129s, Loss: 1.83423
update best: 0.41978
Epoch: 10, Time: 0.02081s, Loss: 1.81577
update best: 0.45989
Epoch: 11, Time: 0.01686s, Loss: 1.79055
update best: 0.49922
Epoch: 12, Time: 0.01915s, Loss: 1.75967
update best: 0.53427
Epoch: 13, Time: 0.02039s, Loss: 1.72999
update best: 0.55413
Epoch: 14, Time: 0.01913s, Loss: 1.70253
update best: 0.56386
Epoch: 15, Time: 0.02039s, Loss: 1.66737
update best: 0.57477
Epoch: 16, Time: 0.01996s, Loss: 1.63064
update best: 0.58489
Epoch: 17, Time: 0.02052s, Loss: 1.59538
update best: 0.61020
Epoch: 18, Time: 0.02042s, Loss: 1.55820
update best: 0.63201
Epoch: 19, Time: 0.02024s, Loss: 1.52172
update best: 0.64097
Epoch: 20, Time: 0.02062s, Loss: 1.47175
update best: 0.65031
Epoch: 21, Time: 0.01983s, Loss: 1.43212
update best: 0.65810
Epoch: 22, Time: 0.02041s, Loss: 1.38867
update best: 0.66706
Epoch: 23, Time: 0.02018s, Loss: 1.34108
update best: 0.66939
Epoch: 24, Time: 0.02067s, Loss: 1.30372
update best: 0.67290
Epoch: 25, Time: 0.02030s, Loss: 1.25607
update best: 0.67874
Epoch: 26, Time: 0.01994s, Loss: 1.21814
update best: 0.68030
Epoch: 27, Time: 0.01997s, Loss: 1.17242
update best: 0.68458
Epoch: 28, Time: 0.02162s, Loss: 1.13717
update best: 0.68847
Epoch: 29, Time: 0.01896s, Loss: 1.10892

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6656316248022973, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1255)
Epoch: 0, Time: 0.03380s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.01949s, Loss: 1.94056
update best: 0.31269
Epoch: 2, Time: 0.02271s, Loss: 1.93354
Epoch: 3, Time: 0.02349s, Loss: 1.92540
Epoch: 4, Time: 0.02160s, Loss: 1.91536
Epoch: 5, Time: 0.01956s, Loss: 1.90277
update best: 0.31698
Epoch: 6, Time: 0.02692s, Loss: 1.88941
update best: 0.32321
Epoch: 7, Time: 0.02056s, Loss: 1.87323
update best: 0.34657
Epoch: 8, Time: 0.02611s, Loss: 1.85615
update best: 0.37266
Epoch: 9, Time: 0.02232s, Loss: 1.83597
update best: 0.40226
Epoch: 10, Time: 0.02196s, Loss: 1.81795
update best: 0.44393
Epoch: 11, Time: 0.02159s, Loss: 1.79352
update best: 0.47469
Epoch: 12, Time: 0.02022s, Loss: 1.76298
update best: 0.50662
Epoch: 13, Time: 0.02048s, Loss: 1.73436
update best: 0.53466
Epoch: 14, Time: 0.01669s, Loss: 1.70780
update best: 0.55569
Epoch: 15, Time: 0.02156s, Loss: 1.67268
update best: 0.56854
Epoch: 16, Time: 0.02132s, Loss: 1.63722
update best: 0.57671
Epoch: 17, Time: 0.02055s, Loss: 1.60288
update best: 0.59151
Epoch: 18, Time: 0.02149s, Loss: 1.56713
update best: 0.61838
Epoch: 19, Time: 0.01941s, Loss: 1.53034
update best: 0.63318
Epoch: 20, Time: 0.01987s, Loss: 1.48350
update best: 0.64330
Epoch: 21, Time: 0.01910s, Loss: 1.44192
update best: 0.65187
Epoch: 22, Time: 0.02105s, Loss: 1.39956
update best: 0.66238
Epoch: 23, Time: 0.02046s, Loss: 1.35380
update best: 0.66861
Epoch: 24, Time: 0.02086s, Loss: 1.31408
update best: 0.67212
Epoch: 25, Time: 0.02092s, Loss: 1.27004
update best: 0.67445
Epoch: 26, Time: 0.02069s, Loss: 1.23186
update best: 0.67952
Epoch: 27, Time: 0.02117s, Loss: 1.18439
update best: 0.68146
Epoch: 28, Time: 0.01986s, Loss: 1.15004
update best: 0.68497
Epoch: 29, Time: 0.02014s, Loss: 1.11990

train finished!
best val: 0.68497
test...
final result: epoch: 28
{'accuracy': 0.6849688291549683, 'f1_score': 0.6619911171061926, 'f1_score -> average@micro': 0.6849688473520249}
Hypergraph(num_v=2708, num_e=1052)
Epoch: 0, Time: 0.03386s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.01804s, Loss: 1.94050
update best: 0.32749
Epoch: 2, Time: 0.02250s, Loss: 1.93335
Epoch: 3, Time: 0.02573s, Loss: 1.92515
Epoch: 4, Time: 0.02402s, Loss: 1.91451
Epoch: 5, Time: 0.02023s, Loss: 1.90157
Epoch: 6, Time: 0.02019s, Loss: 1.88786
update best: 0.33139
Epoch: 7, Time: 0.02272s, Loss: 1.87211
update best: 0.36449
Epoch: 8, Time: 0.02265s, Loss: 1.85359
update best: 0.39759
Epoch: 9, Time: 0.01909s, Loss: 1.83219
update best: 0.43107
Epoch: 10, Time: 0.02307s, Loss: 1.81391
update best: 0.47157
Epoch: 11, Time: 0.02300s, Loss: 1.78814
update best: 0.51558
Epoch: 12, Time: 0.02518s, Loss: 1.75709
update best: 0.53972
Epoch: 13, Time: 0.02128s, Loss: 1.72614
update best: 0.55802
Epoch: 14, Time: 0.01943s, Loss: 1.69877
update best: 0.57009
Epoch: 15, Time: 0.02344s, Loss: 1.66284
update best: 0.57905
Epoch: 16, Time: 0.01796s, Loss: 1.62512
update best: 0.58840
Epoch: 17, Time: 0.02095s, Loss: 1.59013
update best: 0.61137
Epoch: 18, Time: 0.01946s, Loss: 1.55191
update best: 0.63435
Epoch: 19, Time: 0.01944s, Loss: 1.51419
update best: 0.64486
Epoch: 20, Time: 0.01928s, Loss: 1.46331
update best: 0.65226
Epoch: 21, Time: 0.01969s, Loss: 1.42184
update best: 0.66005
Epoch: 22, Time: 0.01915s, Loss: 1.37961
update best: 0.66706
Epoch: 23, Time: 0.01979s, Loss: 1.33292
update best: 0.67212
Epoch: 24, Time: 0.01895s, Loss: 1.29399
update best: 0.67407
Epoch: 25, Time: 0.01908s, Loss: 1.24427
update best: 0.67679
Epoch: 26, Time: 0.01912s, Loss: 1.20319
update best: 0.67757
Epoch: 27, Time: 0.01881s, Loss: 1.16329
update best: 0.68263
Epoch: 28, Time: 0.01566s, Loss: 1.12280
update best: 0.68497
Epoch: 29, Time: 0.01942s, Loss: 1.09395
update best: 0.68536

train finished!
best val: 0.68536
test...
final result: epoch: 29
{'accuracy': 0.6853582262992859, 'f1_score': 0.6652326123031386, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=1066)
Epoch: 0, Time: 0.02987s, Loss: 1.94661
update best: 0.12188
Epoch: 1, Time: 0.01820s, Loss: 1.94046
update best: 0.30530
Epoch: 2, Time: 0.01569s, Loss: 1.93331
Epoch: 3, Time: 0.01963s, Loss: 1.92522
Epoch: 4, Time: 0.01972s, Loss: 1.91456
update best: 0.30763
Epoch: 5, Time: 0.01946s, Loss: 1.90174
update best: 0.31114
Epoch: 6, Time: 0.02288s, Loss: 1.88815
update best: 0.31970
Epoch: 7, Time: 0.02158s, Loss: 1.87207
update best: 0.33139
Epoch: 8, Time: 0.01972s, Loss: 1.85384
update best: 0.36332
Epoch: 9, Time: 0.03191s, Loss: 1.83240
update best: 0.40849
Epoch: 10, Time: 0.02789s, Loss: 1.81465
update best: 0.44626
Epoch: 11, Time: 0.01926s, Loss: 1.78872
update best: 0.49611
Epoch: 12, Time: 0.03794s, Loss: 1.75774
update best: 0.53154
Epoch: 13, Time: 0.02080s, Loss: 1.72686
update best: 0.54712
[I 2024-01-18 04:25:32,530] Trial 29 finished with value: 0.6857476830482483 and parameters: {'border': 0.993}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:26:01,030] Trial 30 finished with value: 0.6861370801925659 and parameters: {'border': 0.986}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:26:29,405] Trial 31 finished with value: 0.6857476830482483 and parameters: {'border': 0.993}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:27:14,108] Trial 32 finished with value: 0.6861370801925659 and parameters: {'border': 1.0}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 14, Time: 0.02090s, Loss: 1.69984
update best: 0.56386
Epoch: 15, Time: 0.02169s, Loss: 1.66400
update best: 0.57126
Epoch: 16, Time: 0.02035s, Loss: 1.62690
update best: 0.58450
Epoch: 17, Time: 0.02001s, Loss: 1.59191
update best: 0.60125
Epoch: 18, Time: 0.02146s, Loss: 1.55389
update best: 0.62383
Epoch: 19, Time: 0.02375s, Loss: 1.51634
update best: 0.64603
Epoch: 20, Time: 0.01963s, Loss: 1.46539
update best: 0.65460
Epoch: 21, Time: 0.02013s, Loss: 1.42424
update best: 0.66083
Epoch: 22, Time: 0.01888s, Loss: 1.38151
update best: 0.66783
Epoch: 23, Time: 0.02163s, Loss: 1.33602
update best: 0.66939
Epoch: 24, Time: 0.02884s, Loss: 1.29777
update best: 0.67056
Epoch: 25, Time: 0.01784s, Loss: 1.24729
update best: 0.67523
Epoch: 26, Time: 0.01951s, Loss: 1.20611
update best: 0.67874
Epoch: 27, Time: 0.02134s, Loss: 1.16709
update best: 0.68146
Epoch: 28, Time: 0.02039s, Loss: 1.12644
update best: 0.68419
Epoch: 29, Time: 0.02078s, Loss: 1.09693
update best: 0.68575

train finished!
best val: 0.68575
test...
final result: epoch: 29
{'accuracy': 0.6857476830482483, 'f1_score': 0.6643047200238158, 'f1_score -> average@micro': 0.6857476635514018}
Hypergraph(num_v=2708, num_e=1185)
Epoch: 0, Time: 0.03480s, Loss: 1.94663
update best: 0.12188
Epoch: 1, Time: 0.01963s, Loss: 1.94038
update best: 0.31114
Epoch: 2, Time: 0.02110s, Loss: 1.93330
Epoch: 3, Time: 0.02062s, Loss: 1.92500
Epoch: 4, Time: 0.02063s, Loss: 1.91457
update best: 0.31153
Epoch: 5, Time: 0.01897s, Loss: 1.90153
update best: 0.31620
Epoch: 6, Time: 0.01903s, Loss: 1.88766
update best: 0.32204
Epoch: 7, Time: 0.01915s, Loss: 1.87171
update best: 0.33879
Epoch: 8, Time: 0.02253s, Loss: 1.85352
update best: 0.37539
Epoch: 9, Time: 0.02362s, Loss: 1.83184
update best: 0.40460
Epoch: 10, Time: 0.01907s, Loss: 1.81360
update best: 0.44626
Epoch: 11, Time: 0.01917s, Loss: 1.78824
update best: 0.47508
Epoch: 12, Time: 0.01911s, Loss: 1.75643
update best: 0.52103
Epoch: 13, Time: 0.02021s, Loss: 1.72621
update best: 0.54595
Epoch: 14, Time: 0.02190s, Loss: 1.69845
update best: 0.56192
Epoch: 15, Time: 0.01920s, Loss: 1.66152
update best: 0.57009
Epoch: 16, Time: 0.02214s, Loss: 1.62307
update best: 0.58333
Epoch: 17, Time: 0.02000s, Loss: 1.58902
update best: 0.60631
Epoch: 18, Time: 0.01826s, Loss: 1.55067
update best: 0.63045
Epoch: 19, Time: 0.02168s, Loss: 1.51208
update best: 0.64252
Epoch: 20, Time: 0.02208s, Loss: 1.46314
update best: 0.65148
Epoch: 21, Time: 0.02633s, Loss: 1.42213
update best: 0.66199
Epoch: 22, Time: 0.02268s, Loss: 1.37623
update best: 0.66900
Epoch: 23, Time: 0.02549s, Loss: 1.33290
update best: 0.67173
Epoch: 24, Time: 0.02888s, Loss: 1.29185
update best: 0.67523
Epoch: 25, Time: 0.02183s, Loss: 1.24411
update best: 0.67835
Epoch: 26, Time: 0.02288s, Loss: 1.20520
update best: 0.68069
Epoch: 27, Time: 0.02177s, Loss: 1.16083
update best: 0.68302
Epoch: 28, Time: 0.01925s, Loss: 1.12508
update best: 0.68614
Epoch: 29, Time: 0.01932s, Loss: 1.09512

train finished!
best val: 0.68614
test...
final result: epoch: 28
{'accuracy': 0.6861370801925659, 'f1_score': 0.6633122522599343, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1066)
Epoch: 0, Time: 0.02992s, Loss: 1.94661
update best: 0.12188
Epoch: 1, Time: 0.01843s, Loss: 1.94046
update best: 0.30530
Epoch: 2, Time: 0.01944s, Loss: 1.93331
Epoch: 3, Time: 0.02399s, Loss: 1.92522
Epoch: 4, Time: 0.01974s, Loss: 1.91456
update best: 0.30763
Epoch: 5, Time: 0.01900s, Loss: 1.90174
update best: 0.31114
Epoch: 6, Time: 0.02126s, Loss: 1.88815
update best: 0.31970
Epoch: 7, Time: 0.02275s, Loss: 1.87207
update best: 0.33139
Epoch: 8, Time: 0.02094s, Loss: 1.85384
update best: 0.36332
Epoch: 9, Time: 0.01920s, Loss: 1.83240
update best: 0.40849
Epoch: 10, Time: 0.02146s, Loss: 1.81465
update best: 0.44626
Epoch: 11, Time: 0.02136s, Loss: 1.78872
update best: 0.49611
Epoch: 12, Time: 0.01942s, Loss: 1.75774
update best: 0.53154
Epoch: 13, Time: 0.02321s, Loss: 1.72686
update best: 0.54712
Epoch: 14, Time: 0.02132s, Loss: 1.69984
update best: 0.56386
Epoch: 15, Time: 0.02140s, Loss: 1.66400
update best: 0.57126
Epoch: 16, Time: 0.02373s, Loss: 1.62690
update best: 0.58450
Epoch: 17, Time: 0.01962s, Loss: 1.59191
update best: 0.60125
Epoch: 18, Time: 0.02358s, Loss: 1.55389
update best: 0.62383
Epoch: 19, Time: 0.02011s, Loss: 1.51634
update best: 0.64603
Epoch: 20, Time: 0.02292s, Loss: 1.46539
update best: 0.65460
Epoch: 21, Time: 0.01715s, Loss: 1.42424
update best: 0.66083
Epoch: 22, Time: 0.01760s, Loss: 1.38151
update best: 0.66783
Epoch: 23, Time: 0.02130s, Loss: 1.33602
update best: 0.66939
Epoch: 24, Time: 0.02148s, Loss: 1.29777
update best: 0.67056
Epoch: 25, Time: 0.01660s, Loss: 1.24729
update best: 0.67523
Epoch: 26, Time: 0.01443s, Loss: 1.20611
update best: 0.67874
Epoch: 27, Time: 0.01468s, Loss: 1.16709
update best: 0.68146
Epoch: 28, Time: 0.01841s, Loss: 1.12644
update best: 0.68419
Epoch: 29, Time: 0.01424s, Loss: 1.09693
update best: 0.68575

train finished!
best val: 0.68575
test...
final result: epoch: 29
{'accuracy': 0.6857476830482483, 'f1_score': 0.6643047200238158, 'f1_score -> average@micro': 0.6857476635514018}
Hypergraph(num_v=2708, num_e=971)
Epoch: 0, Time: 0.02860s, Loss: 1.94641
update best: 0.12188
Epoch: 1, Time: 0.01973s, Loss: 1.94033
update best: 0.34307
Epoch: 2, Time: 0.02136s, Loss: 1.93312
Epoch: 3, Time: 0.02001s, Loss: 1.92471
Epoch: 4, Time: 0.01989s, Loss: 1.91394
Epoch: 5, Time: 0.02002s, Loss: 1.90033
Epoch: 6, Time: 0.02095s, Loss: 1.88647
Epoch: 7, Time: 0.02272s, Loss: 1.87034
update best: 0.36643
Epoch: 8, Time: 0.01955s, Loss: 1.85130
update best: 0.39330
Epoch: 9, Time: 0.01926s, Loss: 1.82924
update best: 0.42718
Epoch: 10, Time: 0.02287s, Loss: 1.81064
update best: 0.46379
Epoch: 11, Time: 0.01954s, Loss: 1.78458
update best: 0.50896
Epoch: 12, Time: 0.02327s, Loss: 1.75335
update best: 0.53388
Epoch: 13, Time: 0.02324s, Loss: 1.72121
update best: 0.55452
Epoch: 14, Time: 0.02337s, Loss: 1.69312
update best: 0.56581
Epoch: 15, Time: 0.01941s, Loss: 1.65749
update best: 0.57710
Epoch: 16, Time: 0.02201s, Loss: 1.61835
update best: 0.58879
Epoch: 17, Time: 0.01869s, Loss: 1.58219
update best: 0.61643
Epoch: 18, Time: 0.02301s, Loss: 1.54515
update best: 0.63435
Epoch: 19, Time: 0.02105s, Loss: 1.50626
update best: 0.64681
Epoch: 20, Time: 0.01897s, Loss: 1.45349
update best: 0.65927
Epoch: 21, Time: 0.01917s, Loss: 1.41288
Epoch: 22, Time: 0.01971s, Loss: 1.37024
update best: 0.66160
Epoch: 23, Time: 0.01976s, Loss: 1.32470
update best: 0.66628
Epoch: 24, Time: 0.01919s, Loss: 1.28567
update best: 0.67484
Epoch: 25, Time: 0.01955s, Loss: 1.23676
update best: 0.67796
Epoch: 26, Time: 0.01945s, Loss: 1.19497
update best: 0.67874
Epoch: 27, Time: 0.01958s, Loss: 1.15239
update best: 0.68146
Epoch: 28, Time: 0.01942s, Loss: 1.11260
update best: 0.68263
Epoch: 29, Time: 0.01946s, Loss: 1.08225
update best: 0.68614

train finished!
best val: 0.68614
test...
final result: epoch: 29
{'accuracy': 0.6861370801925659, 'f1_score': 0.6645933831713843, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1299)
Epoch: 0, Time: 0.03610s, Loss: 1.94655
update best: 0.12188
Epoch: 1, Time: 0.02137s, Loss: 1.94069
update best: 0.31075
Epoch: 2, Time: 0.02283s, Loss: 1.93371
Epoch: 3, Time: 0.01947s, Loss: 1.92579
update best: 0.31231
Epoch: 4, Time: 0.02142s, Loss: 1.91566
update best: 0.31659
Epoch: 5, Time: 0.02411s, Loss: 1.90310
update best: 0.32165
Epoch: 6, Time: 0.02665s, Loss: 1.88959
update best: 0.33294
Epoch: 7, Time: 0.02092s, Loss: 1.87414
update best: 0.36565
Epoch: 8, Time: 0.02226s, Loss: 1.85638
update best: 0.39486
Epoch: 9, Time: 0.02234s, Loss: 1.83581
update best: 0.42991
Epoch: 10, Time: 0.02231s, Loss: 1.81786
update best: 0.47547
Epoch: 11, Time: 0.02083s, Loss: 1.79278
update best: 0.51636
Epoch: 12, Time: 0.02232s, Loss: 1.76274
update best: 0.55101
Epoch: 13, Time: 0.02377s, Loss: 1.73319
update best: 0.56114
Epoch: 14, Time: 0.02152s, Loss: 1.70580
update best: 0.56931
Epoch: 15, Time: 0.02053s, Loss: 1.67139
update best: 0.57749
Epoch: 16, Time: 0.02104s, Loss: 1.63617
[I 2024-01-18 04:27:42,538] Trial 33 finished with value: 0.6802959442138672 and parameters: {'border': 0.981}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:28:11,176] Trial 34 finished with value: 0.6869158744812012 and parameters: {'border': 0.991}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:28:39,982] Trial 35 finished with value: 0.6736760139465332 and parameters: {'border': 0.9710000000000001}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:29:24,646] Trial 36 finished with value: 0.6542056202888489 and parameters: {'border': 0.9570000000000001}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
update best: 0.58333
Epoch: 17, Time: 0.02131s, Loss: 1.60213
update best: 0.60553
Epoch: 18, Time: 0.02005s, Loss: 1.56499
update best: 0.63045
Epoch: 19, Time: 0.02256s, Loss: 1.52812
update best: 0.64914
Epoch: 20, Time: 0.02065s, Loss: 1.48051
update best: 0.64953
Epoch: 21, Time: 0.01846s, Loss: 1.43963
update best: 0.66316
Epoch: 22, Time: 0.01969s, Loss: 1.39769
update best: 0.66706
Epoch: 23, Time: 0.02084s, Loss: 1.35053
update best: 0.66783
Epoch: 24, Time: 0.02052s, Loss: 1.31354
update best: 0.67484
Epoch: 25, Time: 0.02127s, Loss: 1.26760
Epoch: 26, Time: 0.01776s, Loss: 1.22837
Epoch: 27, Time: 0.02014s, Loss: 1.18420
update best: 0.67952
Epoch: 28, Time: 0.01982s, Loss: 1.15017
update best: 0.67991
Epoch: 29, Time: 0.01769s, Loss: 1.11926
update best: 0.68030

train finished!
best val: 0.68030
test...
final result: epoch: 29
{'accuracy': 0.6802959442138672, 'f1_score': 0.6582997033539028, 'f1_score -> average@micro': 0.6802959501557633}
Hypergraph(num_v=2708, num_e=1102)
Epoch: 0, Time: 0.03176s, Loss: 1.94657
update best: 0.12188
Epoch: 1, Time: 0.01740s, Loss: 1.94023
update best: 0.30607
Epoch: 2, Time: 0.01967s, Loss: 1.93316
Epoch: 3, Time: 0.01951s, Loss: 1.92488
Epoch: 4, Time: 0.02014s, Loss: 1.91427
Epoch: 5, Time: 0.02013s, Loss: 1.90135
Epoch: 6, Time: 0.01735s, Loss: 1.88781
update best: 0.31542
Epoch: 7, Time: 0.01971s, Loss: 1.87181
update best: 0.33294
Epoch: 8, Time: 0.01940s, Loss: 1.85377
update best: 0.36254
Epoch: 9, Time: 0.01934s, Loss: 1.83219
update best: 0.39914
Epoch: 10, Time: 0.01932s, Loss: 1.81465
update best: 0.43692
Epoch: 11, Time: 0.01947s, Loss: 1.78920
update best: 0.48014
Epoch: 12, Time: 0.01948s, Loss: 1.75812
update best: 0.52142
Epoch: 13, Time: 0.01942s, Loss: 1.72718
update best: 0.54322
Epoch: 14, Time: 0.02297s, Loss: 1.70052
update best: 0.55997
Epoch: 15, Time: 0.01763s, Loss: 1.66493
update best: 0.57204
Epoch: 16, Time: 0.02176s, Loss: 1.62775
update best: 0.58061
Epoch: 17, Time: 0.01962s, Loss: 1.59314
update best: 0.58995
Epoch: 18, Time: 0.01954s, Loss: 1.55636
update best: 0.61137
Epoch: 19, Time: 0.01944s, Loss: 1.51844
update best: 0.63318
Epoch: 20, Time: 0.01939s, Loss: 1.46758
update best: 0.64564
Epoch: 21, Time: 0.02019s, Loss: 1.42809
update best: 0.65421
Epoch: 22, Time: 0.01915s, Loss: 1.38406
update best: 0.65888
Epoch: 23, Time: 0.01949s, Loss: 1.34019
update best: 0.66628
Epoch: 24, Time: 0.01955s, Loss: 1.30156
update best: 0.67056
Epoch: 25, Time: 0.01945s, Loss: 1.25232
update best: 0.67445
Epoch: 26, Time: 0.01935s, Loss: 1.21016
update best: 0.68030
Epoch: 27, Time: 0.02051s, Loss: 1.16988
update best: 0.68224
Epoch: 28, Time: 0.02003s, Loss: 1.13035
update best: 0.68692
Epoch: 29, Time: 0.01944s, Loss: 1.10171

train finished!
best val: 0.68692
test...
final result: epoch: 28
{'accuracy': 0.6869158744812012, 'f1_score': 0.6625469363553543, 'f1_score -> average@micro': 0.6869158878504673}
Hypergraph(num_v=2708, num_e=1485)
Epoch: 0, Time: 0.03728s, Loss: 1.94652
update best: 0.12188
Epoch: 1, Time: 0.02130s, Loss: 1.94093
update best: 0.30607
Epoch: 2, Time: 0.02677s, Loss: 1.93426
Epoch: 3, Time: 0.02031s, Loss: 1.92640
Epoch: 4, Time: 0.02368s, Loss: 1.91684
Epoch: 5, Time: 0.02288s, Loss: 1.90400
update best: 0.31075
Epoch: 6, Time: 0.02230s, Loss: 1.89153
update best: 0.32243
Epoch: 7, Time: 0.02306s, Loss: 1.87601
update best: 0.35670
Epoch: 8, Time: 0.02332s, Loss: 1.85821
update best: 0.38396
Epoch: 9, Time: 0.02377s, Loss: 1.83700
update best: 0.42056
Epoch: 10, Time: 0.02222s, Loss: 1.82008
update best: 0.46768
Epoch: 11, Time: 0.02226s, Loss: 1.79494
update best: 0.50273
Epoch: 12, Time: 0.02228s, Loss: 1.76559
update best: 0.53505
Epoch: 13, Time: 0.01834s, Loss: 1.73612
update best: 0.55763
Epoch: 14, Time: 0.02166s, Loss: 1.70776
update best: 0.56893
Epoch: 15, Time: 0.02414s, Loss: 1.67401
update best: 0.58022
Epoch: 16, Time: 0.02066s, Loss: 1.63821
update best: 0.61410
Epoch: 17, Time: 0.02205s, Loss: 1.60653
update best: 0.63084
Epoch: 18, Time: 0.01958s, Loss: 1.56757
update best: 0.64720
Epoch: 19, Time: 0.02647s, Loss: 1.53319
update best: 0.65187
Epoch: 20, Time: 0.02075s, Loss: 1.48575
Epoch: 21, Time: 0.02104s, Loss: 1.44629
Epoch: 22, Time: 0.02069s, Loss: 1.40585
update best: 0.65615
Epoch: 23, Time: 0.02416s, Loss: 1.35949
update best: 0.66121
Epoch: 24, Time: 0.02249s, Loss: 1.32130
update best: 0.66238
Epoch: 25, Time: 0.02126s, Loss: 1.27874
update best: 0.66745
Epoch: 26, Time: 0.02128s, Loss: 1.24231
update best: 0.66822
Epoch: 27, Time: 0.02210s, Loss: 1.19875
update best: 0.67173
Epoch: 28, Time: 0.02266s, Loss: 1.16356
Epoch: 29, Time: 0.02109s, Loss: 1.13768
update best: 0.67368

train finished!
best val: 0.67368
test...
final result: epoch: 29
{'accuracy': 0.6736760139465332, 'f1_score': 0.6546869214200245, 'f1_score -> average@micro': 0.6736760124610592}
Hypergraph(num_v=2708, num_e=1621)
Epoch: 0, Time: 0.04504s, Loss: 1.94643
update best: 0.12188
Epoch: 1, Time: 0.02529s, Loss: 1.94148
update best: 0.31698
Epoch: 2, Time: 0.02531s, Loss: 1.93528
Epoch: 3, Time: 0.02692s, Loss: 1.92838
Epoch: 4, Time: 0.02436s, Loss: 1.91904
Epoch: 5, Time: 0.02424s, Loss: 1.90792
Epoch: 6, Time: 0.02430s, Loss: 1.89644
update best: 0.31970
Epoch: 7, Time: 0.02449s, Loss: 1.88327
update best: 0.34657
Epoch: 8, Time: 0.02424s, Loss: 1.86652
update best: 0.37967
Epoch: 9, Time: 0.02610s, Loss: 1.84669
update best: 0.40576
Epoch: 10, Time: 0.02428s, Loss: 1.83246
update best: 0.43731
Epoch: 11, Time: 0.02394s, Loss: 1.80884
update best: 0.46573
Epoch: 12, Time: 0.02403s, Loss: 1.78218
update best: 0.49182
Epoch: 13, Time: 0.02427s, Loss: 1.75525
update best: 0.52103
Epoch: 14, Time: 0.02309s, Loss: 1.73021
update best: 0.54945
Epoch: 15, Time: 0.02495s, Loss: 1.69925
update best: 0.56192
Epoch: 16, Time: 0.02430s, Loss: 1.66790
update best: 0.58956
Epoch: 17, Time: 0.02432s, Loss: 1.63753
update best: 0.60553
Epoch: 18, Time: 0.02441s, Loss: 1.60083
update best: 0.61410
Epoch: 19, Time: 0.02409s, Loss: 1.56999
update best: 0.62344
Epoch: 20, Time: 0.02459s, Loss: 1.52434
update best: 0.63357
Epoch: 21, Time: 0.02477s, Loss: 1.48731
update best: 0.64174
Epoch: 22, Time: 0.02600s, Loss: 1.45402
update best: 0.64369
Epoch: 23, Time: 0.02389s, Loss: 1.41040
Epoch: 24, Time: 0.02414s, Loss: 1.37330
update best: 0.64720
Epoch: 25, Time: 0.02404s, Loss: 1.33014
update best: 0.65031
Epoch: 26, Time: 0.02405s, Loss: 1.29659
update best: 0.65109
Epoch: 27, Time: 0.02441s, Loss: 1.25813
update best: 0.65226
Epoch: 28, Time: 0.02454s, Loss: 1.22464
update best: 0.65421
Epoch: 29, Time: 0.02418s, Loss: 1.19762

train finished!
best val: 0.65421
test...
final result: epoch: 28
{'accuracy': 0.6542056202888489, 'f1_score': 0.6284467340499889, 'f1_score -> average@micro': 0.6542056074766355}
Hypergraph(num_v=2708, num_e=1734)
Epoch: 0, Time: 0.05928s, Loss: 1.94671
update best: 0.12188
Epoch: 1, Time: 0.03397s, Loss: 1.94255
update best: 0.30296
Epoch: 2, Time: 0.03773s, Loss: 1.93801
Epoch: 3, Time: 0.03328s, Loss: 1.93292
Epoch: 4, Time: 0.03268s, Loss: 1.92701
Epoch: 5, Time: 0.03429s, Loss: 1.91877
update best: 0.30374
Epoch: 6, Time: 0.03628s, Loss: 1.91056
update best: 0.30763
Epoch: 7, Time: 0.03425s, Loss: 1.90073
update best: 0.31153
Epoch: 8, Time: 0.03817s, Loss: 1.88925
update best: 0.32671
Epoch: 9, Time: 0.03644s, Loss: 1.87622
update best: 0.35436
Epoch: 10, Time: 0.03717s, Loss: 1.86531
update best: 0.38863
Epoch: 11, Time: 0.03704s, Loss: 1.84893
update best: 0.41667
Epoch: 12, Time: 0.03362s, Loss: 1.83013
update best: 0.44782
Epoch: 13, Time: 0.03293s, Loss: 1.80970
update best: 0.47274
Epoch: 14, Time: 0.03514s, Loss: 1.79455
update best: 0.48442
Epoch: 15, Time: 0.03273s, Loss: 1.77029
update best: 0.49533
Epoch: 16, Time: 0.03287s, Loss: 1.74678
update best: 0.52648
Epoch: 17, Time: 0.03247s, Loss: 1.72298
update best: 0.55023
Epoch: 18, Time: 0.03420s, Loss: 1.69651
update best: 0.57749
Epoch: 19, Time: 0.03346s, Loss: 1.67299
update best: 0.59463
Epoch: 20, Time: 0.03253s, Loss: 1.63657
update best: 0.60397
Epoch: 21, Time: 0.03465s, Loss: 1.60848
update best: 0.61410
Epoch: 22, Time: 0.03256s, Loss: 1.58013
[I 2024-01-18 04:30:09,773] Trial 37 finished with value: 0.6359034180641174 and parameters: {'border': 0.934}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:30:38,698] Trial 38 finished with value: 0.6783488988876343 and parameters: {'border': 0.977}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:31:07,347] Trial 39 finished with value: 0.6876947283744812 and parameters: {'border': 0.995}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:31:51,992] Trial 40 finished with value: 0.6849688291549683 and parameters: {'border': 0.983}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
update best: 0.61955
Epoch: 23, Time: 0.03253s, Loss: 1.54829
update best: 0.62072
Epoch: 24, Time: 0.03520s, Loss: 1.51213
Epoch: 25, Time: 0.03308s, Loss: 1.48084
Epoch: 26, Time: 0.03258s, Loss: 1.44711
update best: 0.62461
Epoch: 27, Time: 0.03225s, Loss: 1.41646
update best: 0.63123
Epoch: 28, Time: 0.03265s, Loss: 1.38846
update best: 0.63590
Epoch: 29, Time: 0.03544s, Loss: 1.35938

train finished!
best val: 0.63590
test...
final result: epoch: 28
{'accuracy': 0.6359034180641174, 'f1_score': 0.6023678490443928, 'f1_score -> average@micro': 0.6359034267912772}
Hypergraph(num_v=2708, num_e=1379)
Epoch: 0, Time: 0.03970s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.02275s, Loss: 1.94101
update best: 0.36488
Epoch: 2, Time: 0.02353s, Loss: 1.93433
Epoch: 3, Time: 0.02329s, Loss: 1.92662
Epoch: 4, Time: 0.01950s, Loss: 1.91700
Epoch: 5, Time: 0.01798s, Loss: 1.90432
Epoch: 6, Time: 0.02247s, Loss: 1.89139
Epoch: 7, Time: 0.02251s, Loss: 1.87630
update best: 0.37734
Epoch: 8, Time: 0.02190s, Loss: 1.85829
update best: 0.40732
Epoch: 9, Time: 0.02166s, Loss: 1.83801
update best: 0.44276
Epoch: 10, Time: 0.01874s, Loss: 1.82132
update best: 0.49377
Epoch: 11, Time: 0.02072s, Loss: 1.79589
update best: 0.52998
Epoch: 12, Time: 0.02112s, Loss: 1.76592
update best: 0.55374
Epoch: 13, Time: 0.02151s, Loss: 1.73613
update best: 0.56620
Epoch: 14, Time: 0.02131s, Loss: 1.70883
update best: 0.57477
Epoch: 15, Time: 0.01855s, Loss: 1.67371
update best: 0.57749
Epoch: 16, Time: 0.02254s, Loss: 1.63830
update best: 0.60553
Epoch: 17, Time: 0.02231s, Loss: 1.60461
update best: 0.63045
Epoch: 18, Time: 0.02178s, Loss: 1.56738
update best: 0.64252
Epoch: 19, Time: 0.02366s, Loss: 1.53163
update best: 0.65382
Epoch: 20, Time: 0.02149s, Loss: 1.48427
update best: 0.65576
Epoch: 21, Time: 0.02081s, Loss: 1.44324
update best: 0.65849
Epoch: 22, Time: 0.01939s, Loss: 1.40271
update best: 0.66394
Epoch: 23, Time: 0.02184s, Loss: 1.35483
update best: 0.66822
Epoch: 24, Time: 0.02328s, Loss: 1.31683
Epoch: 25, Time: 0.02284s, Loss: 1.27361
update best: 0.67173
Epoch: 26, Time: 0.02060s, Loss: 1.23339
update best: 0.67290
Epoch: 27, Time: 0.02104s, Loss: 1.18958
update best: 0.67329
Epoch: 28, Time: 0.02206s, Loss: 1.15407
update best: 0.67718
Epoch: 29, Time: 0.02074s, Loss: 1.12820
update best: 0.67835

train finished!
best val: 0.67835
test...
final result: epoch: 29
{'accuracy': 0.6783488988876343, 'f1_score': 0.6601141054534718, 'f1_score -> average@micro': 0.6783489096573209}
Hypergraph(num_v=2708, num_e=1037)
Epoch: 0, Time: 0.03094s, Loss: 1.94646
update best: 0.12188
Epoch: 1, Time: 0.01849s, Loss: 1.94036
update best: 0.32282
Epoch: 2, Time: 0.01927s, Loss: 1.93307
Epoch: 3, Time: 0.02008s, Loss: 1.92470
Epoch: 4, Time: 0.02169s, Loss: 1.91394
Epoch: 5, Time: 0.01608s, Loss: 1.90061
Epoch: 6, Time: 0.02127s, Loss: 1.88657
update best: 0.33645
Epoch: 7, Time: 0.01928s, Loss: 1.87068
update best: 0.36916
Epoch: 8, Time: 0.01906s, Loss: 1.85183
update best: 0.40109
Epoch: 9, Time: 0.01918s, Loss: 1.83007
update best: 0.43536
Epoch: 10, Time: 0.02053s, Loss: 1.81120
update best: 0.48326
Epoch: 11, Time: 0.02036s, Loss: 1.78446
update best: 0.51947
Epoch: 12, Time: 0.02000s, Loss: 1.75368
update best: 0.54439
Epoch: 13, Time: 0.01962s, Loss: 1.72217
update best: 0.56386
Epoch: 14, Time: 0.02105s, Loss: 1.69389
update best: 0.57243
Epoch: 15, Time: 0.01878s, Loss: 1.65720
update best: 0.57983
Epoch: 16, Time: 0.01972s, Loss: 1.61841
update best: 0.59540
Epoch: 17, Time: 0.01957s, Loss: 1.58269
update best: 0.62227
Epoch: 18, Time: 0.01999s, Loss: 1.54365
update best: 0.63746
Epoch: 19, Time: 0.01960s, Loss: 1.50569
update best: 0.64992
Epoch: 20, Time: 0.01880s, Loss: 1.45334
update best: 0.65304
Epoch: 21, Time: 0.01586s, Loss: 1.41104
update best: 0.66511
Epoch: 22, Time: 0.01654s, Loss: 1.36811
update best: 0.67212
Epoch: 23, Time: 0.01922s, Loss: 1.32060
update best: 0.67329
Epoch: 24, Time: 0.01598s, Loss: 1.28125
update best: 0.67874
Epoch: 25, Time: 0.01634s, Loss: 1.23209
Epoch: 26, Time: 0.01959s, Loss: 1.19108
update best: 0.68030
Epoch: 27, Time: 0.02017s, Loss: 1.14918
update best: 0.68224
Epoch: 28, Time: 0.01898s, Loss: 1.10796
update best: 0.68497
Epoch: 29, Time: 0.02170s, Loss: 1.07922
update best: 0.68769

train finished!
best val: 0.68769
test...
final result: epoch: 29
{'accuracy': 0.6876947283744812, 'f1_score': 0.669290144157837, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=1255)
Epoch: 0, Time: 0.03020s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.02114s, Loss: 1.94056
update best: 0.31269
Epoch: 2, Time: 0.01916s, Loss: 1.93354
Epoch: 3, Time: 0.02090s, Loss: 1.92540
Epoch: 4, Time: 0.01949s, Loss: 1.91536
Epoch: 5, Time: 0.02137s, Loss: 1.90277
update best: 0.31698
Epoch: 6, Time: 0.02004s, Loss: 1.88941
update best: 0.32321
Epoch: 7, Time: 0.02267s, Loss: 1.87323
update best: 0.34657
Epoch: 8, Time: 0.02096s, Loss: 1.85615
update best: 0.37266
Epoch: 9, Time: 0.02018s, Loss: 1.83597
update best: 0.40226
Epoch: 10, Time: 0.01676s, Loss: 1.81795
update best: 0.44393
Epoch: 11, Time: 0.01970s, Loss: 1.79352
update best: 0.47469
Epoch: 12, Time: 0.02199s, Loss: 1.76298
update best: 0.50662
Epoch: 13, Time: 0.02291s, Loss: 1.73436
update best: 0.53466
Epoch: 14, Time: 0.02085s, Loss: 1.70780
update best: 0.55569
Epoch: 15, Time: 0.02109s, Loss: 1.67268
update best: 0.56854
Epoch: 16, Time: 0.02254s, Loss: 1.63722
update best: 0.57671
Epoch: 17, Time: 0.02157s, Loss: 1.60288
update best: 0.59151
Epoch: 18, Time: 0.02459s, Loss: 1.56713
update best: 0.61838
Epoch: 19, Time: 0.02686s, Loss: 1.53034
update best: 0.63318
Epoch: 20, Time: 0.02071s, Loss: 1.48350
update best: 0.64330
Epoch: 21, Time: 0.02112s, Loss: 1.44192
update best: 0.65187
Epoch: 22, Time: 0.02101s, Loss: 1.39956
update best: 0.66238
Epoch: 23, Time: 0.02078s, Loss: 1.35380
update best: 0.66861
Epoch: 24, Time: 0.02292s, Loss: 1.31408
update best: 0.67212
Epoch: 25, Time: 0.02051s, Loss: 1.27004
update best: 0.67445
Epoch: 26, Time: 0.02151s, Loss: 1.23186
update best: 0.67952
Epoch: 27, Time: 0.02283s, Loss: 1.18439
update best: 0.68146
Epoch: 28, Time: 0.02164s, Loss: 1.15004
update best: 0.68497
Epoch: 29, Time: 0.02031s, Loss: 1.11990

train finished!
best val: 0.68497
test...
final result: epoch: 28
{'accuracy': 0.6849688291549683, 'f1_score': 0.6619911171061926, 'f1_score -> average@micro': 0.6849688473520249}
Hypergraph(num_v=2708, num_e=1015)
Epoch: 0, Time: 0.03255s, Loss: 1.94642
update best: 0.12188
Epoch: 1, Time: 0.02436s, Loss: 1.94028
update best: 0.32593
Epoch: 2, Time: 0.02241s, Loss: 1.93299
Epoch: 3, Time: 0.02110s, Loss: 1.92455
Epoch: 4, Time: 0.02065s, Loss: 1.91378
Epoch: 5, Time: 0.01943s, Loss: 1.90025
Epoch: 6, Time: 0.01999s, Loss: 1.88620
update best: 0.33333
Epoch: 7, Time: 0.01936s, Loss: 1.87036
update best: 0.36526
Epoch: 8, Time: 0.02332s, Loss: 1.85112
update best: 0.39798
Epoch: 9, Time: 0.01924s, Loss: 1.82961
update best: 0.43185
Epoch: 10, Time: 0.01933s, Loss: 1.81013
update best: 0.48131
Epoch: 11, Time: 0.01934s, Loss: 1.78340
update best: 0.51791
Epoch: 12, Time: 0.01999s, Loss: 1.75307
update best: 0.54361
Epoch: 13, Time: 0.02002s, Loss: 1.72114
update best: 0.56075
Epoch: 14, Time: 0.02037s, Loss: 1.69269
update best: 0.56620
Epoch: 15, Time: 0.02083s, Loss: 1.65639
update best: 0.58100
Epoch: 16, Time: 0.01949s, Loss: 1.61603
update best: 0.59579
Epoch: 17, Time: 0.02146s, Loss: 1.58205
update best: 0.61877
Epoch: 18, Time: 0.02500s, Loss: 1.54252
update best: 0.63357
Epoch: 19, Time: 0.01846s, Loss: 1.50568
update best: 0.64798
Epoch: 20, Time: 0.02028s, Loss: 1.45255
update best: 0.65382
Epoch: 21, Time: 0.01944s, Loss: 1.41179
update best: 0.66199
Epoch: 22, Time: 0.01777s, Loss: 1.36878
update best: 0.66783
Epoch: 23, Time: 0.02106s, Loss: 1.32157
update best: 0.67445
Epoch: 24, Time: 0.01951s, Loss: 1.28223
update best: 0.67601
Epoch: 25, Time: 0.01783s, Loss: 1.23443
update best: 0.67952
Epoch: 26, Time: 0.02077s, Loss: 1.19332
Epoch: 27, Time: 0.02405s, Loss: 1.15050
update best: 0.68263
Epoch: 28, Time: 0.02158s, Loss: 1.11064
Epoch: 29, Time: 0.02613s, Loss: 1.08114[I 2024-01-18 04:32:36,607] Trial 41 finished with value: 0.6849688291549683 and parameters: {'border': 0.997}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:33:05,313] Trial 42 finished with value: 0.6865264773368835 and parameters: {'border': 0.99}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:33:33,770] Trial 43 finished with value: 0.6849688291549683 and parameters: {'border': 0.997}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:34:02,235] Trial 44 finished with value: 0.6865264773368835 and parameters: {'border': 0.99}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:34:37,088] Trial 45 finished with value: 0.6861370801925659 and parameters: {'border': 1.0}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)

update best: 0.68497

train finished!
best val: 0.68497
test...
final result: epoch: 29
{'accuracy': 0.6849688291549683, 'f1_score': 0.6628909362208615, 'f1_score -> average@micro': 0.6849688473520249}
Hypergraph(num_v=2708, num_e=1119)
Epoch: 0, Time: 0.03251s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.01745s, Loss: 1.94027
update best: 0.30841
Epoch: 2, Time: 0.02266s, Loss: 1.93326
Epoch: 3, Time: 0.02101s, Loss: 1.92501
Epoch: 4, Time: 0.02132s, Loss: 1.91444
Epoch: 5, Time: 0.01959s, Loss: 1.90159
update best: 0.30919
Epoch: 6, Time: 0.02272s, Loss: 1.88816
update best: 0.31815
Epoch: 7, Time: 0.02276s, Loss: 1.87208
update best: 0.33684
Epoch: 8, Time: 0.01908s, Loss: 1.85454
update best: 0.36799
Epoch: 9, Time: 0.01926s, Loss: 1.83281
update best: 0.40265
Epoch: 10, Time: 0.01925s, Loss: 1.81538
update best: 0.43653
Epoch: 11, Time: 0.01922s, Loss: 1.79014
update best: 0.48209
Epoch: 12, Time: 0.02337s, Loss: 1.75918
update best: 0.51752
Epoch: 13, Time: 0.01933s, Loss: 1.72879
update best: 0.54361
Epoch: 14, Time: 0.02108s, Loss: 1.70217
update best: 0.55646
Epoch: 15, Time: 0.02157s, Loss: 1.66618
update best: 0.56815
Epoch: 16, Time: 0.01953s, Loss: 1.62988
update best: 0.57788
Epoch: 17, Time: 0.01917s, Loss: 1.59530
update best: 0.58333
Epoch: 18, Time: 0.01914s, Loss: 1.55911
update best: 0.61020
Epoch: 19, Time: 0.02050s, Loss: 1.52161
update best: 0.63162
Epoch: 20, Time: 0.02558s, Loss: 1.47123
update best: 0.64798
Epoch: 21, Time: 0.01948s, Loss: 1.43162
update best: 0.65226
Epoch: 22, Time: 0.02245s, Loss: 1.38823
update best: 0.65732
Epoch: 23, Time: 0.01974s, Loss: 1.34428
update best: 0.66589
Epoch: 24, Time: 0.01964s, Loss: 1.30236
update best: 0.66978
Epoch: 25, Time: 0.01943s, Loss: 1.25610
update best: 0.67407
Epoch: 26, Time: 0.02328s, Loss: 1.21598
update best: 0.67874
Epoch: 27, Time: 0.01944s, Loss: 1.17445
update best: 0.68224
Epoch: 28, Time: 0.02089s, Loss: 1.13478
update best: 0.68497
Epoch: 29, Time: 0.02347s, Loss: 1.10521
update best: 0.68653

train finished!
best val: 0.68653
test...
final result: epoch: 29
{'accuracy': 0.6865264773368835, 'f1_score': 0.6621840167514158, 'f1_score -> average@micro': 0.6865264797507789}
Hypergraph(num_v=2708, num_e=1015)
Epoch: 0, Time: 0.02940s, Loss: 1.94642
update best: 0.12188
Epoch: 1, Time: 0.01986s, Loss: 1.94028
update best: 0.32593
Epoch: 2, Time: 0.02264s, Loss: 1.93299
Epoch: 3, Time: 0.02206s, Loss: 1.92455
Epoch: 4, Time: 0.01868s, Loss: 1.91378
Epoch: 5, Time: 0.02269s, Loss: 1.90025
Epoch: 6, Time: 0.02051s, Loss: 1.88620
update best: 0.33333
Epoch: 7, Time: 0.01912s, Loss: 1.87036
update best: 0.36526
Epoch: 8, Time: 0.02286s, Loss: 1.85112
update best: 0.39798
Epoch: 9, Time: 0.01561s, Loss: 1.82961
update best: 0.43185
Epoch: 10, Time: 0.02141s, Loss: 1.81013
update best: 0.48131
Epoch: 11, Time: 0.01963s, Loss: 1.78340
update best: 0.51791
Epoch: 12, Time: 0.01951s, Loss: 1.75307
update best: 0.54361
Epoch: 13, Time: 0.01954s, Loss: 1.72114
update best: 0.56075
Epoch: 14, Time: 0.01958s, Loss: 1.69269
update best: 0.56620
Epoch: 15, Time: 0.01949s, Loss: 1.65639
update best: 0.58100
Epoch: 16, Time: 0.01954s, Loss: 1.61603
update best: 0.59579
Epoch: 17, Time: 0.01951s, Loss: 1.58205
update best: 0.61877
Epoch: 18, Time: 0.02348s, Loss: 1.54252
update best: 0.63357
Epoch: 19, Time: 0.01976s, Loss: 1.50568
update best: 0.64798
Epoch: 20, Time: 0.02464s, Loss: 1.45255
update best: 0.65382
Epoch: 21, Time: 0.01986s, Loss: 1.41179
update best: 0.66199
Epoch: 22, Time: 0.02236s, Loss: 1.36878
update best: 0.66783
Epoch: 23, Time: 0.01944s, Loss: 1.32157
update best: 0.67445
Epoch: 24, Time: 0.02770s, Loss: 1.28223
update best: 0.67601
Epoch: 25, Time: 0.01989s, Loss: 1.23443
update best: 0.67952
Epoch: 26, Time: 0.01971s, Loss: 1.19332
Epoch: 27, Time: 0.01901s, Loss: 1.15050
update best: 0.68263
Epoch: 28, Time: 0.02181s, Loss: 1.11064
Epoch: 29, Time: 0.02143s, Loss: 1.08114
update best: 0.68497

train finished!
best val: 0.68497
test...
final result: epoch: 29
{'accuracy': 0.6849688291549683, 'f1_score': 0.6628909362208615, 'f1_score -> average@micro': 0.6849688473520249}
Hypergraph(num_v=2708, num_e=1119)
Epoch: 0, Time: 0.03225s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.01875s, Loss: 1.94027
update best: 0.30841
Epoch: 2, Time: 0.02261s, Loss: 1.93326
Epoch: 3, Time: 0.02207s, Loss: 1.92501
Epoch: 4, Time: 0.02151s, Loss: 1.91444
Epoch: 5, Time: 0.02743s, Loss: 1.90159
update best: 0.30919
Epoch: 6, Time: 0.02562s, Loss: 1.88816
update best: 0.31815
Epoch: 7, Time: 0.02132s, Loss: 1.87208
update best: 0.33684
Epoch: 8, Time: 0.01787s, Loss: 1.85454
update best: 0.36799
Epoch: 9, Time: 0.01498s, Loss: 1.83281
update best: 0.40265
Epoch: 10, Time: 0.01732s, Loss: 1.81538
update best: 0.43653
Epoch: 11, Time: 0.01773s, Loss: 1.79014
update best: 0.48209
Epoch: 12, Time: 0.01694s, Loss: 1.75918
update best: 0.51752
Epoch: 13, Time: 0.01690s, Loss: 1.72879
update best: 0.54361
Epoch: 14, Time: 0.01750s, Loss: 1.70217
update best: 0.55646
Epoch: 15, Time: 0.01652s, Loss: 1.66618
update best: 0.56815
Epoch: 16, Time: 0.01616s, Loss: 1.62988
update best: 0.57788
Epoch: 17, Time: 0.01735s, Loss: 1.59530
update best: 0.58333
Epoch: 18, Time: 0.01515s, Loss: 1.55911
update best: 0.61020
Epoch: 19, Time: 0.01639s, Loss: 1.52161
update best: 0.63162
Epoch: 20, Time: 0.01691s, Loss: 1.47123
update best: 0.64798
Epoch: 21, Time: 0.01677s, Loss: 1.43162
update best: 0.65226
Epoch: 22, Time: 0.01455s, Loss: 1.38823
update best: 0.65732
Epoch: 23, Time: 0.01637s, Loss: 1.34428
update best: 0.66589
Epoch: 24, Time: 0.01502s, Loss: 1.30236
update best: 0.66978
Epoch: 25, Time: 0.01468s, Loss: 1.25610
update best: 0.67407
Epoch: 26, Time: 0.01529s, Loss: 1.21598
update best: 0.67874
Epoch: 27, Time: 0.01522s, Loss: 1.17445
update best: 0.68224
Epoch: 28, Time: 0.01516s, Loss: 1.13478
update best: 0.68497
Epoch: 29, Time: 0.01429s, Loss: 1.10521
update best: 0.68653

train finished!
best val: 0.68653
test...
final result: epoch: 29
{'accuracy': 0.6865264773368835, 'f1_score': 0.6621840167514158, 'f1_score -> average@micro': 0.6865264797507789}
Hypergraph(num_v=2708, num_e=971)
Epoch: 0, Time: 0.03333s, Loss: 1.94641
update best: 0.12188
Epoch: 1, Time: 0.02068s, Loss: 1.94033
update best: 0.34307
Epoch: 2, Time: 0.02110s, Loss: 1.93312
Epoch: 3, Time: 0.02029s, Loss: 1.92471
Epoch: 4, Time: 0.01932s, Loss: 1.91394
Epoch: 5, Time: 0.01969s, Loss: 1.90033
Epoch: 6, Time: 0.01972s, Loss: 1.88647
Epoch: 7, Time: 0.01975s, Loss: 1.87034
update best: 0.36643
Epoch: 8, Time: 0.01915s, Loss: 1.85130
update best: 0.39330
Epoch: 9, Time: 0.01965s, Loss: 1.82924
update best: 0.42718
Epoch: 10, Time: 0.01954s, Loss: 1.81064
update best: 0.46379
Epoch: 11, Time: 0.01953s, Loss: 1.78458
update best: 0.50896
Epoch: 12, Time: 0.01958s, Loss: 1.75335
update best: 0.53388
Epoch: 13, Time: 0.02097s, Loss: 1.72121
update best: 0.55452
Epoch: 14, Time: 0.01960s, Loss: 1.69312
update best: 0.56581
Epoch: 15, Time: 0.01906s, Loss: 1.65749
update best: 0.57710
Epoch: 16, Time: 0.01992s, Loss: 1.61835
update best: 0.58879
Epoch: 17, Time: 0.01871s, Loss: 1.58219
update best: 0.61643
Epoch: 18, Time: 0.01973s, Loss: 1.54515
update best: 0.63435
Epoch: 19, Time: 0.02144s, Loss: 1.50626
update best: 0.64681
Epoch: 20, Time: 0.01689s, Loss: 1.45349
update best: 0.65927
Epoch: 21, Time: 0.01520s, Loss: 1.41288
Epoch: 22, Time: 0.01441s, Loss: 1.37024
update best: 0.66160
Epoch: 23, Time: 0.01384s, Loss: 1.32470
update best: 0.66628
Epoch: 24, Time: 0.01288s, Loss: 1.28567
update best: 0.67484
Epoch: 25, Time: 0.01471s, Loss: 1.23676
update best: 0.67796
Epoch: 26, Time: 0.01300s, Loss: 1.19497
update best: 0.67874
Epoch: 27, Time: 0.01309s, Loss: 1.15239
update best: 0.68146
Epoch: 28, Time: 0.01469s, Loss: 1.11260
update best: 0.68263
Epoch: 29, Time: 0.01359s, Loss: 1.08225
update best: 0.68614

train finished!
best val: 0.68614
test...
final result: epoch: 29
{'accuracy': 0.6861370801925659, 'f1_score': 0.6645933831713843, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1299)
Epoch: 0, Time: 0.02953s, Loss: 1.94655
update best: 0.12188
[I 2024-01-18 04:35:05,666] Trial 46 finished with value: 0.6802959442138672 and parameters: {'border': 0.981}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:35:50,379] Trial 47 finished with value: 0.6861370801925659 and parameters: {'border': 0.988}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:36:18,988] Trial 48 finished with value: 0.6577102541923523 and parameters: {'border': 0.9630000000000001}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:36:47,760] Trial 49 finished with value: 0.6499221324920654 and parameters: {'border': 0.9440000000000001}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 1, Time: 0.01995s, Loss: 1.94069
update best: 0.31075
Epoch: 2, Time: 0.02254s, Loss: 1.93371
Epoch: 3, Time: 0.01936s, Loss: 1.92579
update best: 0.31231
Epoch: 4, Time: 0.02285s, Loss: 1.91566
update best: 0.31659
Epoch: 5, Time: 0.01807s, Loss: 1.90310
update best: 0.32165
Epoch: 6, Time: 0.01825s, Loss: 1.88959
update best: 0.33294
Epoch: 7, Time: 0.02109s, Loss: 1.87414
update best: 0.36565
Epoch: 8, Time: 0.02219s, Loss: 1.85638
update best: 0.39486
Epoch: 9, Time: 0.02206s, Loss: 1.83581
update best: 0.42991
Epoch: 10, Time: 0.02353s, Loss: 1.81786
update best: 0.47547
Epoch: 11, Time: 0.02135s, Loss: 1.79278
update best: 0.51636
Epoch: 12, Time: 0.02152s, Loss: 1.76274
update best: 0.55101
Epoch: 13, Time: 0.02333s, Loss: 1.73319
update best: 0.56114
Epoch: 14, Time: 0.02147s, Loss: 1.70580
update best: 0.56931
Epoch: 15, Time: 0.01884s, Loss: 1.67139
update best: 0.57749
Epoch: 16, Time: 0.01816s, Loss: 1.63617
update best: 0.58333
Epoch: 17, Time: 0.01928s, Loss: 1.60213
update best: 0.60553
Epoch: 18, Time: 0.02097s, Loss: 1.56499
update best: 0.63045
Epoch: 19, Time: 0.02059s, Loss: 1.52812
update best: 0.64914
Epoch: 20, Time: 0.02140s, Loss: 1.48051
update best: 0.64953
Epoch: 21, Time: 0.02104s, Loss: 1.43963
update best: 0.66316
Epoch: 22, Time: 0.01882s, Loss: 1.39769
update best: 0.66706
Epoch: 23, Time: 0.02127s, Loss: 1.35053
update best: 0.66783
Epoch: 24, Time: 0.02247s, Loss: 1.31354
update best: 0.67484
Epoch: 25, Time: 0.02154s, Loss: 1.26760
Epoch: 26, Time: 0.02244s, Loss: 1.22837
Epoch: 27, Time: 0.02321s, Loss: 1.18420
update best: 0.67952
Epoch: 28, Time: 0.02459s, Loss: 1.15017
update best: 0.67991
Epoch: 29, Time: 0.02072s, Loss: 1.11926
update best: 0.68030

train finished!
best val: 0.68030
test...
final result: epoch: 29
{'accuracy': 0.6802959442138672, 'f1_score': 0.6582997033539028, 'f1_score -> average@micro': 0.6802959501557633}
Hypergraph(num_v=2708, num_e=1150)
Epoch: 0, Time: 0.03446s, Loss: 1.94653
update best: 0.12188
Epoch: 1, Time: 0.01984s, Loss: 1.94059
update best: 0.36449
Epoch: 2, Time: 0.02122s, Loss: 1.93353
Epoch: 3, Time: 0.01970s, Loss: 1.92516
Epoch: 4, Time: 0.01969s, Loss: 1.91465
Epoch: 5, Time: 0.01974s, Loss: 1.90151
Epoch: 6, Time: 0.02586s, Loss: 1.88785
Epoch: 7, Time: 0.02146s, Loss: 1.87198
Epoch: 8, Time: 0.01636s, Loss: 1.85370
update best: 0.39019
Epoch: 9, Time: 0.02011s, Loss: 1.83231
update best: 0.41783
Epoch: 10, Time: 0.01902s, Loss: 1.81445
update best: 0.45366
Epoch: 11, Time: 0.02142s, Loss: 1.78938
update best: 0.48910
Epoch: 12, Time: 0.01983s, Loss: 1.75809
update best: 0.52609
Epoch: 13, Time: 0.02065s, Loss: 1.72758
update best: 0.54712
Epoch: 14, Time: 0.02101s, Loss: 1.70020
update best: 0.56542
Epoch: 15, Time: 0.01936s, Loss: 1.66416
update best: 0.57438
Epoch: 16, Time: 0.01909s, Loss: 1.62656
update best: 0.58489
Epoch: 17, Time: 0.02088s, Loss: 1.59308
update best: 0.60864
Epoch: 18, Time: 0.02158s, Loss: 1.55481
update best: 0.62500
Epoch: 19, Time: 0.02268s, Loss: 1.51752
update best: 0.64097
Epoch: 20, Time: 0.01968s, Loss: 1.46721
update best: 0.64953
Epoch: 21, Time: 0.02209s, Loss: 1.42849
update best: 0.66199
Epoch: 22, Time: 0.02001s, Loss: 1.38193
update best: 0.66861
Epoch: 23, Time: 0.01939s, Loss: 1.33927
update best: 0.66939
Epoch: 24, Time: 0.02315s, Loss: 1.29939
update best: 0.67251
Epoch: 25, Time: 0.01927s, Loss: 1.25167
update best: 0.67913
Epoch: 26, Time: 0.01927s, Loss: 1.20989
update best: 0.68069
Epoch: 27, Time: 0.01922s, Loss: 1.16839
update best: 0.68458
Epoch: 28, Time: 0.01943s, Loss: 1.13037
update best: 0.68614
Epoch: 29, Time: 0.01917s, Loss: 1.10322

train finished!
best val: 0.68614
test...
final result: epoch: 28
{'accuracy': 0.6861370801925659, 'f1_score': 0.663840096895994, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1575)
Epoch: 0, Time: 0.03993s, Loss: 1.94649
update best: 0.12150
Epoch: 1, Time: 0.02299s, Loss: 1.94140
update best: 0.30724
Epoch: 2, Time: 0.02242s, Loss: 1.93499
Epoch: 3, Time: 0.02274s, Loss: 1.92773
Epoch: 4, Time: 0.02386s, Loss: 1.91830
Epoch: 5, Time: 0.02243s, Loss: 1.90639
Epoch: 6, Time: 0.02307s, Loss: 1.89435
update best: 0.30919
Epoch: 7, Time: 0.02236s, Loss: 1.88036
update best: 0.33645
Epoch: 8, Time: 0.02220s, Loss: 1.86332
update best: 0.37734
Epoch: 9, Time: 0.02285s, Loss: 1.84270
update best: 0.40498
Epoch: 10, Time: 0.02353s, Loss: 1.82725
update best: 0.44704
Epoch: 11, Time: 0.02240s, Loss: 1.80312
update best: 0.47430
Epoch: 12, Time: 0.02265s, Loss: 1.77486
update best: 0.50584
Epoch: 13, Time: 0.02274s, Loss: 1.74647
update best: 0.53583
Epoch: 14, Time: 0.02270s, Loss: 1.72002
update best: 0.55452
Epoch: 15, Time: 0.02291s, Loss: 1.68842
update best: 0.57477
Epoch: 16, Time: 0.02278s, Loss: 1.65473
update best: 0.60319
Epoch: 17, Time: 0.02298s, Loss: 1.62513
update best: 0.61565
Epoch: 18, Time: 0.02286s, Loss: 1.58607
update best: 0.63123
Epoch: 19, Time: 0.02290s, Loss: 1.55429
update best: 0.64213
Epoch: 20, Time: 0.02274s, Loss: 1.50627
update best: 0.64486
Epoch: 21, Time: 0.02318s, Loss: 1.46653
update best: 0.64759
Epoch: 22, Time: 0.02239s, Loss: 1.43188
update best: 0.64953
Epoch: 23, Time: 0.01979s, Loss: 1.38653
update best: 0.65070
Epoch: 24, Time: 0.02624s, Loss: 1.35083
update best: 0.65109
Epoch: 25, Time: 0.02407s, Loss: 1.30498
Epoch: 26, Time: 0.02563s, Loss: 1.27171
update best: 0.65460
Epoch: 27, Time: 0.02460s, Loss: 1.22910
update best: 0.65771
Epoch: 28, Time: 0.02061s, Loss: 1.19489
Epoch: 29, Time: 0.02385s, Loss: 1.16876

train finished!
best val: 0.65771
test...
final result: epoch: 27
{'accuracy': 0.6577102541923523, 'f1_score': 0.6350056069746908, 'f1_score -> average@micro': 0.6577102803738317}
Hypergraph(num_v=2708, num_e=1677)
Epoch: 0, Time: 0.05095s, Loss: 1.94630
update best: 0.12266
Epoch: 1, Time: 0.02803s, Loss: 1.94192
update best: 0.30997
Epoch: 2, Time: 0.02754s, Loss: 1.93676
Epoch: 3, Time: 0.02705s, Loss: 1.93097
Epoch: 4, Time: 0.02721s, Loss: 1.92359
Epoch: 5, Time: 0.02711s, Loss: 1.91426
Epoch: 6, Time: 0.02779s, Loss: 1.90455
update best: 0.32321
Epoch: 7, Time: 0.02760s, Loss: 1.89341
update best: 0.35592
Epoch: 8, Time: 0.02773s, Loss: 1.87950
update best: 0.38357
Epoch: 9, Time: 0.02907s, Loss: 1.86337
update best: 0.41628
Epoch: 10, Time: 0.02748s, Loss: 1.85073
update best: 0.44665
Epoch: 11, Time: 0.02734s, Loss: 1.83087
update best: 0.48053
Epoch: 12, Time: 0.02722s, Loss: 1.80840
update best: 0.51285
Epoch: 13, Time: 0.02751s, Loss: 1.78424
update best: 0.54050
Epoch: 14, Time: 0.02770s, Loss: 1.76525
update best: 0.57048
Epoch: 15, Time: 0.02810s, Loss: 1.73759
update best: 0.58022
Epoch: 16, Time: 0.02703s, Loss: 1.71125
update best: 0.59073
Epoch: 17, Time: 0.02764s, Loss: 1.68167
update best: 0.59891
Epoch: 18, Time: 0.02708s, Loss: 1.65149
update best: 0.60826
Epoch: 19, Time: 0.02781s, Loss: 1.62535
update best: 0.61604
Epoch: 20, Time: 0.02720s, Loss: 1.58105
update best: 0.62539
Epoch: 21, Time: 0.02745s, Loss: 1.55001
update best: 0.63707
Epoch: 22, Time: 0.02730s, Loss: 1.51694
Epoch: 23, Time: 0.02737s, Loss: 1.48237
update best: 0.63746
Epoch: 24, Time: 0.02840s, Loss: 1.44476
update best: 0.63980
Epoch: 25, Time: 0.02529s, Loss: 1.40778
update best: 0.64019
Epoch: 26, Time: 0.02726s, Loss: 1.37066
update best: 0.64252
Epoch: 27, Time: 0.02539s, Loss: 1.33312
update best: 0.64836
Epoch: 28, Time: 0.02775s, Loss: 1.30701
update best: 0.64992
Epoch: 29, Time: 0.02475s, Loss: 1.27731

train finished!
best val: 0.64992
test...
final result: epoch: 28
{'accuracy': 0.6499221324920654, 'f1_score': 0.6208881503106024, 'f1_score -> average@micro': 0.6499221183800623}
Hypergraph(num_v=2708, num_e=1796)
Epoch: 0, Time: 0.06628s, Loss: 1.94689
update best: 0.12150
Epoch: 1, Time: 0.03893s, Loss: 1.94329
update best: 0.30335
Epoch: 2, Time: 0.03842s, Loss: 1.93909
Epoch: 3, Time: 0.04018s, Loss: 1.93476
Epoch: 4, Time: 0.03991s, Loss: 1.93047
Epoch: 5, Time: 0.03808s, Loss: 1.92390
Epoch: 6, Time: 0.04024s, Loss: 1.91714
update best: 0.30374
Epoch: 7, Time: 0.03861s, Loss: 1.90957
update best: 0.30724
Epoch: 8, Time: 0.03797s, Loss: 1.90076
update best: 0.30997
[I 2024-01-18 04:37:17,046] Trial 50 finished with value: 0.6199377179145813 and parameters: {'border': 0.923}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:37:45,445] Trial 51 finished with value: 0.6869158744812012 and parameters: {'border': 0.996}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:38:29,987] Trial 52 finished with value: 0.6869158744812012 and parameters: {'border': 0.996}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:38:58,691] Trial 53 finished with value: 0.6834112405776978 and parameters: {'border': 0.985}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 9, Time: 0.03784s, Loss: 1.89073
update best: 0.31698
Epoch: 10, Time: 0.04012s, Loss: 1.88295
update best: 0.33801
Epoch: 11, Time: 0.03840s, Loss: 1.86956
update best: 0.36838
Epoch: 12, Time: 0.03843s, Loss: 1.85589
update best: 0.38902
Epoch: 13, Time: 0.03851s, Loss: 1.83933
update best: 0.41005
Epoch: 14, Time: 0.03846s, Loss: 1.82714
update best: 0.42835
Epoch: 15, Time: 0.03864s, Loss: 1.80766
update best: 0.44198
Epoch: 16, Time: 0.03844s, Loss: 1.79080
update best: 0.47975
Epoch: 17, Time: 0.03675s, Loss: 1.77145
update best: 0.50350
Epoch: 18, Time: 0.03893s, Loss: 1.74994
update best: 0.52843
Epoch: 19, Time: 0.03842s, Loss: 1.73059
update best: 0.55607
Epoch: 20, Time: 0.03628s, Loss: 1.70396
update best: 0.57009
Epoch: 21, Time: 0.03809s, Loss: 1.67822
update best: 0.58528
Epoch: 22, Time: 0.03809s, Loss: 1.65531
update best: 0.59268
Epoch: 23, Time: 0.03835s, Loss: 1.63027
update best: 0.59774
Epoch: 24, Time: 0.03879s, Loss: 1.59859
Epoch: 25, Time: 0.04002s, Loss: 1.57110
update best: 0.60436
Epoch: 26, Time: 0.03887s, Loss: 1.54307
update best: 0.60787
Epoch: 27, Time: 0.03993s, Loss: 1.51785
update best: 0.60942
Epoch: 28, Time: 0.03919s, Loss: 1.49265
update best: 0.61254
Epoch: 29, Time: 0.03881s, Loss: 1.46801
update best: 0.61994

train finished!
best val: 0.61994
test...
final result: epoch: 29
{'accuracy': 0.6199377179145813, 'f1_score': 0.5831389729429161, 'f1_score -> average@micro': 0.6199376947040498}
Hypergraph(num_v=2708, num_e=1029)
Epoch: 0, Time: 0.03318s, Loss: 1.94641
update best: 0.12188
Epoch: 1, Time: 0.02061s, Loss: 1.94037
update best: 0.33411
Epoch: 2, Time: 0.01952s, Loss: 1.93307
Epoch: 3, Time: 0.01952s, Loss: 1.92463
Epoch: 4, Time: 0.01889s, Loss: 1.91379
Epoch: 5, Time: 0.01569s, Loss: 1.90025
Epoch: 6, Time: 0.01875s, Loss: 1.88617
update best: 0.34579
Epoch: 7, Time: 0.02062s, Loss: 1.87018
update best: 0.37188
Epoch: 8, Time: 0.02161s, Loss: 1.85124
update best: 0.40070
Epoch: 9, Time: 0.01914s, Loss: 1.82952
update best: 0.43964
Epoch: 10, Time: 0.01810s, Loss: 1.81005
update best: 0.48910
Epoch: 11, Time: 0.01958s, Loss: 1.78330
update best: 0.52492
Epoch: 12, Time: 0.01953s, Loss: 1.75305
update best: 0.55062
Epoch: 13, Time: 0.01951s, Loss: 1.72115
update best: 0.56659
Epoch: 14, Time: 0.01923s, Loss: 1.69249
update best: 0.57165
Epoch: 15, Time: 0.01989s, Loss: 1.65648
update best: 0.58840
Epoch: 16, Time: 0.01954s, Loss: 1.61652
update best: 0.60358
Epoch: 17, Time: 0.01949s, Loss: 1.58139
update best: 0.62578
Epoch: 18, Time: 0.01901s, Loss: 1.54285
update best: 0.63941
Epoch: 19, Time: 0.02030s, Loss: 1.50584
update best: 0.65187
Epoch: 20, Time: 0.01970s, Loss: 1.45361
update best: 0.65537
Epoch: 21, Time: 0.01896s, Loss: 1.41155
update best: 0.66628
Epoch: 22, Time: 0.01949s, Loss: 1.36805
update best: 0.66783
Epoch: 23, Time: 0.01918s, Loss: 1.32175
update best: 0.67173
Epoch: 24, Time: 0.02008s, Loss: 1.28232
update best: 0.67407
Epoch: 25, Time: 0.01886s, Loss: 1.23518
update best: 0.67835
Epoch: 26, Time: 0.01964s, Loss: 1.19455
Epoch: 27, Time: 0.01974s, Loss: 1.15144
update best: 0.67913
Epoch: 28, Time: 0.02010s, Loss: 1.11296
update best: 0.68419
Epoch: 29, Time: 0.01873s, Loss: 1.08148
update best: 0.68692

train finished!
best val: 0.68692
test...
final result: epoch: 29
{'accuracy': 0.6869158744812012, 'f1_score': 0.666487935829324, 'f1_score -> average@micro': 0.6869158878504673}
Hypergraph(num_v=2708, num_e=1029)
Epoch: 0, Time: 0.03328s, Loss: 1.94641
update best: 0.12188
Epoch: 1, Time: 0.02097s, Loss: 1.94037
update best: 0.33411
Epoch: 2, Time: 0.01910s, Loss: 1.93307
Epoch: 3, Time: 0.01970s, Loss: 1.92463
Epoch: 4, Time: 0.02363s, Loss: 1.91379
Epoch: 5, Time: 0.01989s, Loss: 1.90025
Epoch: 6, Time: 0.02037s, Loss: 1.88617
update best: 0.34579
Epoch: 7, Time: 0.02280s, Loss: 1.87018
update best: 0.37188
Epoch: 8, Time: 0.01988s, Loss: 1.85124
update best: 0.40070
Epoch: 9, Time: 0.01889s, Loss: 1.82952
update best: 0.43964
Epoch: 10, Time: 0.01995s, Loss: 1.81005
update best: 0.48910
Epoch: 11, Time: 0.02315s, Loss: 1.78330
update best: 0.52492
Epoch: 12, Time: 0.01960s, Loss: 1.75305
update best: 0.55062
Epoch: 13, Time: 0.01948s, Loss: 1.72115
update best: 0.56659
Epoch: 14, Time: 0.02341s, Loss: 1.69249
update best: 0.57165
Epoch: 15, Time: 0.01959s, Loss: 1.65648
update best: 0.58840
Epoch: 16, Time: 0.01957s, Loss: 1.61652
update best: 0.60358
Epoch: 17, Time: 0.01903s, Loss: 1.58139
update best: 0.62578
Epoch: 18, Time: 0.01914s, Loss: 1.54285
update best: 0.63941
Epoch: 19, Time: 0.02144s, Loss: 1.50584
update best: 0.65187
Epoch: 20, Time: 0.02040s, Loss: 1.45361
update best: 0.65537
Epoch: 21, Time: 0.01797s, Loss: 1.41155
update best: 0.66628
Epoch: 22, Time: 0.01929s, Loss: 1.36805
update best: 0.66783
Epoch: 23, Time: 0.01635s, Loss: 1.32175
update best: 0.67173
Epoch: 24, Time: 0.01707s, Loss: 1.28232
update best: 0.67407
Epoch: 25, Time: 0.01880s, Loss: 1.23518
update best: 0.67835
Epoch: 26, Time: 0.02068s, Loss: 1.19455
Epoch: 27, Time: 0.01728s, Loss: 1.15144
update best: 0.67913
Epoch: 28, Time: 0.01582s, Loss: 1.11296
update best: 0.68419
Epoch: 29, Time: 0.01477s, Loss: 1.08148
update best: 0.68692

train finished!
best val: 0.68692
test...
final result: epoch: 29
{'accuracy': 0.6869158744812012, 'f1_score': 0.666487935829324, 'f1_score -> average@micro': 0.6869158878504673}
Hypergraph(num_v=2708, num_e=1213)
Epoch: 0, Time: 0.03319s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.01922s, Loss: 1.94052
update best: 0.33645
Epoch: 2, Time: 0.01986s, Loss: 1.93362
Epoch: 3, Time: 0.02033s, Loss: 1.92570
Epoch: 4, Time: 0.02074s, Loss: 1.91553
Epoch: 5, Time: 0.02285s, Loss: 1.90275
Epoch: 6, Time: 0.01996s, Loss: 1.88949
Epoch: 7, Time: 0.01734s, Loss: 1.87374
update best: 0.34657
Epoch: 8, Time: 0.02256s, Loss: 1.85659
update best: 0.37422
Epoch: 9, Time: 0.02880s, Loss: 1.83598
update best: 0.40421
Epoch: 10, Time: 0.02180s, Loss: 1.81861
update best: 0.44081
Epoch: 11, Time: 0.01958s, Loss: 1.79341
update best: 0.47235
Epoch: 12, Time: 0.02022s, Loss: 1.76276
update best: 0.50623
Epoch: 13, Time: 0.02034s, Loss: 1.73341
update best: 0.53777
Epoch: 14, Time: 0.02089s, Loss: 1.70675
update best: 0.55257
Epoch: 15, Time: 0.02014s, Loss: 1.67207
update best: 0.56659
Epoch: 16, Time: 0.02031s, Loss: 1.63500
update best: 0.57243
Epoch: 17, Time: 0.02013s, Loss: 1.60090
update best: 0.59657
Epoch: 18, Time: 0.02196s, Loss: 1.56435
update best: 0.62072
Epoch: 19, Time: 0.02228s, Loss: 1.52779
update best: 0.63629
Epoch: 20, Time: 0.01974s, Loss: 1.47842
update best: 0.64369
Epoch: 21, Time: 0.01923s, Loss: 1.43875
update best: 0.65031
Epoch: 22, Time: 0.01921s, Loss: 1.39627
update best: 0.66121
Epoch: 23, Time: 0.01908s, Loss: 1.35054
update best: 0.66667
Epoch: 24, Time: 0.02045s, Loss: 1.31201
update best: 0.67290
Epoch: 25, Time: 0.02032s, Loss: 1.26391
update best: 0.67640
Epoch: 26, Time: 0.02076s, Loss: 1.22595
update best: 0.68107
Epoch: 27, Time: 0.01995s, Loss: 1.18140
update best: 0.68302
Epoch: 28, Time: 0.02116s, Loss: 1.14702
update best: 0.68341
Epoch: 29, Time: 0.02027s, Loss: 1.11791

train finished!
best val: 0.68341
test...
final result: epoch: 28
{'accuracy': 0.6834112405776978, 'f1_score': 0.6594243772075338, 'f1_score -> average@micro': 0.6834112149532711}
Hypergraph(num_v=2708, num_e=1037)
Epoch: 0, Time: 0.03269s, Loss: 1.94646
update best: 0.12188
Epoch: 1, Time: 0.02002s, Loss: 1.94036
update best: 0.32282
Epoch: 2, Time: 0.01951s, Loss: 1.93307
Epoch: 3, Time: 0.02027s, Loss: 1.92470
Epoch: 4, Time: 0.02400s, Loss: 1.91394
Epoch: 5, Time: 0.02024s, Loss: 1.90061
Epoch: 6, Time: 0.01959s, Loss: 1.88657
update best: 0.33645
Epoch: 7, Time: 0.02001s, Loss: 1.87068
update best: 0.36916
Epoch: 8, Time: 0.01910s, Loss: 1.85183
update best: 0.40109
Epoch: 9, Time: 0.02296s, Loss: 1.83007
update best: 0.43536
Epoch: 10, Time: 0.02058s, Loss: 1.81120
update best: 0.48326
Epoch: 11, Time: 0.02173s, Loss: 1.78446
update best: 0.51947
Epoch: 12, Time: 0.01845s, Loss: 1.75368
update best: 0.54439
Epoch: 13, Time: 0.01983s, Loss: 1.72217
update best: 0.56386
Epoch: 14, Time: 0.02311s, Loss: 1.69389
update best: 0.57243
[I 2024-01-18 04:39:27,061] Trial 54 finished with value: 0.6876947283744812 and parameters: {'border': 0.995}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:39:55,472] Trial 55 finished with value: 0.6865264773368835 and parameters: {'border': 0.99}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:40:40,368] Trial 56 finished with value: 0.6783488988876343 and parameters: {'border': 0.977}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:41:08,998] Trial 57 finished with value: 0.6861370801925659 and parameters: {'border': 1.0}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 15, Time: 0.01934s, Loss: 1.65720
update best: 0.57983
Epoch: 16, Time: 0.01941s, Loss: 1.61841
update best: 0.59540
Epoch: 17, Time: 0.01736s, Loss: 1.58269
update best: 0.62227
Epoch: 18, Time: 0.01970s, Loss: 1.54365
update best: 0.63746
Epoch: 19, Time: 0.01964s, Loss: 1.50569
update best: 0.64992
Epoch: 20, Time: 0.02491s, Loss: 1.45334
update best: 0.65304
Epoch: 21, Time: 0.02050s, Loss: 1.41104
update best: 0.66511
Epoch: 22, Time: 0.01851s, Loss: 1.36811
update best: 0.67212
Epoch: 23, Time: 0.02022s, Loss: 1.32060
update best: 0.67329
Epoch: 24, Time: 0.01880s, Loss: 1.28125
update best: 0.67874
Epoch: 25, Time: 0.02223s, Loss: 1.23209
Epoch: 26, Time: 0.02178s, Loss: 1.19108
update best: 0.68030
Epoch: 27, Time: 0.02072s, Loss: 1.14918
update best: 0.68224
Epoch: 28, Time: 0.02033s, Loss: 1.10796
update best: 0.68497
Epoch: 29, Time: 0.01991s, Loss: 1.07922
update best: 0.68769

train finished!
best val: 0.68769
test...
final result: epoch: 29
{'accuracy': 0.6876947283744812, 'f1_score': 0.669290144157837, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=1119)
Epoch: 0, Time: 0.02815s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.01889s, Loss: 1.94027
update best: 0.30841
Epoch: 2, Time: 0.01917s, Loss: 1.93326
Epoch: 3, Time: 0.01984s, Loss: 1.92501
Epoch: 4, Time: 0.01988s, Loss: 1.91444
Epoch: 5, Time: 0.01984s, Loss: 1.90159
update best: 0.30919
Epoch: 6, Time: 0.01722s, Loss: 1.88816
update best: 0.31815
Epoch: 7, Time: 0.01926s, Loss: 1.87208
update best: 0.33684
Epoch: 8, Time: 0.02260s, Loss: 1.85454
update best: 0.36799
Epoch: 9, Time: 0.02233s, Loss: 1.83281
update best: 0.40265
Epoch: 10, Time: 0.01983s, Loss: 1.81538
update best: 0.43653
Epoch: 11, Time: 0.02143s, Loss: 1.79014
update best: 0.48209
Epoch: 12, Time: 0.02772s, Loss: 1.75918
update best: 0.51752
Epoch: 13, Time: 0.02269s, Loss: 1.72879
update best: 0.54361
Epoch: 14, Time: 0.02263s, Loss: 1.70217
update best: 0.55646
Epoch: 15, Time: 0.02164s, Loss: 1.66618
update best: 0.56815
Epoch: 16, Time: 0.02138s, Loss: 1.62988
update best: 0.57788
Epoch: 17, Time: 0.02395s, Loss: 1.59530
update best: 0.58333
Epoch: 18, Time: 0.02266s, Loss: 1.55911
update best: 0.61020
Epoch: 19, Time: 0.02182s, Loss: 1.52161
update best: 0.63162
Epoch: 20, Time: 0.02182s, Loss: 1.47123
update best: 0.64798
Epoch: 21, Time: 0.01949s, Loss: 1.43162
update best: 0.65226
Epoch: 22, Time: 0.02082s, Loss: 1.38823
update best: 0.65732
Epoch: 23, Time: 0.01905s, Loss: 1.34428
update best: 0.66589
Epoch: 24, Time: 0.01866s, Loss: 1.30236
update best: 0.66978
Epoch: 25, Time: 0.01659s, Loss: 1.25610
update best: 0.67407
Epoch: 26, Time: 0.01633s, Loss: 1.21598
update best: 0.67874
Epoch: 27, Time: 0.01906s, Loss: 1.17445
update best: 0.68224
Epoch: 28, Time: 0.01655s, Loss: 1.13478
update best: 0.68497
Epoch: 29, Time: 0.01663s, Loss: 1.10521
update best: 0.68653

train finished!
best val: 0.68653
test...
final result: epoch: 29
{'accuracy': 0.6865264773368835, 'f1_score': 0.6621840167514158, 'f1_score -> average@micro': 0.6865264797507789}
Hypergraph(num_v=2708, num_e=1379)
Epoch: 0, Time: 0.03652s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.02182s, Loss: 1.94101
update best: 0.36488
Epoch: 2, Time: 0.02227s, Loss: 1.93433
Epoch: 3, Time: 0.02257s, Loss: 1.92662
Epoch: 4, Time: 0.02263s, Loss: 1.91700
Epoch: 5, Time: 0.02272s, Loss: 1.90432
Epoch: 6, Time: 0.02259s, Loss: 1.89139
Epoch: 7, Time: 0.02265s, Loss: 1.87630
update best: 0.37734
Epoch: 8, Time: 0.02225s, Loss: 1.85829
update best: 0.40732
Epoch: 9, Time: 0.02300s, Loss: 1.83801
update best: 0.44276
Epoch: 10, Time: 0.02150s, Loss: 1.82132
update best: 0.49377
Epoch: 11, Time: 0.02133s, Loss: 1.79589
update best: 0.52998
Epoch: 12, Time: 0.02200s, Loss: 1.76592
update best: 0.55374
Epoch: 13, Time: 0.02190s, Loss: 1.73613
update best: 0.56620
Epoch: 14, Time: 0.02020s, Loss: 1.70883
update best: 0.57477
Epoch: 15, Time: 0.02204s, Loss: 1.67371
update best: 0.57749
Epoch: 16, Time: 0.02210s, Loss: 1.63830
update best: 0.60553
Epoch: 17, Time: 0.02014s, Loss: 1.60461
update best: 0.63045
Epoch: 18, Time: 0.02081s, Loss: 1.56738
update best: 0.64252
Epoch: 19, Time: 0.02171s, Loss: 1.53163
update best: 0.65382
Epoch: 20, Time: 0.02193s, Loss: 1.48427
update best: 0.65576
Epoch: 21, Time: 0.02329s, Loss: 1.44324
update best: 0.65849
Epoch: 22, Time: 0.02149s, Loss: 1.40271
update best: 0.66394
Epoch: 23, Time: 0.02064s, Loss: 1.35483
update best: 0.66822
Epoch: 24, Time: 0.02059s, Loss: 1.31683
Epoch: 25, Time: 0.01916s, Loss: 1.27361
update best: 0.67173
Epoch: 26, Time: 0.01815s, Loss: 1.23339
update best: 0.67290
Epoch: 27, Time: 0.02114s, Loss: 1.18958
update best: 0.67329
Epoch: 28, Time: 0.02281s, Loss: 1.15407
update best: 0.67718
Epoch: 29, Time: 0.02122s, Loss: 1.12820
update best: 0.67835

train finished!
best val: 0.67835
test...
final result: epoch: 29
{'accuracy': 0.6783488988876343, 'f1_score': 0.6601141054534718, 'f1_score -> average@micro': 0.6783489096573209}
Hypergraph(num_v=2708, num_e=971)
Epoch: 0, Time: 0.02990s, Loss: 1.94641
update best: 0.12188
Epoch: 1, Time: 0.01979s, Loss: 1.94033
update best: 0.34307
Epoch: 2, Time: 0.01991s, Loss: 1.93312
Epoch: 3, Time: 0.02223s, Loss: 1.92471
Epoch: 4, Time: 0.02205s, Loss: 1.91394
Epoch: 5, Time: 0.01999s, Loss: 1.90033
Epoch: 6, Time: 0.01795s, Loss: 1.88647
Epoch: 7, Time: 0.01989s, Loss: 1.87034
update best: 0.36643
Epoch: 8, Time: 0.01987s, Loss: 1.85130
update best: 0.39330
Epoch: 9, Time: 0.01961s, Loss: 1.82924
update best: 0.42718
Epoch: 10, Time: 0.02114s, Loss: 1.81064
update best: 0.46379
Epoch: 11, Time: 0.01736s, Loss: 1.78458
update best: 0.50896
Epoch: 12, Time: 0.01932s, Loss: 1.75335
update best: 0.53388
Epoch: 13, Time: 0.01820s, Loss: 1.72121
update best: 0.55452
Epoch: 14, Time: 0.01955s, Loss: 1.69312
update best: 0.56581
Epoch: 15, Time: 0.02181s, Loss: 1.65749
update best: 0.57710
Epoch: 16, Time: 0.01994s, Loss: 1.61835
update best: 0.58879
Epoch: 17, Time: 0.02004s, Loss: 1.58219
update best: 0.61643
Epoch: 18, Time: 0.01947s, Loss: 1.54515
update best: 0.63435
Epoch: 19, Time: 0.01939s, Loss: 1.50626
update best: 0.64681
Epoch: 20, Time: 0.01928s, Loss: 1.45349
update best: 0.65927
Epoch: 21, Time: 0.01918s, Loss: 1.41288
Epoch: 22, Time: 0.01867s, Loss: 1.37024
update best: 0.66160
Epoch: 23, Time: 0.01941s, Loss: 1.32470
update best: 0.66628
Epoch: 24, Time: 0.01943s, Loss: 1.28567
update best: 0.67484
Epoch: 25, Time: 0.01952s, Loss: 1.23676
update best: 0.67796
Epoch: 26, Time: 0.01938s, Loss: 1.19497
update best: 0.67874
Epoch: 27, Time: 0.01971s, Loss: 1.15239
update best: 0.68146
Epoch: 28, Time: 0.01992s, Loss: 1.11260
update best: 0.68263
Epoch: 29, Time: 0.02001s, Loss: 1.08225
update best: 0.68614

train finished!
best val: 0.68614
test...
final result: epoch: 29
{'accuracy': 0.6861370801925659, 'f1_score': 0.6645933831713843, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1082)
Epoch: 0, Time: 0.03174s, Loss: 1.94662
update best: 0.12188
Epoch: 1, Time: 0.01815s, Loss: 1.94018
update best: 0.30296
Epoch: 2, Time: 0.01928s, Loss: 1.93296
Epoch: 3, Time: 0.02065s, Loss: 1.92463
Epoch: 4, Time: 0.02193s, Loss: 1.91405
Epoch: 5, Time: 0.02201s, Loss: 1.90103
update best: 0.30919
Epoch: 6, Time: 0.01710s, Loss: 1.88745
update best: 0.31698
Epoch: 7, Time: 0.01923s, Loss: 1.87155
update best: 0.32671
Epoch: 8, Time: 0.01937s, Loss: 1.85327
update best: 0.35164
Epoch: 9, Time: 0.01952s, Loss: 1.83161
update best: 0.39759
Epoch: 10, Time: 0.01947s, Loss: 1.81371
update best: 0.43614
Epoch: 11, Time: 0.01939s, Loss: 1.78833
update best: 0.48442
Epoch: 12, Time: 0.01945s, Loss: 1.75721
update best: 0.52181
Epoch: 13, Time: 0.01979s, Loss: 1.72645
update best: 0.54361
Epoch: 14, Time: 0.01895s, Loss: 1.69954
update best: 0.55919
Epoch: 15, Time: 0.02207s, Loss: 1.66380
update best: 0.56620
Epoch: 16, Time: 0.02072s, Loss: 1.62621
update best: 0.57905
Epoch: 17, Time: 0.01944s, Loss: 1.59166
update best: 0.59229
Epoch: 18, Time: 0.02343s, Loss: 1.55438
update best: 0.61488
Epoch: 19, Time: 0.01955s, Loss: 1.51611
update best: 0.63551
[I 2024-01-18 04:41:37,602] Trial 58 finished with value: 0.6853582262992859 and parameters: {'border': 0.992}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:42:08,355] Trial 59 finished with value: 0.6047507524490356 and parameters: {'border': 0.903}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:42:52,905] Trial 60 finished with value: 0.6849688291549683 and parameters: {'border': 0.997}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:43:21,438] Trial 61 finished with value: 0.6876947283744812 and parameters: {'border': 0.995}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 20, Time: 0.01952s, Loss: 1.46511
update best: 0.64486
Epoch: 21, Time: 0.02127s, Loss: 1.42481
update best: 0.65537
Epoch: 22, Time: 0.02178s, Loss: 1.38216
update best: 0.66472
Epoch: 23, Time: 0.01912s, Loss: 1.33769
update best: 0.66667
Epoch: 24, Time: 0.02095s, Loss: 1.29940
Epoch: 25, Time: 0.01815s, Loss: 1.24970
update best: 0.67212
Epoch: 26, Time: 0.02120s, Loss: 1.20756
update best: 0.67796
Epoch: 27, Time: 0.02002s, Loss: 1.16837
update best: 0.68030
Epoch: 28, Time: 0.02461s, Loss: 1.12947
update best: 0.68536
Epoch: 29, Time: 0.02749s, Loss: 1.09934

train finished!
best val: 0.68536
test...
final result: epoch: 28
{'accuracy': 0.6853582262992859, 'f1_score': 0.659425107350773, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=1904)
Epoch: 0, Time: 0.09416s, Loss: 1.94669
update best: 0.11916
Epoch: 1, Time: 0.06272s, Loss: 1.94421
update best: 0.30919
Epoch: 2, Time: 0.06142s, Loss: 1.94167
Epoch: 3, Time: 0.06344s, Loss: 1.93920
Epoch: 4, Time: 0.05934s, Loss: 1.93716
Epoch: 5, Time: 0.06128s, Loss: 1.93320
Epoch: 6, Time: 0.06163s, Loss: 1.93009
Epoch: 7, Time: 0.06140s, Loss: 1.92571
update best: 0.31036
Epoch: 8, Time: 0.06334s, Loss: 1.92087
update best: 0.31231
Epoch: 9, Time: 0.06141s, Loss: 1.91543
update best: 0.31776
Epoch: 10, Time: 0.06346s, Loss: 1.91215
update best: 0.33139
Epoch: 11, Time: 0.06150s, Loss: 1.90458
update best: 0.35319
Epoch: 12, Time: 0.06123s, Loss: 1.89763
update best: 0.39681
Epoch: 13, Time: 0.06169s, Loss: 1.88843
update best: 0.41706
Epoch: 14, Time: 0.06320s, Loss: 1.88227
update best: 0.41939
Epoch: 15, Time: 0.06909s, Loss: 1.87131
update best: 0.42407
Epoch: 16, Time: 0.07175s, Loss: 1.86205
update best: 0.43653
Epoch: 17, Time: 0.07586s, Loss: 1.85007
update best: 0.45444
Epoch: 18, Time: 0.07390s, Loss: 1.83909
update best: 0.48053
Epoch: 19, Time: 0.07350s, Loss: 1.82804
update best: 0.51441
Epoch: 20, Time: 0.07342s, Loss: 1.81083
update best: 0.53583
Epoch: 21, Time: 0.07374s, Loss: 1.79439
update best: 0.55763
Epoch: 22, Time: 0.07356s, Loss: 1.78382
update best: 0.56114
Epoch: 23, Time: 0.07494s, Loss: 1.76605
update best: 0.56308
Epoch: 24, Time: 0.07296s, Loss: 1.74480
update best: 0.57087
Epoch: 25, Time: 0.06383s, Loss: 1.73009
update best: 0.57126
Epoch: 26, Time: 0.06272s, Loss: 1.70881
update best: 0.57438
Epoch: 27, Time: 0.06236s, Loss: 1.69446
update best: 0.58372
Epoch: 28, Time: 0.06217s, Loss: 1.67852
update best: 0.59696
Epoch: 29, Time: 0.06178s, Loss: 1.65674
update best: 0.60475

train finished!
best val: 0.60475
test...
final result: epoch: 29
{'accuracy': 0.6047507524490356, 'f1_score': 0.5657319035314597, 'f1_score -> average@micro': 0.6047507788161994}
Hypergraph(num_v=2708, num_e=1015)
Epoch: 0, Time: 0.03604s, Loss: 1.94642
update best: 0.12188
Epoch: 1, Time: 0.02223s, Loss: 1.94028
update best: 0.32593
Epoch: 2, Time: 0.02675s, Loss: 1.93299
Epoch: 3, Time: 0.02171s, Loss: 1.92455
Epoch: 4, Time: 0.02265s, Loss: 1.91378
Epoch: 5, Time: 0.02142s, Loss: 1.90025
Epoch: 6, Time: 0.01966s, Loss: 1.88620
update best: 0.33333
Epoch: 7, Time: 0.01907s, Loss: 1.87036
update best: 0.36526
Epoch: 8, Time: 0.02278s, Loss: 1.85112
update best: 0.39798
Epoch: 9, Time: 0.01934s, Loss: 1.82961
update best: 0.43185
Epoch: 10, Time: 0.01899s, Loss: 1.81013
update best: 0.48131
Epoch: 11, Time: 0.02340s, Loss: 1.78340
update best: 0.51791
Epoch: 12, Time: 0.02000s, Loss: 1.75307
update best: 0.54361
Epoch: 13, Time: 0.01891s, Loss: 1.72114
update best: 0.56075
Epoch: 14, Time: 0.01927s, Loss: 1.69269
update best: 0.56620
Epoch: 15, Time: 0.01968s, Loss: 1.65639
update best: 0.58100
Epoch: 16, Time: 0.01937s, Loss: 1.61603
update best: 0.59579
Epoch: 17, Time: 0.01971s, Loss: 1.58205
update best: 0.61877
Epoch: 18, Time: 0.01907s, Loss: 1.54252
update best: 0.63357
Epoch: 19, Time: 0.01802s, Loss: 1.50568
update best: 0.64798
Epoch: 20, Time: 0.01891s, Loss: 1.45255
update best: 0.65382
Epoch: 21, Time: 0.01575s, Loss: 1.41179
update best: 0.66199
Epoch: 22, Time: 0.01922s, Loss: 1.36878
update best: 0.66783
Epoch: 23, Time: 0.01980s, Loss: 1.32157
update best: 0.67445
Epoch: 24, Time: 0.01928s, Loss: 1.28223
update best: 0.67601
Epoch: 25, Time: 0.01849s, Loss: 1.23443
update best: 0.67952
Epoch: 26, Time: 0.01837s, Loss: 1.19332
Epoch: 27, Time: 0.01651s, Loss: 1.15050
update best: 0.68263
Epoch: 28, Time: 0.01939s, Loss: 1.11064
Epoch: 29, Time: 0.01973s, Loss: 1.08114
update best: 0.68497

train finished!
best val: 0.68497
test...
final result: epoch: 29
{'accuracy': 0.6849688291549683, 'f1_score': 0.6628909362208615, 'f1_score -> average@micro': 0.6849688473520249}
Hypergraph(num_v=2708, num_e=1037)
Epoch: 0, Time: 0.02965s, Loss: 1.94646
update best: 0.12188
Epoch: 1, Time: 0.01945s, Loss: 1.94036
update best: 0.32282
Epoch: 2, Time: 0.01715s, Loss: 1.93307
Epoch: 3, Time: 0.02020s, Loss: 1.92470
Epoch: 4, Time: 0.02295s, Loss: 1.91394
Epoch: 5, Time: 0.02039s, Loss: 1.90061
Epoch: 6, Time: 0.01978s, Loss: 1.88657
update best: 0.33645
Epoch: 7, Time: 0.01917s, Loss: 1.87068
update best: 0.36916
Epoch: 8, Time: 0.01912s, Loss: 1.85183
update best: 0.40109
Epoch: 9, Time: 0.01988s, Loss: 1.83007
update best: 0.43536
Epoch: 10, Time: 0.01967s, Loss: 1.81120
update best: 0.48326
Epoch: 11, Time: 0.02072s, Loss: 1.78446
update best: 0.51947
Epoch: 12, Time: 0.02013s, Loss: 1.75368
update best: 0.54439
Epoch: 13, Time: 0.02087s, Loss: 1.72217
update best: 0.56386
Epoch: 14, Time: 0.01973s, Loss: 1.69389
update best: 0.57243
Epoch: 15, Time: 0.01983s, Loss: 1.65720
update best: 0.57983
Epoch: 16, Time: 0.01958s, Loss: 1.61841
update best: 0.59540
Epoch: 17, Time: 0.01964s, Loss: 1.58269
update best: 0.62227
Epoch: 18, Time: 0.01933s, Loss: 1.54365
update best: 0.63746
Epoch: 19, Time: 0.01959s, Loss: 1.50569
update best: 0.64992
Epoch: 20, Time: 0.01948s, Loss: 1.45334
update best: 0.65304
Epoch: 21, Time: 0.01517s, Loss: 1.41104
update best: 0.66511
Epoch: 22, Time: 0.02012s, Loss: 1.36811
update best: 0.67212
Epoch: 23, Time: 0.01888s, Loss: 1.32060
update best: 0.67329
Epoch: 24, Time: 0.01616s, Loss: 1.28125
update best: 0.67874
Epoch: 25, Time: 0.01962s, Loss: 1.23209
Epoch: 26, Time: 0.01910s, Loss: 1.19108
update best: 0.68030
Epoch: 27, Time: 0.01965s, Loss: 1.14918
update best: 0.68224
Epoch: 28, Time: 0.01604s, Loss: 1.10796
update best: 0.68497
Epoch: 29, Time: 0.01840s, Loss: 1.07922
update best: 0.68769

train finished!
best val: 0.68769
test...
final result: epoch: 29
{'accuracy': 0.6876947283744812, 'f1_score': 0.669290144157837, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=1150)
Epoch: 0, Time: 0.03220s, Loss: 1.94653
update best: 0.12188
Epoch: 1, Time: 0.02263s, Loss: 1.94059
update best: 0.36449
Epoch: 2, Time: 0.02051s, Loss: 1.93353
Epoch: 3, Time: 0.02240s, Loss: 1.92516
Epoch: 4, Time: 0.02305s, Loss: 1.91465
Epoch: 5, Time: 0.02070s, Loss: 1.90151
Epoch: 6, Time: 0.02074s, Loss: 1.88785
Epoch: 7, Time: 0.02313s, Loss: 1.87198
Epoch: 8, Time: 0.02338s, Loss: 1.85370
update best: 0.39019
Epoch: 9, Time: 0.02217s, Loss: 1.83231
update best: 0.41783
Epoch: 10, Time: 0.02342s, Loss: 1.81445
update best: 0.45366
Epoch: 11, Time: 0.02013s, Loss: 1.78938
update best: 0.48910
Epoch: 12, Time: 0.02112s, Loss: 1.75809
update best: 0.52609
Epoch: 13, Time: 0.02066s, Loss: 1.72758
update best: 0.54712
Epoch: 14, Time: 0.02087s, Loss: 1.70020
update best: 0.56542
Epoch: 15, Time: 0.02304s, Loss: 1.66416
update best: 0.57438
Epoch: 16, Time: 0.02282s, Loss: 1.62656
update best: 0.58489
Epoch: 17, Time: 0.01938s, Loss: 1.59308
update best: 0.60864
Epoch: 18, Time: 0.02069s, Loss: 1.55481
update best: 0.62500
Epoch: 19, Time: 0.01921s, Loss: 1.51752
update best: 0.64097
Epoch: 20, Time: 0.01838s, Loss: 1.46721
update best: 0.64953
Epoch: 21, Time: 0.01966s, Loss: 1.42849
update best: 0.66199
Epoch: 22, Time: 0.01857s, Loss: 1.38193
update best: 0.66861
Epoch: 23, Time: 0.01821s, Loss: 1.33927
update best: 0.66939
Epoch: 24, Time: 0.01665s, Loss: 1.29939
update best: 0.67251
Epoch: 25, Time: 0.01849s, Loss: 1.25167
update best: 0.67913
Epoch: 26, Time: 0.01944s, Loss: 1.20989
update best: 0.68069
[I 2024-01-18 04:43:50,059] Trial 62 finished with value: 0.6861370801925659 and parameters: {'border': 0.988}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:44:18,654] Trial 63 finished with value: 0.6853582262992859 and parameters: {'border': 0.994}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:45:03,165] Trial 64 finished with value: 0.6884735226631165 and parameters: {'border': 0.984}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:45:31,686] Trial 65 finished with value: 0.6884735226631165 and parameters: {'border': 0.984}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:46:00,217] Trial 66 finished with value: 0.6717289686203003 and parameters: {'border': 0.972}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 27, Time: 0.01897s, Loss: 1.16839
update best: 0.68458
Epoch: 28, Time: 0.01835s, Loss: 1.13037
update best: 0.68614
Epoch: 29, Time: 0.01954s, Loss: 1.10322

train finished!
best val: 0.68614
test...
final result: epoch: 28
{'accuracy': 0.6861370801925659, 'f1_score': 0.663840096895994, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1052)
Epoch: 0, Time: 0.02943s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.01800s, Loss: 1.94050
update best: 0.32749
Epoch: 2, Time: 0.02154s, Loss: 1.93335
Epoch: 3, Time: 0.02185s, Loss: 1.92515
Epoch: 4, Time: 0.02308s, Loss: 1.91451
Epoch: 5, Time: 0.02107s, Loss: 1.90157
Epoch: 6, Time: 0.02376s, Loss: 1.88786
update best: 0.33139
Epoch: 7, Time: 0.01639s, Loss: 1.87211
update best: 0.36449
Epoch: 8, Time: 0.01739s, Loss: 1.85359
update best: 0.39759
Epoch: 9, Time: 0.01669s, Loss: 1.83219
update best: 0.43107
Epoch: 10, Time: 0.01708s, Loss: 1.81391
update best: 0.47157
Epoch: 11, Time: 0.01797s, Loss: 1.78814
update best: 0.51558
Epoch: 12, Time: 0.01744s, Loss: 1.75709
update best: 0.53972
Epoch: 13, Time: 0.01451s, Loss: 1.72614
update best: 0.55802
Epoch: 14, Time: 0.01554s, Loss: 1.69877
update best: 0.57009
Epoch: 15, Time: 0.01468s, Loss: 1.66284
update best: 0.57905
Epoch: 16, Time: 0.01721s, Loss: 1.62512
update best: 0.58840
Epoch: 17, Time: 0.01693s, Loss: 1.59013
update best: 0.61137
Epoch: 18, Time: 0.01793s, Loss: 1.55191
update best: 0.63435
Epoch: 19, Time: 0.01437s, Loss: 1.51419
update best: 0.64486
Epoch: 20, Time: 0.01603s, Loss: 1.46331
update best: 0.65226
Epoch: 21, Time: 0.01778s, Loss: 1.42184
update best: 0.66005
Epoch: 22, Time: 0.01720s, Loss: 1.37961
update best: 0.66706
Epoch: 23, Time: 0.01774s, Loss: 1.33292
update best: 0.67212
Epoch: 24, Time: 0.01632s, Loss: 1.29399
update best: 0.67407
Epoch: 25, Time: 0.01604s, Loss: 1.24427
update best: 0.67679
Epoch: 26, Time: 0.01786s, Loss: 1.20319
update best: 0.67757
Epoch: 27, Time: 0.01904s, Loss: 1.16329
update best: 0.68263
Epoch: 28, Time: 0.01636s, Loss: 1.12280
update best: 0.68497
Epoch: 29, Time: 0.01781s, Loss: 1.09395
update best: 0.68536

train finished!
best val: 0.68536
test...
final result: epoch: 29
{'accuracy': 0.6853582262992859, 'f1_score': 0.6652326123031386, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=1231)
Epoch: 0, Time: 0.02859s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.02077s, Loss: 1.94050
update best: 0.35903
Epoch: 2, Time: 0.01990s, Loss: 1.93351
Epoch: 3, Time: 0.01946s, Loss: 1.92539
Epoch: 4, Time: 0.02308s, Loss: 1.91512
Epoch: 5, Time: 0.02022s, Loss: 1.90216
Epoch: 6, Time: 0.01944s, Loss: 1.88841
Epoch: 7, Time: 0.01947s, Loss: 1.87295
update best: 0.36332
Epoch: 8, Time: 0.02123s, Loss: 1.85512
update best: 0.39058
Epoch: 9, Time: 0.02022s, Loss: 1.83423
update best: 0.41978
Epoch: 10, Time: 0.02256s, Loss: 1.81577
update best: 0.45989
Epoch: 11, Time: 0.02266s, Loss: 1.79055
update best: 0.49922
Epoch: 12, Time: 0.02269s, Loss: 1.75967
update best: 0.53427
Epoch: 13, Time: 0.02193s, Loss: 1.72999
update best: 0.55413
Epoch: 14, Time: 0.02283s, Loss: 1.70253
update best: 0.56386
Epoch: 15, Time: 0.02359s, Loss: 1.66737
update best: 0.57477
Epoch: 16, Time: 0.02315s, Loss: 1.63064
update best: 0.58489
Epoch: 17, Time: 0.01902s, Loss: 1.59538
update best: 0.61020
Epoch: 18, Time: 0.01882s, Loss: 1.55820
update best: 0.63201
Epoch: 19, Time: 0.02062s, Loss: 1.52172
update best: 0.64097
Epoch: 20, Time: 0.01920s, Loss: 1.47175
update best: 0.65031
Epoch: 21, Time: 0.02283s, Loss: 1.43212
update best: 0.65810
Epoch: 22, Time: 0.01969s, Loss: 1.38867
update best: 0.66706
Epoch: 23, Time: 0.02005s, Loss: 1.34108
update best: 0.66939
Epoch: 24, Time: 0.02048s, Loss: 1.30372
update best: 0.67290
Epoch: 25, Time: 0.02046s, Loss: 1.25607
update best: 0.67874
Epoch: 26, Time: 0.01799s, Loss: 1.21814
update best: 0.68030
Epoch: 27, Time: 0.02064s, Loss: 1.17242
update best: 0.68458
Epoch: 28, Time: 0.02225s, Loss: 1.13717
update best: 0.68847
Epoch: 29, Time: 0.02237s, Loss: 1.10892

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6656316248022973, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1231)
Epoch: 0, Time: 0.03526s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.02013s, Loss: 1.94050
update best: 0.35903
Epoch: 2, Time: 0.02078s, Loss: 1.93351
Epoch: 3, Time: 0.02348s, Loss: 1.92539
Epoch: 4, Time: 0.02193s, Loss: 1.91512
Epoch: 5, Time: 0.02041s, Loss: 1.90216
Epoch: 6, Time: 0.02041s, Loss: 1.88841
Epoch: 7, Time: 0.01921s, Loss: 1.87295
update best: 0.36332
Epoch: 8, Time: 0.02117s, Loss: 1.85512
update best: 0.39058
Epoch: 9, Time: 0.02061s, Loss: 1.83423
update best: 0.41978
Epoch: 10, Time: 0.02290s, Loss: 1.81577
update best: 0.45989
Epoch: 11, Time: 0.02069s, Loss: 1.79055
update best: 0.49922
Epoch: 12, Time: 0.02252s, Loss: 1.75967
update best: 0.53427
Epoch: 13, Time: 0.02137s, Loss: 1.72999
update best: 0.55413
Epoch: 14, Time: 0.01905s, Loss: 1.70253
update best: 0.56386
Epoch: 15, Time: 0.01864s, Loss: 1.66737
update best: 0.57477
Epoch: 16, Time: 0.02065s, Loss: 1.63064
update best: 0.58489
Epoch: 17, Time: 0.02148s, Loss: 1.59538
update best: 0.61020
Epoch: 18, Time: 0.02043s, Loss: 1.55820
update best: 0.63201
Epoch: 19, Time: 0.02014s, Loss: 1.52172
update best: 0.64097
Epoch: 20, Time: 0.01813s, Loss: 1.47175
update best: 0.65031
Epoch: 21, Time: 0.01696s, Loss: 1.43212
update best: 0.65810
Epoch: 22, Time: 0.01910s, Loss: 1.38867
update best: 0.66706
Epoch: 23, Time: 0.02000s, Loss: 1.34108
update best: 0.66939
Epoch: 24, Time: 0.02096s, Loss: 1.30372
update best: 0.67290
Epoch: 25, Time: 0.02015s, Loss: 1.25607
update best: 0.67874
Epoch: 26, Time: 0.01915s, Loss: 1.21814
update best: 0.68030
Epoch: 27, Time: 0.02069s, Loss: 1.17242
update best: 0.68458
Epoch: 28, Time: 0.02105s, Loss: 1.13717
update best: 0.68847
Epoch: 29, Time: 0.02022s, Loss: 1.10892

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6656316248022973, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1472)
Epoch: 0, Time: 0.03821s, Loss: 1.94653
update best: 0.12227
Epoch: 1, Time: 0.02131s, Loss: 1.94087
update best: 0.30452
Epoch: 2, Time: 0.02081s, Loss: 1.93418
Epoch: 3, Time: 0.02324s, Loss: 1.92612
Epoch: 4, Time: 0.02269s, Loss: 1.91662
Epoch: 5, Time: 0.02262s, Loss: 1.90378
update best: 0.30607
Epoch: 6, Time: 0.02203s, Loss: 1.89099
update best: 0.32477
Epoch: 7, Time: 0.02210s, Loss: 1.87564
update best: 0.36137
Epoch: 8, Time: 0.02463s, Loss: 1.85759
update best: 0.39213
Epoch: 9, Time: 0.02244s, Loss: 1.83643
update best: 0.42445
Epoch: 10, Time: 0.02259s, Loss: 1.81918
update best: 0.47313
Epoch: 11, Time: 0.02256s, Loss: 1.79348
update best: 0.50545
Epoch: 12, Time: 0.02208s, Loss: 1.76411
update best: 0.54322
Epoch: 13, Time: 0.02243s, Loss: 1.73476
update best: 0.55997
Epoch: 14, Time: 0.02283s, Loss: 1.70616
update best: 0.57165
Epoch: 15, Time: 0.02371s, Loss: 1.67186
update best: 0.59735
Epoch: 16, Time: 0.02180s, Loss: 1.63594
update best: 0.62033
Epoch: 17, Time: 0.02249s, Loss: 1.60378
update best: 0.63629
Epoch: 18, Time: 0.02285s, Loss: 1.56476
update best: 0.65304
Epoch: 19, Time: 0.02214s, Loss: 1.52987
update best: 0.65615
Epoch: 20, Time: 0.02210s, Loss: 1.48328
Epoch: 21, Time: 0.02074s, Loss: 1.44283
Epoch: 22, Time: 0.02446s, Loss: 1.40191
update best: 0.65966
Epoch: 23, Time: 0.02399s, Loss: 1.35544
update best: 0.66433
Epoch: 24, Time: 0.02273s, Loss: 1.31733
update best: 0.66550
Epoch: 25, Time: 0.02250s, Loss: 1.27503
update best: 0.66939
Epoch: 26, Time: 0.02100s, Loss: 1.23890
Epoch: 27, Time: 0.02243s, Loss: 1.19493
update best: 0.67134
Epoch: 28, Time: 0.02426s, Loss: 1.15832
Epoch: 29, Time: 0.02178s, Loss: 1.13232
update best: 0.67173

train finished!
best val: 0.67173
test...
final result: epoch: 29
{'accuracy': 0.6717289686203003, 'f1_score': 0.6520928705096602, 'f1_score -> average@micro': 0.6717289719626168}
Hypergraph(num_v=2708, num_e=1546)
[I 2024-01-18 04:46:28,735] Trial 67 finished with value: 0.6651090383529663 and parameters: {'border': 0.966}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:46:57,372] Trial 68 finished with value: 0.6802959442138672 and parameters: {'border': 0.981}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:47:26,000] Trial 69 finished with value: 0.6884735226631165 and parameters: {'border': 0.984}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:47:54,692] Trial 70 finished with value: 0.6783488988876343 and parameters: {'border': 0.974}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 0, Time: 0.03850s, Loss: 1.94651
update best: 0.12150
Epoch: 1, Time: 0.02537s, Loss: 1.94133
update best: 0.30802
Epoch: 2, Time: 0.02345s, Loss: 1.93498
Epoch: 3, Time: 0.02157s, Loss: 1.92779
Epoch: 4, Time: 0.02318s, Loss: 1.91878
Epoch: 5, Time: 0.02303s, Loss: 1.90709
Epoch: 6, Time: 0.02144s, Loss: 1.89500
update best: 0.31931
Epoch: 7, Time: 0.02331s, Loss: 1.88052
update best: 0.35086
Epoch: 8, Time: 0.02164s, Loss: 1.86397
update best: 0.38201
Epoch: 9, Time: 0.02514s, Loss: 1.84417
update best: 0.41511
Epoch: 10, Time: 0.02165s, Loss: 1.82859
update best: 0.46456
Epoch: 11, Time: 0.02294s, Loss: 1.80533
update best: 0.48832
Epoch: 12, Time: 0.02169s, Loss: 1.77748
update best: 0.51791
Epoch: 13, Time: 0.02173s, Loss: 1.74820
update best: 0.54868
Epoch: 14, Time: 0.02179s, Loss: 1.72268
update best: 0.56308
Epoch: 15, Time: 0.02167s, Loss: 1.69049
update best: 0.57048
Epoch: 16, Time: 0.02304s, Loss: 1.65802
update best: 0.59268
Epoch: 17, Time: 0.02297s, Loss: 1.62715
update best: 0.61371
Epoch: 18, Time: 0.02312s, Loss: 1.58893
update best: 0.63318
Epoch: 19, Time: 0.02151s, Loss: 1.55735
update best: 0.64291
Epoch: 20, Time: 0.02169s, Loss: 1.50980
update best: 0.64953
Epoch: 21, Time: 0.02193s, Loss: 1.47282
Epoch: 22, Time: 0.02218s, Loss: 1.43431
Epoch: 23, Time: 0.02169s, Loss: 1.39067
update best: 0.65265
Epoch: 24, Time: 0.02217s, Loss: 1.35351
update best: 0.65304
Epoch: 25, Time: 0.02186s, Loss: 1.31143
update best: 0.65771
Epoch: 26, Time: 0.02165s, Loss: 1.27522
update best: 0.66316
Epoch: 27, Time: 0.01882s, Loss: 1.23177
update best: 0.66511
Epoch: 28, Time: 0.02229s, Loss: 1.19917
Epoch: 29, Time: 0.02209s, Loss: 1.17210

train finished!
best val: 0.66511
test...
final result: epoch: 27
{'accuracy': 0.6651090383529663, 'f1_score': 0.6416087463097906, 'f1_score -> average@micro': 0.6651090342679128}
Hypergraph(num_v=2708, num_e=1299)
Epoch: 0, Time: 0.03007s, Loss: 1.94655
update best: 0.12188
Epoch: 1, Time: 0.01985s, Loss: 1.94069
update best: 0.31075
Epoch: 2, Time: 0.02288s, Loss: 1.93371
Epoch: 3, Time: 0.02228s, Loss: 1.92579
update best: 0.31231
Epoch: 4, Time: 0.02275s, Loss: 1.91566
update best: 0.31659
Epoch: 5, Time: 0.02269s, Loss: 1.90310
update best: 0.32165
Epoch: 6, Time: 0.02228s, Loss: 1.88959
update best: 0.33294
Epoch: 7, Time: 0.02173s, Loss: 1.87414
update best: 0.36565
Epoch: 8, Time: 0.02080s, Loss: 1.85638
update best: 0.39486
Epoch: 9, Time: 0.02330s, Loss: 1.83581
update best: 0.42991
Epoch: 10, Time: 0.02490s, Loss: 1.81786
update best: 0.47547
Epoch: 11, Time: 0.02221s, Loss: 1.79278
update best: 0.51636
Epoch: 12, Time: 0.02169s, Loss: 1.76274
update best: 0.55101
Epoch: 13, Time: 0.02216s, Loss: 1.73319
update best: 0.56114
Epoch: 14, Time: 0.02445s, Loss: 1.70580
update best: 0.56931
Epoch: 15, Time: 0.02059s, Loss: 1.67139
update best: 0.57749
Epoch: 16, Time: 0.02235s, Loss: 1.63617
update best: 0.58333
Epoch: 17, Time: 0.02083s, Loss: 1.60213
update best: 0.60553
Epoch: 18, Time: 0.01836s, Loss: 1.56499
update best: 0.63045
Epoch: 19, Time: 0.02090s, Loss: 1.52812
update best: 0.64914
Epoch: 20, Time: 0.02069s, Loss: 1.48051
update best: 0.64953
Epoch: 21, Time: 0.02098s, Loss: 1.43963
update best: 0.66316
Epoch: 22, Time: 0.02141s, Loss: 1.39769
update best: 0.66706
Epoch: 23, Time: 0.02104s, Loss: 1.35053
update best: 0.66783
Epoch: 24, Time: 0.02127s, Loss: 1.31354
update best: 0.67484
Epoch: 25, Time: 0.02102s, Loss: 1.26760
Epoch: 26, Time: 0.02068s, Loss: 1.22837
Epoch: 27, Time: 0.02082s, Loss: 1.18420
update best: 0.67952
Epoch: 28, Time: 0.02234s, Loss: 1.15017
update best: 0.67991
Epoch: 29, Time: 0.02036s, Loss: 1.11926
update best: 0.68030

train finished!
best val: 0.68030
test...
final result: epoch: 29
{'accuracy': 0.6802959442138672, 'f1_score': 0.6582997033539028, 'f1_score -> average@micro': 0.6802959501557633}
Hypergraph(num_v=2708, num_e=1231)
Epoch: 0, Time: 0.03288s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.01994s, Loss: 1.94050
update best: 0.35903
Epoch: 2, Time: 0.02306s, Loss: 1.93351
Epoch: 3, Time: 0.01957s, Loss: 1.92539
Epoch: 4, Time: 0.02068s, Loss: 1.91512
Epoch: 5, Time: 0.02232s, Loss: 1.90216
Epoch: 6, Time: 0.01950s, Loss: 1.88841
Epoch: 7, Time: 0.02353s, Loss: 1.87295
update best: 0.36332
Epoch: 8, Time: 0.02230s, Loss: 1.85512
update best: 0.39058
Epoch: 9, Time: 0.02170s, Loss: 1.83423
update best: 0.41978
Epoch: 10, Time: 0.02315s, Loss: 1.81577
update best: 0.45989
Epoch: 11, Time: 0.02194s, Loss: 1.79055
update best: 0.49922
Epoch: 12, Time: 0.02349s, Loss: 1.75967
update best: 0.53427
Epoch: 13, Time: 0.02349s, Loss: 1.72999
update best: 0.55413
Epoch: 14, Time: 0.02081s, Loss: 1.70253
update best: 0.56386
Epoch: 15, Time: 0.01930s, Loss: 1.66737
update best: 0.57477
Epoch: 16, Time: 0.02089s, Loss: 1.63064
update best: 0.58489
Epoch: 17, Time: 0.01924s, Loss: 1.59538
update best: 0.61020
Epoch: 18, Time: 0.02072s, Loss: 1.55820
update best: 0.63201
Epoch: 19, Time: 0.01915s, Loss: 1.52172
update best: 0.64097
Epoch: 20, Time: 0.02079s, Loss: 1.47175
update best: 0.65031
Epoch: 21, Time: 0.02028s, Loss: 1.43212
update best: 0.65810
Epoch: 22, Time: 0.02014s, Loss: 1.38867
update best: 0.66706
Epoch: 23, Time: 0.02070s, Loss: 1.34108
update best: 0.66939
Epoch: 24, Time: 0.01947s, Loss: 1.30372
update best: 0.67290
Epoch: 25, Time: 0.02064s, Loss: 1.25607
update best: 0.67874
Epoch: 26, Time: 0.01979s, Loss: 1.21814
update best: 0.68030
Epoch: 27, Time: 0.02031s, Loss: 1.17242
update best: 0.68458
Epoch: 28, Time: 0.02000s, Loss: 1.13717
update best: 0.68847
Epoch: 29, Time: 0.01667s, Loss: 1.10892

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6656316248022973, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1452)
Epoch: 0, Time: 0.03674s, Loss: 1.94647
update best: 0.12188
Epoch: 1, Time: 0.02116s, Loss: 1.94099
update best: 0.31075
Epoch: 2, Time: 0.02181s, Loss: 1.93444
Epoch: 3, Time: 0.02416s, Loss: 1.92671
Epoch: 4, Time: 0.02148s, Loss: 1.91727
Epoch: 5, Time: 0.02284s, Loss: 1.90468
Epoch: 6, Time: 0.02283s, Loss: 1.89180
update best: 0.32321
Epoch: 7, Time: 0.02233s, Loss: 1.87707
update best: 0.36643
Epoch: 8, Time: 0.02213s, Loss: 1.85893
update best: 0.38941
Epoch: 9, Time: 0.02165s, Loss: 1.83804
update best: 0.42523
Epoch: 10, Time: 0.02204s, Loss: 1.82136
update best: 0.47002
Epoch: 11, Time: 0.02257s, Loss: 1.79554
update best: 0.50974
Epoch: 12, Time: 0.02199s, Loss: 1.76601
update best: 0.53115
Epoch: 13, Time: 0.02157s, Loss: 1.73588
update best: 0.56386
Epoch: 14, Time: 0.02073s, Loss: 1.70858
update best: 0.57555
Epoch: 15, Time: 0.02154s, Loss: 1.67400
update best: 0.60475
Epoch: 16, Time: 0.02127s, Loss: 1.63861
update best: 0.61760
Epoch: 17, Time: 0.02179s, Loss: 1.60427
update best: 0.63785
Epoch: 18, Time: 0.02557s, Loss: 1.56689
update best: 0.64914
Epoch: 19, Time: 0.02042s, Loss: 1.53128
update best: 0.66121
Epoch: 20, Time: 0.02207s, Loss: 1.48359
Epoch: 21, Time: 0.02159s, Loss: 1.44255
Epoch: 22, Time: 0.02109s, Loss: 1.40160
update best: 0.66355
Epoch: 23, Time: 0.01901s, Loss: 1.35509
update best: 0.66900
Epoch: 24, Time: 0.02182s, Loss: 1.31612
update best: 0.67290
Epoch: 25, Time: 0.02342s, Loss: 1.27332
Epoch: 26, Time: 0.02757s, Loss: 1.23405
update best: 0.67718
Epoch: 27, Time: 0.01928s, Loss: 1.19044
Epoch: 28, Time: 0.01916s, Loss: 1.15256
update best: 0.67835
Epoch: 29, Time: 0.01685s, Loss: 1.12809

train finished!
best val: 0.67835
test...
final result: epoch: 28
{'accuracy': 0.6783488988876343, 'f1_score': 0.6591298072060773, 'f1_score -> average@micro': 0.6783489096573209}
Hypergraph(num_v=2708, num_e=1231)
Epoch: 0, Time: 0.02873s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.02098s, Loss: 1.94050
update best: 0.35903
Epoch: 2, Time: 0.02139s, Loss: 1.93351
Epoch: 3, Time: 0.02077s, Loss: 1.92539
Epoch: 4, Time: 0.02116s, Loss: 1.91512
Epoch: 5, Time: 0.02128s, Loss: 1.90216
Epoch: 6, Time: 0.02302s, Loss: 1.88841
Epoch: 7, Time: 0.01918s, Loss: 1.87295
update best: 0.36332
Epoch: 8, Time: 0.02299s, Loss: 1.85512
update best: 0.39058
[I 2024-01-18 04:48:39,658] Trial 71 finished with value: 0.6884735226631165 and parameters: {'border': 0.984}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:49:08,096] Trial 72 finished with value: 0.6849688291549683 and parameters: {'border': 0.983}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:49:36,712] Trial 73 finished with value: 0.6826323866844177 and parameters: {'border': 0.979}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:50:21,296] Trial 74 finished with value: 0.6884735226631165 and parameters: {'border': 0.984}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 9, Time: 0.02090s, Loss: 1.83423
update best: 0.41978
Epoch: 10, Time: 0.02079s, Loss: 1.81577
update best: 0.45989
Epoch: 11, Time: 0.02276s, Loss: 1.79055
update best: 0.49922
Epoch: 12, Time: 0.02293s, Loss: 1.75967
update best: 0.53427
Epoch: 13, Time: 0.02286s, Loss: 1.72999
update best: 0.55413
Epoch: 14, Time: 0.02299s, Loss: 1.70253
update best: 0.56386
Epoch: 15, Time: 0.02263s, Loss: 1.66737
update best: 0.57477
Epoch: 16, Time: 0.02038s, Loss: 1.63064
update best: 0.58489
Epoch: 17, Time: 0.02189s, Loss: 1.59538
update best: 0.61020
Epoch: 18, Time: 0.01911s, Loss: 1.55820
update best: 0.63201
Epoch: 19, Time: 0.02338s, Loss: 1.52172
update best: 0.64097
Epoch: 20, Time: 0.02262s, Loss: 1.47175
update best: 0.65031
Epoch: 21, Time: 0.01914s, Loss: 1.43212
update best: 0.65810
Epoch: 22, Time: 0.02287s, Loss: 1.38867
update best: 0.66706
Epoch: 23, Time: 0.01899s, Loss: 1.34108
update best: 0.66939
Epoch: 24, Time: 0.02008s, Loss: 1.30372
update best: 0.67290
Epoch: 25, Time: 0.02331s, Loss: 1.25607
update best: 0.67874
Epoch: 26, Time: 0.02150s, Loss: 1.21814
update best: 0.68030
Epoch: 27, Time: 0.02043s, Loss: 1.17242
update best: 0.68458
Epoch: 28, Time: 0.02042s, Loss: 1.13717
update best: 0.68847
Epoch: 29, Time: 0.02195s, Loss: 1.10892

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6656316248022973, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1255)
Epoch: 0, Time: 0.03372s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.02159s, Loss: 1.94056
update best: 0.31269
Epoch: 2, Time: 0.02092s, Loss: 1.93354
Epoch: 3, Time: 0.02354s, Loss: 1.92540
Epoch: 4, Time: 0.02088s, Loss: 1.91536
Epoch: 5, Time: 0.01981s, Loss: 1.90277
update best: 0.31698
Epoch: 6, Time: 0.02293s, Loss: 1.88941
update best: 0.32321
Epoch: 7, Time: 0.02283s, Loss: 1.87323
update best: 0.34657
Epoch: 8, Time: 0.02177s, Loss: 1.85615
update best: 0.37266
Epoch: 9, Time: 0.02019s, Loss: 1.83597
update best: 0.40226
Epoch: 10, Time: 0.02033s, Loss: 1.81795
update best: 0.44393
Epoch: 11, Time: 0.02060s, Loss: 1.79352
update best: 0.47469
Epoch: 12, Time: 0.01963s, Loss: 1.76298
update best: 0.50662
Epoch: 13, Time: 0.02082s, Loss: 1.73436
update best: 0.53466
Epoch: 14, Time: 0.02092s, Loss: 1.70780
update best: 0.55569
Epoch: 15, Time: 0.02007s, Loss: 1.67268
update best: 0.56854
Epoch: 16, Time: 0.02138s, Loss: 1.63722
update best: 0.57671
Epoch: 17, Time: 0.02243s, Loss: 1.60288
update best: 0.59151
Epoch: 18, Time: 0.02038s, Loss: 1.56713
update best: 0.61838
Epoch: 19, Time: 0.01995s, Loss: 1.53034
update best: 0.63318
Epoch: 20, Time: 0.02188s, Loss: 1.48350
update best: 0.64330
Epoch: 21, Time: 0.02018s, Loss: 1.44192
update best: 0.65187
Epoch: 22, Time: 0.01863s, Loss: 1.39956
update best: 0.66238
Epoch: 23, Time: 0.02046s, Loss: 1.35380
update best: 0.66861
Epoch: 24, Time: 0.02048s, Loss: 1.31408
update best: 0.67212
Epoch: 25, Time: 0.02100s, Loss: 1.27004
update best: 0.67445
Epoch: 26, Time: 0.02076s, Loss: 1.23186
update best: 0.67952
Epoch: 27, Time: 0.02029s, Loss: 1.18439
update best: 0.68146
Epoch: 28, Time: 0.01958s, Loss: 1.15004
update best: 0.68497
Epoch: 29, Time: 0.02028s, Loss: 1.11990

train finished!
best val: 0.68497
test...
final result: epoch: 28
{'accuracy': 0.6849688291549683, 'f1_score': 0.6619911171061926, 'f1_score -> average@micro': 0.6849688473520249}
Hypergraph(num_v=2708, num_e=1345)
Epoch: 0, Time: 0.03562s, Loss: 1.94659
update best: 0.12188
Epoch: 1, Time: 0.02142s, Loss: 1.94095
update best: 0.32360
Epoch: 2, Time: 0.02059s, Loss: 1.93416
Epoch: 3, Time: 0.02319s, Loss: 1.92638
Epoch: 4, Time: 0.01725s, Loss: 1.91670
Epoch: 5, Time: 0.01879s, Loss: 1.90424
Epoch: 6, Time: 0.01767s, Loss: 1.89131
update best: 0.32788
Epoch: 7, Time: 0.02165s, Loss: 1.87635
update best: 0.35787
Epoch: 8, Time: 0.02206s, Loss: 1.85825
update best: 0.39447
Epoch: 9, Time: 0.02062s, Loss: 1.83854
update best: 0.42874
Epoch: 10, Time: 0.02131s, Loss: 1.82155
update best: 0.47975
Epoch: 11, Time: 0.02030s, Loss: 1.79628
update best: 0.52064
Epoch: 12, Time: 0.02089s, Loss: 1.76693
update best: 0.55179
Epoch: 13, Time: 0.01841s, Loss: 1.73684
update best: 0.56386
Epoch: 14, Time: 0.02132s, Loss: 1.71107
update best: 0.57204
Epoch: 15, Time: 0.02004s, Loss: 1.67572
update best: 0.58061
Epoch: 16, Time: 0.02125s, Loss: 1.64067
update best: 0.59346
Epoch: 17, Time: 0.02012s, Loss: 1.60716
update best: 0.62227
Epoch: 18, Time: 0.02139s, Loss: 1.56921
update best: 0.64213
Epoch: 19, Time: 0.01826s, Loss: 1.53324
update best: 0.64992
Epoch: 20, Time: 0.02062s, Loss: 1.48675
update best: 0.65771
Epoch: 21, Time: 0.02141s, Loss: 1.44620
update best: 0.66355
Epoch: 22, Time: 0.02287s, Loss: 1.40500
update best: 0.67095
Epoch: 23, Time: 0.01692s, Loss: 1.35729
update best: 0.67445
Epoch: 24, Time: 0.02100s, Loss: 1.31995
update best: 0.67679
Epoch: 25, Time: 0.02018s, Loss: 1.27582
Epoch: 26, Time: 0.02005s, Loss: 1.23493
update best: 0.67952
Epoch: 27, Time: 0.02150s, Loss: 1.19152
update best: 0.67991
Epoch: 28, Time: 0.02185s, Loss: 1.15504
update best: 0.68263
Epoch: 29, Time: 0.02245s, Loss: 1.12700

train finished!
best val: 0.68263
test...
final result: epoch: 28
{'accuracy': 0.6826323866844177, 'f1_score': 0.6626007336573592, 'f1_score -> average@micro': 0.682632398753894}
Hypergraph(num_v=2708, num_e=1231)
Epoch: 0, Time: 0.03503s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.01728s, Loss: 1.94050
update best: 0.35903
Epoch: 2, Time: 0.02106s, Loss: 1.93351
Epoch: 3, Time: 0.01990s, Loss: 1.92539
Epoch: 4, Time: 0.02339s, Loss: 1.91512
Epoch: 5, Time: 0.02350s, Loss: 1.90216
Epoch: 6, Time: 0.02338s, Loss: 1.88841
Epoch: 7, Time: 0.02478s, Loss: 1.87295
update best: 0.36332
Epoch: 8, Time: 0.02136s, Loss: 1.85512
update best: 0.39058
Epoch: 9, Time: 0.02076s, Loss: 1.83423
update best: 0.41978
Epoch: 10, Time: 0.02135s, Loss: 1.81577
update best: 0.45989
Epoch: 11, Time: 0.02063s, Loss: 1.79055
update best: 0.49922
Epoch: 12, Time: 0.02140s, Loss: 1.75967
update best: 0.53427
Epoch: 13, Time: 0.02084s, Loss: 1.72999
update best: 0.55413
Epoch: 14, Time: 0.02135s, Loss: 1.70253
update best: 0.56386
Epoch: 15, Time: 0.02163s, Loss: 1.66737
update best: 0.57477
Epoch: 16, Time: 0.02059s, Loss: 1.63064
update best: 0.58489
Epoch: 17, Time: 0.02105s, Loss: 1.59538
update best: 0.61020
Epoch: 18, Time: 0.02137s, Loss: 1.55820
update best: 0.63201
Epoch: 19, Time: 0.02031s, Loss: 1.52172
update best: 0.64097
Epoch: 20, Time: 0.02074s, Loss: 1.47175
update best: 0.65031
Epoch: 21, Time: 0.02093s, Loss: 1.43212
update best: 0.65810
Epoch: 22, Time: 0.02068s, Loss: 1.38867
update best: 0.66706
Epoch: 23, Time: 0.02093s, Loss: 1.34108
update best: 0.66939
Epoch: 24, Time: 0.02073s, Loss: 1.30372
update best: 0.67290
Epoch: 25, Time: 0.02061s, Loss: 1.25607
update best: 0.67874
Epoch: 26, Time: 0.02126s, Loss: 1.21814
update best: 0.68030
Epoch: 27, Time: 0.02091s, Loss: 1.17242
update best: 0.68458
Epoch: 28, Time: 0.02114s, Loss: 1.13717
update best: 0.68847
Epoch: 29, Time: 0.02072s, Loss: 1.10892

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6656316248022973, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1522)
Epoch: 0, Time: 0.04125s, Loss: 1.94653
update best: 0.12150
Epoch: 1, Time: 0.02390s, Loss: 1.94098
update best: 0.30880
Epoch: 2, Time: 0.02345s, Loss: 1.93453
Epoch: 3, Time: 0.02278s, Loss: 1.92693
Epoch: 4, Time: 0.02305s, Loss: 1.91785
Epoch: 5, Time: 0.02353s, Loss: 1.90543
Epoch: 6, Time: 0.02369s, Loss: 1.89333
update best: 0.32243
Epoch: 7, Time: 0.02407s, Loss: 1.87815
update best: 0.35514
Epoch: 8, Time: 0.02376s, Loss: 1.86113
update best: 0.38240
Epoch: 9, Time: 0.02548s, Loss: 1.84046
update best: 0.41160
Epoch: 10, Time: 0.02567s, Loss: 1.82460
update best: 0.44782
Epoch: 11, Time: 0.02298s, Loss: 1.79980
update best: 0.48910
Epoch: 12, Time: 0.02416s, Loss: 1.77172
update best: 0.51285
Epoch: 13, Time: 0.02545s, Loss: 1.74279
update best: 0.54245
Epoch: 14, Time: 0.02406s, Loss: 1.71712
update best: 0.55919[I 2024-01-18 04:51:06,037] Trial 75 finished with value: 0.6725077629089355 and parameters: {'border': 0.9690000000000001}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:51:34,822] Trial 76 finished with value: 0.6495327353477478 and parameters: {'border': 0.9520000000000001}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:52:03,399] Trial 77 finished with value: 0.6799065470695496 and parameters: {'border': 0.978}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:52:31,779] Trial 78 finished with value: 0.6884735226631165 and parameters: {'border': 0.984}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)

Epoch: 15, Time: 0.02189s, Loss: 1.68377
update best: 0.56931
Epoch: 16, Time: 0.01834s, Loss: 1.64867
update best: 0.58022
Epoch: 17, Time: 0.01828s, Loss: 1.61797
update best: 0.61020
Epoch: 18, Time: 0.01966s, Loss: 1.58067
update best: 0.62695
Epoch: 19, Time: 0.02116s, Loss: 1.54662
update best: 0.64252
Epoch: 20, Time: 0.02119s, Loss: 1.49969
update best: 0.64564
Epoch: 21, Time: 0.01997s, Loss: 1.46239
update best: 0.64914
Epoch: 22, Time: 0.02451s, Loss: 1.42512
update best: 0.64953
Epoch: 23, Time: 0.02179s, Loss: 1.37777
update best: 0.65148
Epoch: 24, Time: 0.01813s, Loss: 1.33926
update best: 0.65615
Epoch: 25, Time: 0.02124s, Loss: 1.29627
update best: 0.66083
Epoch: 26, Time: 0.02281s, Loss: 1.26245
update best: 0.66472
Epoch: 27, Time: 0.02301s, Loss: 1.21636
update best: 0.66900
Epoch: 28, Time: 0.02182s, Loss: 1.18554
update best: 0.67251
Epoch: 29, Time: 0.02177s, Loss: 1.15823

train finished!
best val: 0.67251
test...
final result: epoch: 28
{'accuracy': 0.6725077629089355, 'f1_score': 0.6516142904767739, 'f1_score -> average@micro': 0.6725077881619937}
Hypergraph(num_v=2708, num_e=1624)
Epoch: 0, Time: 0.04718s, Loss: 1.94638
update best: 0.12227
Epoch: 1, Time: 0.02672s, Loss: 1.94150
update best: 0.30491
Epoch: 2, Time: 0.02539s, Loss: 1.93549
Epoch: 3, Time: 0.02514s, Loss: 1.92893
Epoch: 4, Time: 0.02524s, Loss: 1.92028
Epoch: 5, Time: 0.02534s, Loss: 1.90947
Epoch: 6, Time: 0.02497s, Loss: 1.89865
update best: 0.31386
Epoch: 7, Time: 0.02492s, Loss: 1.88602
update best: 0.33100
Epoch: 8, Time: 0.02515s, Loss: 1.86977
update best: 0.37072
Epoch: 9, Time: 0.02486s, Loss: 1.85119
update best: 0.40304
Epoch: 10, Time: 0.02502s, Loss: 1.83727
update best: 0.43536
Epoch: 11, Time: 0.02516s, Loss: 1.81488
update best: 0.46924
Epoch: 12, Time: 0.02233s, Loss: 1.79016
update best: 0.49611
Epoch: 13, Time: 0.02695s, Loss: 1.76371
update best: 0.52064
Epoch: 14, Time: 0.02512s, Loss: 1.74074
update best: 0.53388
Epoch: 15, Time: 0.02658s, Loss: 1.71137
update best: 0.55023
Epoch: 16, Time: 0.02475s, Loss: 1.68193
update best: 0.57671
Epoch: 17, Time: 0.02526s, Loss: 1.65256
update best: 0.59735
Epoch: 18, Time: 0.02513s, Loss: 1.61789
update best: 0.60670
Epoch: 19, Time: 0.02447s, Loss: 1.58649
update best: 0.61254
Epoch: 20, Time: 0.02500s, Loss: 1.54353
update best: 0.63045
Epoch: 21, Time: 0.02453s, Loss: 1.50790
update best: 0.63551
Epoch: 22, Time: 0.02488s, Loss: 1.47264
update best: 0.64097
Epoch: 23, Time: 0.02493s, Loss: 1.43345
update best: 0.64136
Epoch: 24, Time: 0.02453s, Loss: 1.39565
update best: 0.64252
Epoch: 25, Time: 0.02429s, Loss: 1.35370
update best: 0.64642
Epoch: 26, Time: 0.02457s, Loss: 1.31952
Epoch: 27, Time: 0.02440s, Loss: 1.28130
update best: 0.64720
Epoch: 28, Time: 0.02455s, Loss: 1.24944
update best: 0.64836
Epoch: 29, Time: 0.02425s, Loss: 1.22065
update best: 0.64953

train finished!
best val: 0.64953
test...
final result: epoch: 29
{'accuracy': 0.6495327353477478, 'f1_score': 0.6230362339717531, 'f1_score -> average@micro': 0.6495327102803738}
Hypergraph(num_v=2708, num_e=1359)
Epoch: 0, Time: 0.03668s, Loss: 1.94652
update best: 0.12188
Epoch: 1, Time: 0.02061s, Loss: 1.94092
update best: 0.34657
Epoch: 2, Time: 0.02137s, Loss: 1.93404
Epoch: 3, Time: 0.02317s, Loss: 1.92623
Epoch: 4, Time: 0.02307s, Loss: 1.91628
Epoch: 5, Time: 0.02304s, Loss: 1.90348
Epoch: 6, Time: 0.02330s, Loss: 1.89045
update best: 0.34735
Epoch: 7, Time: 0.02353s, Loss: 1.87511
update best: 0.38357
Epoch: 8, Time: 0.02509s, Loss: 1.85656
update best: 0.41121
Epoch: 9, Time: 0.02268s, Loss: 1.83572
update best: 0.44587
Epoch: 10, Time: 0.02332s, Loss: 1.81887
update best: 0.49221
Epoch: 11, Time: 0.02256s, Loss: 1.79267
update best: 0.52492
Epoch: 12, Time: 0.02200s, Loss: 1.76275
update best: 0.55452
Epoch: 13, Time: 0.02753s, Loss: 1.73204
update best: 0.56854
Epoch: 14, Time: 0.02371s, Loss: 1.70430
update best: 0.57593
Epoch: 15, Time: 0.02197s, Loss: 1.66881
update best: 0.58372
Epoch: 16, Time: 0.02058s, Loss: 1.63361
update best: 0.61526
Epoch: 17, Time: 0.02203s, Loss: 1.59837
update best: 0.63279
Epoch: 18, Time: 0.02092s, Loss: 1.56147
update best: 0.64603
Epoch: 19, Time: 0.02026s, Loss: 1.52374
update best: 0.65265
Epoch: 20, Time: 0.02078s, Loss: 1.47675
update best: 0.66199
Epoch: 21, Time: 0.01969s, Loss: 1.43589
update best: 0.66978
Epoch: 22, Time: 0.02028s, Loss: 1.39525
update best: 0.67095
Epoch: 23, Time: 0.01797s, Loss: 1.34581
update best: 0.67368
Epoch: 24, Time: 0.02083s, Loss: 1.30915
update best: 0.67601
Epoch: 25, Time: 0.02059s, Loss: 1.26228
update best: 0.67640
Epoch: 26, Time: 0.01982s, Loss: 1.22188
update best: 0.67796
Epoch: 27, Time: 0.02122s, Loss: 1.18048
Epoch: 28, Time: 0.01883s, Loss: 1.14303
update best: 0.67874
Epoch: 29, Time: 0.02068s, Loss: 1.11654
update best: 0.67991

train finished!
best val: 0.67991
test...
final result: epoch: 29
{'accuracy': 0.6799065470695496, 'f1_score': 0.6615280864557621, 'f1_score -> average@micro': 0.6799065420560748}
Hypergraph(num_v=2708, num_e=1231)
Epoch: 0, Time: 0.03337s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.02033s, Loss: 1.94050
update best: 0.35903
Epoch: 2, Time: 0.02082s, Loss: 1.93351
Epoch: 3, Time: 0.02165s, Loss: 1.92539
Epoch: 4, Time: 0.01967s, Loss: 1.91512
Epoch: 5, Time: 0.01949s, Loss: 1.90216
Epoch: 6, Time: 0.01950s, Loss: 1.88841
Epoch: 7, Time: 0.02346s, Loss: 1.87295
update best: 0.36332
Epoch: 8, Time: 0.02261s, Loss: 1.85512
update best: 0.39058
Epoch: 9, Time: 0.01984s, Loss: 1.83423
update best: 0.41978
Epoch: 10, Time: 0.01655s, Loss: 1.81577
update best: 0.45989
Epoch: 11, Time: 0.01565s, Loss: 1.79055
update best: 0.49922
Epoch: 12, Time: 0.02200s, Loss: 1.75967
update best: 0.53427
Epoch: 13, Time: 0.02205s, Loss: 1.72999
update best: 0.55413
Epoch: 14, Time: 0.02057s, Loss: 1.70253
update best: 0.56386
Epoch: 15, Time: 0.02462s, Loss: 1.66737
update best: 0.57477
Epoch: 16, Time: 0.02092s, Loss: 1.63064
update best: 0.58489
Epoch: 17, Time: 0.02284s, Loss: 1.59538
update best: 0.61020
Epoch: 18, Time: 0.02140s, Loss: 1.55820
update best: 0.63201
Epoch: 19, Time: 0.02025s, Loss: 1.52172
update best: 0.64097
Epoch: 20, Time: 0.02170s, Loss: 1.47175
update best: 0.65031
Epoch: 21, Time: 0.01981s, Loss: 1.43212
update best: 0.65810
Epoch: 22, Time: 0.02122s, Loss: 1.38867
update best: 0.66706
Epoch: 23, Time: 0.02134s, Loss: 1.34108
update best: 0.66939
Epoch: 24, Time: 0.02158s, Loss: 1.30372
update best: 0.67290
Epoch: 25, Time: 0.02107s, Loss: 1.25607
update best: 0.67874
Epoch: 26, Time: 0.01755s, Loss: 1.21814
update best: 0.68030
Epoch: 27, Time: 0.01804s, Loss: 1.17242
update best: 0.68458
Epoch: 28, Time: 0.01856s, Loss: 1.13717
update best: 0.68847
Epoch: 29, Time: 0.02026s, Loss: 1.10892

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6656316248022973, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1414)
Epoch: 0, Time: 0.03871s, Loss: 1.94649
update best: 0.12188
Epoch: 1, Time: 0.02341s, Loss: 1.94097
update best: 0.30491
Epoch: 2, Time: 0.02365s, Loss: 1.93435
Epoch: 3, Time: 0.02286s, Loss: 1.92684
Epoch: 4, Time: 0.02280s, Loss: 1.91749
Epoch: 5, Time: 0.02169s, Loss: 1.90488
update best: 0.31114
Epoch: 6, Time: 0.02235s, Loss: 1.89205
update best: 0.32009
Epoch: 7, Time: 0.02308s, Loss: 1.87718
update best: 0.35280
Epoch: 8, Time: 0.02216s, Loss: 1.85932
update best: 0.38201
Epoch: 9, Time: 0.02254s, Loss: 1.83880
update best: 0.42134
Epoch: 10, Time: 0.02190s, Loss: 1.82217
update best: 0.46495
Epoch: 11, Time: 0.02277s, Loss: 1.79651
update best: 0.50701
Epoch: 12, Time: 0.02589s, Loss: 1.76672
update best: 0.53505
Epoch: 13, Time: 0.02242s, Loss: 1.73664
update best: 0.56231
Epoch: 14, Time: 0.02176s, Loss: 1.70951
update best: 0.57749
Epoch: 15, Time: 0.02118s, Loss: 1.67594
update best: 0.60748
Epoch: 16, Time: 0.01902s, Loss: 1.64022
update best: 0.62227
Epoch: 17, Time: 0.02181s, Loss: 1.60615
update best: 0.63629
Epoch: 18, Time: 0.02240s, Loss: 1.56910
update best: 0.65265
Epoch: 19, Time: 0.02306s, Loss: 1.53427
update best: 0.66121
[I 2024-01-18 04:53:16,612] Trial 79 finished with value: 0.6806853413581848 and parameters: {'border': 0.975}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:54:00,922] Trial 80 finished with value: 0.6834112405776978 and parameters: {'border': 0.985}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:54:45,697] Trial 81 finished with value: 0.6884735226631165 and parameters: {'border': 0.984}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:55:30,414] Trial 82 finished with value: 0.6818535923957825 and parameters: {'border': 0.982}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 20, Time: 0.02065s, Loss: 1.48720
update best: 0.66238
Epoch: 21, Time: 0.02217s, Loss: 1.44629
update best: 0.66550
Epoch: 22, Time: 0.02167s, Loss: 1.40505
update best: 0.66861
Epoch: 23, Time: 0.02218s, Loss: 1.35909
update best: 0.66978
Epoch: 24, Time: 0.02350s, Loss: 1.31947
update best: 0.67095
Epoch: 25, Time: 0.02169s, Loss: 1.27662
update best: 0.67523
Epoch: 26, Time: 0.02146s, Loss: 1.23783
update best: 0.67640
Epoch: 27, Time: 0.02306s, Loss: 1.19532
update best: 0.67757
Epoch: 28, Time: 0.01845s, Loss: 1.15630
update best: 0.68069
Epoch: 29, Time: 0.01706s, Loss: 1.13221

train finished!
best val: 0.68069
test...
final result: epoch: 28
{'accuracy': 0.6806853413581848, 'f1_score': 0.6611809622880408, 'f1_score -> average@micro': 0.6806853582554517}
Hypergraph(num_v=2708, num_e=1213)
Epoch: 0, Time: 0.03779s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.02229s, Loss: 1.94052
update best: 0.33645
Epoch: 2, Time: 0.02151s, Loss: 1.93362
Epoch: 3, Time: 0.02102s, Loss: 1.92570
Epoch: 4, Time: 0.01933s, Loss: 1.91553
Epoch: 5, Time: 0.02050s, Loss: 1.90275
Epoch: 6, Time: 0.02090s, Loss: 1.88949
Epoch: 7, Time: 0.01924s, Loss: 1.87374
update best: 0.34657
Epoch: 8, Time: 0.02105s, Loss: 1.85659
update best: 0.37422
Epoch: 9, Time: 0.02146s, Loss: 1.83598
update best: 0.40421
Epoch: 10, Time: 0.02031s, Loss: 1.81861
update best: 0.44081
Epoch: 11, Time: 0.02128s, Loss: 1.79341
update best: 0.47235
Epoch: 12, Time: 0.02035s, Loss: 1.76276
update best: 0.50623
Epoch: 13, Time: 0.02281s, Loss: 1.73341
update best: 0.53777
Epoch: 14, Time: 0.02050s, Loss: 1.70675
update best: 0.55257
Epoch: 15, Time: 0.02066s, Loss: 1.67207
update best: 0.56659
Epoch: 16, Time: 0.01950s, Loss: 1.63500
update best: 0.57243
Epoch: 17, Time: 0.02121s, Loss: 1.60090
update best: 0.59657
Epoch: 18, Time: 0.02105s, Loss: 1.56435
update best: 0.62072
Epoch: 19, Time: 0.01980s, Loss: 1.52779
update best: 0.63629
Epoch: 20, Time: 0.02121s, Loss: 1.47842
update best: 0.64369
Epoch: 21, Time: 0.01942s, Loss: 1.43875
update best: 0.65031
Epoch: 22, Time: 0.02039s, Loss: 1.39627
update best: 0.66121
Epoch: 23, Time: 0.02068s, Loss: 1.35054
update best: 0.66667
Epoch: 24, Time: 0.01824s, Loss: 1.31201
update best: 0.67290
Epoch: 25, Time: 0.02066s, Loss: 1.26391
update best: 0.67640
Epoch: 26, Time: 0.02023s, Loss: 1.22595
update best: 0.68107
Epoch: 27, Time: 0.01984s, Loss: 1.18140
update best: 0.68302
Epoch: 28, Time: 0.01946s, Loss: 1.14702
update best: 0.68341
Epoch: 29, Time: 0.01921s, Loss: 1.11791

train finished!
best val: 0.68341
test...
final result: epoch: 28
{'accuracy': 0.6834112405776978, 'f1_score': 0.6594243772075338, 'f1_score -> average@micro': 0.6834112149532711}
Hypergraph(num_v=2708, num_e=1231)
Epoch: 0, Time: 0.03630s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.02227s, Loss: 1.94050
update best: 0.35903
Epoch: 2, Time: 0.02108s, Loss: 1.93351
Epoch: 3, Time: 0.01866s, Loss: 1.92539
Epoch: 4, Time: 0.01989s, Loss: 1.91512
Epoch: 5, Time: 0.02134s, Loss: 1.90216
Epoch: 6, Time: 0.01661s, Loss: 1.88841
Epoch: 7, Time: 0.02024s, Loss: 1.87295
update best: 0.36332
Epoch: 8, Time: 0.02325s, Loss: 1.85512
update best: 0.39058
Epoch: 9, Time: 0.01941s, Loss: 1.83423
update best: 0.41978
Epoch: 10, Time: 0.01961s, Loss: 1.81577
update best: 0.45989
Epoch: 11, Time: 0.02052s, Loss: 1.79055
update best: 0.49922
Epoch: 12, Time: 0.02005s, Loss: 1.75967
update best: 0.53427
Epoch: 13, Time: 0.02085s, Loss: 1.72999
update best: 0.55413
Epoch: 14, Time: 0.02078s, Loss: 1.70253
update best: 0.56386
Epoch: 15, Time: 0.02117s, Loss: 1.66737
update best: 0.57477
Epoch: 16, Time: 0.02066s, Loss: 1.63064
update best: 0.58489
Epoch: 17, Time: 0.01973s, Loss: 1.59538
update best: 0.61020
Epoch: 18, Time: 0.02139s, Loss: 1.55820
update best: 0.63201
Epoch: 19, Time: 0.01775s, Loss: 1.52172
update best: 0.64097
Epoch: 20, Time: 0.02001s, Loss: 1.47175
update best: 0.65031
Epoch: 21, Time: 0.01932s, Loss: 1.43212
update best: 0.65810
Epoch: 22, Time: 0.02031s, Loss: 1.38867
update best: 0.66706
Epoch: 23, Time: 0.01694s, Loss: 1.34108
update best: 0.66939
Epoch: 24, Time: 0.02016s, Loss: 1.30372
update best: 0.67290
Epoch: 25, Time: 0.02058s, Loss: 1.25607
update best: 0.67874
Epoch: 26, Time: 0.01989s, Loss: 1.21814
update best: 0.68030
Epoch: 27, Time: 0.01990s, Loss: 1.17242
update best: 0.68458
Epoch: 28, Time: 0.02068s, Loss: 1.13717
update best: 0.68847
Epoch: 29, Time: 0.01999s, Loss: 1.10892

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6656316248022973, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1281)
Epoch: 0, Time: 0.03041s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.02141s, Loss: 1.94062
update best: 0.33294
Epoch: 2, Time: 0.02260s, Loss: 1.93362
Epoch: 3, Time: 0.02344s, Loss: 1.92559
Epoch: 4, Time: 0.01966s, Loss: 1.91557
Epoch: 5, Time: 0.02155s, Loss: 1.90294
Epoch: 6, Time: 0.02087s, Loss: 1.88949
Epoch: 7, Time: 0.02044s, Loss: 1.87365
update best: 0.34813
Epoch: 8, Time: 0.02127s, Loss: 1.85619
update best: 0.37695
Epoch: 9, Time: 0.01832s, Loss: 1.83561
update best: 0.40849
Epoch: 10, Time: 0.01816s, Loss: 1.81745
update best: 0.45132
Epoch: 11, Time: 0.02158s, Loss: 1.79279
update best: 0.49455
Epoch: 12, Time: 0.02081s, Loss: 1.76204
update best: 0.53621
Epoch: 13, Time: 0.02140s, Loss: 1.73254
update best: 0.55491
Epoch: 14, Time: 0.01998s, Loss: 1.70546
update best: 0.56893
Epoch: 15, Time: 0.02261s, Loss: 1.67034
update best: 0.57632
Epoch: 16, Time: 0.02263s, Loss: 1.63495
update best: 0.58178
Epoch: 17, Time: 0.02271s, Loss: 1.60036
update best: 0.60008
Epoch: 18, Time: 0.02274s, Loss: 1.56377
update best: 0.62344
Epoch: 19, Time: 0.02127s, Loss: 1.52638
update best: 0.63863
Epoch: 20, Time: 0.02135s, Loss: 1.47911
update best: 0.64798
Epoch: 21, Time: 0.02154s, Loss: 1.43782
update best: 0.65460
Epoch: 22, Time: 0.02271s, Loss: 1.39550
update best: 0.66044
Epoch: 23, Time: 0.02155s, Loss: 1.34835
update best: 0.66900
Epoch: 24, Time: 0.02105s, Loss: 1.31079
update best: 0.67562
Epoch: 25, Time: 0.02101s, Loss: 1.26500
Epoch: 26, Time: 0.02093s, Loss: 1.22705
update best: 0.67718
Epoch: 27, Time: 0.02163s, Loss: 1.18075
update best: 0.68107
Epoch: 28, Time: 0.02092s, Loss: 1.14772
update best: 0.68185
Epoch: 29, Time: 0.02131s, Loss: 1.11757

train finished!
best val: 0.68185
test...
final result: epoch: 28
{'accuracy': 0.6818535923957825, 'f1_score': 0.658587649983078, 'f1_score -> average@micro': 0.6818535825545171}
Hypergraph(num_v=2708, num_e=1185)
Epoch: 0, Time: 0.03386s, Loss: 1.94663
update best: 0.12188
Epoch: 1, Time: 0.01989s, Loss: 1.94038
update best: 0.31114
Epoch: 2, Time: 0.02083s, Loss: 1.93330
Epoch: 3, Time: 0.02160s, Loss: 1.92500
Epoch: 4, Time: 0.01958s, Loss: 1.91457
update best: 0.31153
Epoch: 5, Time: 0.02128s, Loss: 1.90153
update best: 0.31620
Epoch: 6, Time: 0.01991s, Loss: 1.88766
update best: 0.32204
Epoch: 7, Time: 0.02275s, Loss: 1.87171
update best: 0.33879
Epoch: 8, Time: 0.02276s, Loss: 1.85352
update best: 0.37539
Epoch: 9, Time: 0.02069s, Loss: 1.83184
update best: 0.40460
Epoch: 10, Time: 0.02407s, Loss: 1.81360
update best: 0.44626
Epoch: 11, Time: 0.02603s, Loss: 1.78824
update best: 0.47508
Epoch: 12, Time: 0.02279s, Loss: 1.75643
update best: 0.52103
Epoch: 13, Time: 0.02060s, Loss: 1.72621
update best: 0.54595
Epoch: 14, Time: 0.02127s, Loss: 1.69845
update best: 0.56192
Epoch: 15, Time: 0.02017s, Loss: 1.66152
update best: 0.57009
Epoch: 16, Time: 0.01973s, Loss: 1.62307
update best: 0.58333
Epoch: 17, Time: 0.01625s, Loss: 1.58902
update best: 0.60631
Epoch: 18, Time: 0.01955s, Loss: 1.55067
update best: 0.63045
Epoch: 19, Time: 0.02009s, Loss: 1.51208
update best: 0.64252
Epoch: 20, Time: 0.02143s, Loss: 1.46314
update best: 0.65148
Epoch: 21, Time: 0.01841s, Loss: 1.42213
update best: 0.66199
Epoch: 22, Time: 0.01954s, Loss: 1.37623
update best: 0.66900
Epoch: 23, Time: 0.02002s, Loss: 1.33290
update best: 0.67173
Epoch: 24, Time: 0.02075s, Loss: 1.29185
update best: 0.67523
Epoch: 25, Time: 0.02022s, Loss: 1.24411
update best: 0.67835
[I 2024-01-18 04:56:15,051] Trial 83 finished with value: 0.6861370801925659 and parameters: {'border': 0.986}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:56:43,468] Trial 84 finished with value: 0.6884735226631165 and parameters: {'border': 0.984}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:57:27,897] Trial 85 finished with value: 0.6806853413581848 and parameters: {'border': 0.975}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:57:56,485] Trial 86 finished with value: 0.6802959442138672 and parameters: {'border': 0.98}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 26, Time: 0.02045s, Loss: 1.20520
update best: 0.68069
Epoch: 27, Time: 0.01994s, Loss: 1.16083
update best: 0.68302
Epoch: 28, Time: 0.01952s, Loss: 1.12508
update best: 0.68614
Epoch: 29, Time: 0.02017s, Loss: 1.09512

train finished!
best val: 0.68614
test...
final result: epoch: 28
{'accuracy': 0.6861370801925659, 'f1_score': 0.6633122522599343, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1231)
Epoch: 0, Time: 0.03253s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.01662s, Loss: 1.94050
update best: 0.35903
Epoch: 2, Time: 0.01963s, Loss: 1.93351
Epoch: 3, Time: 0.02043s, Loss: 1.92539
Epoch: 4, Time: 0.02074s, Loss: 1.91512
Epoch: 5, Time: 0.02078s, Loss: 1.90216
Epoch: 6, Time: 0.02393s, Loss: 1.88841
Epoch: 7, Time: 0.01866s, Loss: 1.87295
update best: 0.36332
Epoch: 8, Time: 0.01685s, Loss: 1.85512
update best: 0.39058
Epoch: 9, Time: 0.01717s, Loss: 1.83423
update best: 0.41978
Epoch: 10, Time: 0.01913s, Loss: 1.81577
update best: 0.45989
Epoch: 11, Time: 0.02063s, Loss: 1.79055
update best: 0.49922
Epoch: 12, Time: 0.01686s, Loss: 1.75967
update best: 0.53427
Epoch: 13, Time: 0.02074s, Loss: 1.72999
update best: 0.55413
Epoch: 14, Time: 0.01714s, Loss: 1.70253
update best: 0.56386
Epoch: 15, Time: 0.01784s, Loss: 1.66737
update best: 0.57477
Epoch: 16, Time: 0.01520s, Loss: 1.63064
update best: 0.58489
Epoch: 17, Time: 0.01693s, Loss: 1.59538
update best: 0.61020
Epoch: 18, Time: 0.01575s, Loss: 1.55820
update best: 0.63201
Epoch: 19, Time: 0.01688s, Loss: 1.52172
update best: 0.64097
Epoch: 20, Time: 0.01718s, Loss: 1.47175
update best: 0.65031
Epoch: 21, Time: 0.01688s, Loss: 1.43212
update best: 0.65810
Epoch: 22, Time: 0.01707s, Loss: 1.38867
update best: 0.66706
Epoch: 23, Time: 0.01701s, Loss: 1.34108
update best: 0.66939
Epoch: 24, Time: 0.01658s, Loss: 1.30372
update best: 0.67290
Epoch: 25, Time: 0.01591s, Loss: 1.25607
update best: 0.67874
Epoch: 26, Time: 0.01554s, Loss: 1.21814
update best: 0.68030
Epoch: 27, Time: 0.01697s, Loss: 1.17242
update best: 0.68458
Epoch: 28, Time: 0.01566s, Loss: 1.13717
update best: 0.68847
Epoch: 29, Time: 0.01729s, Loss: 1.10892

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6656316248022973, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1414)
Epoch: 0, Time: 0.03845s, Loss: 1.94649
update best: 0.12188
Epoch: 1, Time: 0.02152s, Loss: 1.94097
update best: 0.30491
Epoch: 2, Time: 0.02207s, Loss: 1.93435
Epoch: 3, Time: 0.02293s, Loss: 1.92684
Epoch: 4, Time: 0.02175s, Loss: 1.91749
Epoch: 5, Time: 0.02393s, Loss: 1.90488
update best: 0.31114
Epoch: 6, Time: 0.02585s, Loss: 1.89205
update best: 0.32009
Epoch: 7, Time: 0.02240s, Loss: 1.87718
update best: 0.35280
Epoch: 8, Time: 0.02620s, Loss: 1.85932
update best: 0.38201
Epoch: 9, Time: 0.02134s, Loss: 1.83880
update best: 0.42134
Epoch: 10, Time: 0.02177s, Loss: 1.82217
update best: 0.46495
Epoch: 11, Time: 0.02002s, Loss: 1.79651
update best: 0.50701
Epoch: 12, Time: 0.02188s, Loss: 1.76672
update best: 0.53505
Epoch: 13, Time: 0.02193s, Loss: 1.73664
update best: 0.56231
Epoch: 14, Time: 0.02225s, Loss: 1.70951
update best: 0.57749
Epoch: 15, Time: 0.02238s, Loss: 1.67594
update best: 0.60748
Epoch: 16, Time: 0.02211s, Loss: 1.64022
update best: 0.62227
Epoch: 17, Time: 0.02184s, Loss: 1.60615
update best: 0.63629
Epoch: 18, Time: 0.02163s, Loss: 1.56910
update best: 0.65265
Epoch: 19, Time: 0.02263s, Loss: 1.53427
update best: 0.66121
Epoch: 20, Time: 0.02215s, Loss: 1.48720
update best: 0.66238
Epoch: 21, Time: 0.02643s, Loss: 1.44629
update best: 0.66550
Epoch: 22, Time: 0.02221s, Loss: 1.40505
update best: 0.66861
Epoch: 23, Time: 0.02168s, Loss: 1.35909
update best: 0.66978
Epoch: 24, Time: 0.02153s, Loss: 1.31947
update best: 0.67095
Epoch: 25, Time: 0.02235s, Loss: 1.27662
update best: 0.67523
Epoch: 26, Time: 0.02456s, Loss: 1.23783
update best: 0.67640
Epoch: 27, Time: 0.02225s, Loss: 1.19532
update best: 0.67757
Epoch: 28, Time: 0.02045s, Loss: 1.15630
update best: 0.68069
Epoch: 29, Time: 0.02126s, Loss: 1.13221

train finished!
best val: 0.68069
test...
final result: epoch: 28
{'accuracy': 0.6806853413581848, 'f1_score': 0.6611809622880408, 'f1_score -> average@micro': 0.6806853582554517}
Hypergraph(num_v=2708, num_e=1326)
Epoch: 0, Time: 0.03553s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.02178s, Loss: 1.94067
update best: 0.31893
Epoch: 2, Time: 0.02079s, Loss: 1.93397
Epoch: 3, Time: 0.02109s, Loss: 1.92583
Epoch: 4, Time: 0.02219s, Loss: 1.91574
Epoch: 5, Time: 0.02142s, Loss: 1.90303
update best: 0.32048
Epoch: 6, Time: 0.02150s, Loss: 1.88976
update best: 0.32710
Epoch: 7, Time: 0.02077s, Loss: 1.87460
update best: 0.36371
Epoch: 8, Time: 0.02259s, Loss: 1.85587
update best: 0.39564
Epoch: 9, Time: 0.02650s, Loss: 1.83513
update best: 0.43224
Epoch: 10, Time: 0.02672s, Loss: 1.81844
update best: 0.48326
Epoch: 11, Time: 0.01907s, Loss: 1.79212
update best: 0.52531
Epoch: 12, Time: 0.01936s, Loss: 1.76221
update best: 0.55179
Epoch: 13, Time: 0.02278s, Loss: 1.73172
update best: 0.56659
Epoch: 14, Time: 0.02180s, Loss: 1.70450
update best: 0.57866
Epoch: 15, Time: 0.02192s, Loss: 1.66927
update best: 0.58294
Epoch: 16, Time: 0.02248s, Loss: 1.63419
update best: 0.59073
Epoch: 17, Time: 0.02170s, Loss: 1.59922
update best: 0.62305
Epoch: 18, Time: 0.02339s, Loss: 1.56077
update best: 0.64447
Epoch: 19, Time: 0.02402s, Loss: 1.52398
update best: 0.65265
Epoch: 20, Time: 0.02126s, Loss: 1.47752
update best: 0.65927
Epoch: 21, Time: 0.02258s, Loss: 1.43573
update best: 0.66511
Epoch: 22, Time: 0.02124s, Loss: 1.39369
update best: 0.66900
Epoch: 23, Time: 0.01992s, Loss: 1.34771
update best: 0.67329
Epoch: 24, Time: 0.02131s, Loss: 1.30897
update best: 0.67523
Epoch: 25, Time: 0.02176s, Loss: 1.26356
update best: 0.67757
Epoch: 26, Time: 0.02261s, Loss: 1.22398
Epoch: 27, Time: 0.02365s, Loss: 1.17950
update best: 0.67913
Epoch: 28, Time: 0.01865s, Loss: 1.14445
update best: 0.68030
Epoch: 29, Time: 0.01683s, Loss: 1.11528

train finished!
best val: 0.68030
test...
final result: epoch: 28
{'accuracy': 0.6802959442138672, 'f1_score': 0.658982835467708, 'f1_score -> average@micro': 0.6802959501557633}
Hypergraph(num_v=2708, num_e=1231)
Epoch: 0, Time: 0.03529s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.02019s, Loss: 1.94050
update best: 0.35903
Epoch: 2, Time: 0.02218s, Loss: 1.93351
Epoch: 3, Time: 0.02167s, Loss: 1.92539
Epoch: 4, Time: 0.02056s, Loss: 1.91512
Epoch: 5, Time: 0.02313s, Loss: 1.90216
Epoch: 6, Time: 0.01923s, Loss: 1.88841
Epoch: 7, Time: 0.02295s, Loss: 1.87295
update best: 0.36332
Epoch: 8, Time: 0.02250s, Loss: 1.85512
update best: 0.39058
Epoch: 9, Time: 0.02099s, Loss: 1.83423
update best: 0.41978
Epoch: 10, Time: 0.02086s, Loss: 1.81577
update best: 0.45989
Epoch: 11, Time: 0.01915s, Loss: 1.79055
update best: 0.49922
Epoch: 12, Time: 0.02180s, Loss: 1.75967
update best: 0.53427
Epoch: 13, Time: 0.02011s, Loss: 1.72999
update best: 0.55413
Epoch: 14, Time: 0.02284s, Loss: 1.70253
update best: 0.56386
Epoch: 15, Time: 0.01904s, Loss: 1.66737
update best: 0.57477
Epoch: 16, Time: 0.02074s, Loss: 1.63064
update best: 0.58489
Epoch: 17, Time: 0.02097s, Loss: 1.59538
update best: 0.61020
Epoch: 18, Time: 0.01926s, Loss: 1.55820
update best: 0.63201
Epoch: 19, Time: 0.02302s, Loss: 1.52172
update best: 0.64097
Epoch: 20, Time: 0.02118s, Loss: 1.47175
update best: 0.65031
Epoch: 21, Time: 0.02458s, Loss: 1.43212
update best: 0.65810
Epoch: 22, Time: 0.01696s, Loss: 1.38867
update best: 0.66706
Epoch: 23, Time: 0.01898s, Loss: 1.34108
update best: 0.66939
Epoch: 24, Time: 0.02213s, Loss: 1.30372
update best: 0.67290
Epoch: 25, Time: 0.02136s, Loss: 1.25607
update best: 0.67874
Epoch: 26, Time: 0.02320s, Loss: 1.21814
update best: 0.68030
Epoch: 27, Time: 0.02045s, Loss: 1.17242
update best: 0.68458
Epoch: 28, Time: 0.02008s, Loss: 1.13717
update best: 0.68847
Epoch: 29, Time: 0.01913s, Loss: 1.10892

train finished!
best val: 0.68847
test...
final result: epoch: 28
[I 2024-01-18 04:58:41,120] Trial 87 finished with value: 0.6884735226631165 and parameters: {'border': 0.984}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:59:09,511] Trial 88 finished with value: 0.6822429895401001 and parameters: {'border': 0.987}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 04:59:53,444] Trial 89 finished with value: 0.6830217838287354 and parameters: {'border': 0.989}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 05:00:22,005] Trial 90 finished with value: 0.6799065470695496 and parameters: {'border': 0.978}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 05:00:50,405] Trial 91 finished with value: 0.6884735226631165 and parameters: {'border': 0.984}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
{'accuracy': 0.6884735226631165, 'f1_score': 0.6656316248022973, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1167)
Epoch: 0, Time: 0.03342s, Loss: 1.94655
update best: 0.12188
Epoch: 1, Time: 0.02182s, Loss: 1.94050
update best: 0.36137
Epoch: 2, Time: 0.01911s, Loss: 1.93356
Epoch: 3, Time: 0.02056s, Loss: 1.92526
Epoch: 4, Time: 0.02096s, Loss: 1.91494
Epoch: 5, Time: 0.02161s, Loss: 1.90198
Epoch: 6, Time: 0.02067s, Loss: 1.88824
Epoch: 7, Time: 0.02114s, Loss: 1.87201
update best: 0.36332
Epoch: 8, Time: 0.02327s, Loss: 1.85422
update best: 0.39136
Epoch: 9, Time: 0.01716s, Loss: 1.83320
update best: 0.41316
Epoch: 10, Time: 0.01950s, Loss: 1.81546
update best: 0.45210
Epoch: 11, Time: 0.01868s, Loss: 1.78970
update best: 0.48326
Epoch: 12, Time: 0.01713s, Loss: 1.75844
update best: 0.52181
Epoch: 13, Time: 0.01708s, Loss: 1.72821
update best: 0.53972
Epoch: 14, Time: 0.01548s, Loss: 1.70130
update best: 0.56308
Epoch: 15, Time: 0.01547s, Loss: 1.66473
update best: 0.56970
Epoch: 16, Time: 0.01397s, Loss: 1.62751
update best: 0.58606
Epoch: 17, Time: 0.01631s, Loss: 1.59296
update best: 0.61565
Epoch: 18, Time: 0.01367s, Loss: 1.55566
update best: 0.63240
Epoch: 19, Time: 0.01503s, Loss: 1.51956
update best: 0.64408
Epoch: 20, Time: 0.01337s, Loss: 1.46854
update best: 0.65343
Epoch: 21, Time: 0.01433s, Loss: 1.42859
update best: 0.65693
Epoch: 22, Time: 0.01370s, Loss: 1.38404
update best: 0.66511
Epoch: 23, Time: 0.01496s, Loss: 1.34054
update best: 0.67056
Epoch: 24, Time: 0.01474s, Loss: 1.30011
update best: 0.67523
Epoch: 25, Time: 0.01420s, Loss: 1.25329
update best: 0.67913
Epoch: 26, Time: 0.01422s, Loss: 1.21459
update best: 0.68030
Epoch: 27, Time: 0.01332s, Loss: 1.17088
update best: 0.68224
Epoch: 28, Time: 0.01422s, Loss: 1.13562
Epoch: 29, Time: 0.01354s, Loss: 1.10751

train finished!
best val: 0.68224
test...
final result: epoch: 27
{'accuracy': 0.6822429895401001, 'f1_score': 0.6574355708299444, 'f1_score -> average@micro': 0.6822429906542056}
Hypergraph(num_v=2708, num_e=1134)
Epoch: 0, Time: 0.03469s, Loss: 1.94660
update best: 0.12188
Epoch: 1, Time: 0.01942s, Loss: 1.94040
update best: 0.32126
Epoch: 2, Time: 0.01929s, Loss: 1.93346
Epoch: 3, Time: 0.02073s, Loss: 1.92534
Epoch: 4, Time: 0.02255s, Loss: 1.91495
Epoch: 5, Time: 0.02330s, Loss: 1.90199
Epoch: 6, Time: 0.02008s, Loss: 1.88859
update best: 0.32243
Epoch: 7, Time: 0.02028s, Loss: 1.87204
update best: 0.34618
Epoch: 8, Time: 0.02006s, Loss: 1.85477
update best: 0.37111
Epoch: 9, Time: 0.01878s, Loss: 1.83395
update best: 0.40343
Epoch: 10, Time: 0.02302s, Loss: 1.81650
update best: 0.43964
Epoch: 11, Time: 0.02273s, Loss: 1.79131
update best: 0.47313
Epoch: 12, Time: 0.02048s, Loss: 1.76107
update best: 0.50896
Epoch: 13, Time: 0.02025s, Loss: 1.73034
update best: 0.53699
Epoch: 14, Time: 0.01988s, Loss: 1.70421
update best: 0.55218
Epoch: 15, Time: 0.01936s, Loss: 1.66795
update best: 0.57126
Epoch: 16, Time: 0.01932s, Loss: 1.63156
update best: 0.58294
Epoch: 17, Time: 0.01926s, Loss: 1.59818
update best: 0.59385
Epoch: 18, Time: 0.01795s, Loss: 1.56092
update best: 0.61838
Epoch: 19, Time: 0.01983s, Loss: 1.52519
update best: 0.63396
Epoch: 20, Time: 0.02028s, Loss: 1.47484
update best: 0.64525
Epoch: 21, Time: 0.01954s, Loss: 1.43541
update best: 0.65343
Epoch: 22, Time: 0.01912s, Loss: 1.39206
update best: 0.66044
Epoch: 23, Time: 0.01926s, Loss: 1.34986
update best: 0.66550
Epoch: 24, Time: 0.01903s, Loss: 1.30949
update best: 0.66628
Epoch: 25, Time: 0.01954s, Loss: 1.26215
update best: 0.67134
Epoch: 26, Time: 0.01958s, Loss: 1.22187
update best: 0.67251
Epoch: 27, Time: 0.01954s, Loss: 1.18191
update best: 0.68030
Epoch: 28, Time: 0.01925s, Loss: 1.14356
update best: 0.68302
Epoch: 29, Time: 0.01931s, Loss: 1.11468

train finished!
best val: 0.68302
test...
final result: epoch: 28
{'accuracy': 0.6830217838287354, 'f1_score': 0.6566899385410165, 'f1_score -> average@micro': 0.6830218068535826}
Hypergraph(num_v=2708, num_e=1359)
Epoch: 0, Time: 0.03558s, Loss: 1.94652
update best: 0.12188
Epoch: 1, Time: 0.02142s, Loss: 1.94092
update best: 0.34657
Epoch: 2, Time: 0.02268s, Loss: 1.93404
Epoch: 3, Time: 0.01920s, Loss: 1.92623
Epoch: 4, Time: 0.01939s, Loss: 1.91628
Epoch: 5, Time: 0.01919s, Loss: 1.90348
Epoch: 6, Time: 0.01981s, Loss: 1.89045
update best: 0.34735
Epoch: 7, Time: 0.02145s, Loss: 1.87511
update best: 0.38357
Epoch: 8, Time: 0.02074s, Loss: 1.85656
update best: 0.41121
Epoch: 9, Time: 0.01883s, Loss: 1.83572
update best: 0.44587
Epoch: 10, Time: 0.02156s, Loss: 1.81887
update best: 0.49221
Epoch: 11, Time: 0.01966s, Loss: 1.79267
update best: 0.52492
Epoch: 12, Time: 0.02050s, Loss: 1.76275
update best: 0.55452
Epoch: 13, Time: 0.02078s, Loss: 1.73204
update best: 0.56854
Epoch: 14, Time: 0.02092s, Loss: 1.70430
update best: 0.57593
Epoch: 15, Time: 0.02024s, Loss: 1.66881
update best: 0.58372
Epoch: 16, Time: 0.02103s, Loss: 1.63361
update best: 0.61526
Epoch: 17, Time: 0.01941s, Loss: 1.59837
update best: 0.63279
Epoch: 18, Time: 0.02050s, Loss: 1.56147
update best: 0.64603
Epoch: 19, Time: 0.02139s, Loss: 1.52374
update best: 0.65265
Epoch: 20, Time: 0.01915s, Loss: 1.47675
update best: 0.66199
Epoch: 21, Time: 0.01919s, Loss: 1.43589
update best: 0.66978
Epoch: 22, Time: 0.01992s, Loss: 1.39525
update best: 0.67095
Epoch: 23, Time: 0.01874s, Loss: 1.34581
update best: 0.67368
Epoch: 24, Time: 0.02014s, Loss: 1.30915
update best: 0.67601
Epoch: 25, Time: 0.01944s, Loss: 1.26228
update best: 0.67640
Epoch: 26, Time: 0.02052s, Loss: 1.22188
update best: 0.67796
Epoch: 27, Time: 0.02064s, Loss: 1.18048
Epoch: 28, Time: 0.01925s, Loss: 1.14303
update best: 0.67874
Epoch: 29, Time: 0.02104s, Loss: 1.11654
update best: 0.67991

train finished!
best val: 0.67991
test...
final result: epoch: 29
{'accuracy': 0.6799065470695496, 'f1_score': 0.6615280864557621, 'f1_score -> average@micro': 0.6799065420560748}
Hypergraph(num_v=2708, num_e=1231)
Epoch: 0, Time: 0.03429s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.01817s, Loss: 1.94050
update best: 0.35903
Epoch: 2, Time: 0.02055s, Loss: 1.93351
Epoch: 3, Time: 0.02024s, Loss: 1.92539
Epoch: 4, Time: 0.01870s, Loss: 1.91512
Epoch: 5, Time: 0.02040s, Loss: 1.90216
Epoch: 6, Time: 0.02348s, Loss: 1.88841
Epoch: 7, Time: 0.02302s, Loss: 1.87295
update best: 0.36332
Epoch: 8, Time: 0.02641s, Loss: 1.85512
update best: 0.39058
Epoch: 9, Time: 0.02248s, Loss: 1.83423
update best: 0.41978
Epoch: 10, Time: 0.02239s, Loss: 1.81577
update best: 0.45989
Epoch: 11, Time: 0.02245s, Loss: 1.79055
update best: 0.49922
Epoch: 12, Time: 0.02259s, Loss: 1.75967
update best: 0.53427
Epoch: 13, Time: 0.02257s, Loss: 1.72999
update best: 0.55413
Epoch: 14, Time: 0.02273s, Loss: 1.70253
update best: 0.56386
Epoch: 15, Time: 0.01938s, Loss: 1.66737
update best: 0.57477
Epoch: 16, Time: 0.01900s, Loss: 1.63064
update best: 0.58489
Epoch: 17, Time: 0.01982s, Loss: 1.59538
update best: 0.61020
Epoch: 18, Time: 0.02078s, Loss: 1.55820
update best: 0.63201
Epoch: 19, Time: 0.02398s, Loss: 1.52172
update best: 0.64097
Epoch: 20, Time: 0.02065s, Loss: 1.47175
update best: 0.65031
Epoch: 21, Time: 0.02299s, Loss: 1.43212
update best: 0.65810
Epoch: 22, Time: 0.02172s, Loss: 1.38867
update best: 0.66706
Epoch: 23, Time: 0.02065s, Loss: 1.34108
update best: 0.66939
Epoch: 24, Time: 0.02124s, Loss: 1.30372
update best: 0.67290
Epoch: 25, Time: 0.01927s, Loss: 1.25607
update best: 0.67874
Epoch: 26, Time: 0.01867s, Loss: 1.21814
update best: 0.68030
Epoch: 27, Time: 0.01901s, Loss: 1.17242
update best: 0.68458
Epoch: 28, Time: 0.01914s, Loss: 1.13717
update best: 0.68847
Epoch: 29, Time: 0.02096s, Loss: 1.10892

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6656316248022973, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1231)
Epoch: 0, Time: 0.03231s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.01966s, Loss: 1.94050
update best: 0.35903
Epoch: 2, Time: 0.02192s, Loss: 1.93351
Epoch: 3, Time: 0.01789s, Loss: 1.92539
Epoch: 4, Time: 0.01952s, Loss: 1.91512
[I 2024-01-18 05:01:19,009] Trial 92 finished with value: 0.6884735226631165 and parameters: {'border': 0.984}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 05:01:47,616] Trial 93 finished with value: 0.6802959442138672 and parameters: {'border': 0.981}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 05:02:16,088] Trial 94 finished with value: 0.6783488988876343 and parameters: {'border': 0.977}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 05:02:44,559] Trial 95 finished with value: 0.6869158744812012 and parameters: {'border': 0.991}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
Epoch: 5, Time: 0.01956s, Loss: 1.90216
Epoch: 6, Time: 0.02341s, Loss: 1.88841
Epoch: 7, Time: 0.02181s, Loss: 1.87295
update best: 0.36332
Epoch: 8, Time: 0.01887s, Loss: 1.85512
update best: 0.39058
Epoch: 9, Time: 0.01962s, Loss: 1.83423
update best: 0.41978
Epoch: 10, Time: 0.02102s, Loss: 1.81577
update best: 0.45989
Epoch: 11, Time: 0.02275s, Loss: 1.79055
update best: 0.49922
Epoch: 12, Time: 0.01892s, Loss: 1.75967
update best: 0.53427
Epoch: 13, Time: 0.02298s, Loss: 1.72999
update best: 0.55413
Epoch: 14, Time: 0.02007s, Loss: 1.70253
update best: 0.56386
Epoch: 15, Time: 0.02068s, Loss: 1.66737
update best: 0.57477
Epoch: 16, Time: 0.01818s, Loss: 1.63064
update best: 0.58489
Epoch: 17, Time: 0.02085s, Loss: 1.59538
update best: 0.61020
Epoch: 18, Time: 0.02030s, Loss: 1.55820
update best: 0.63201
Epoch: 19, Time: 0.02049s, Loss: 1.52172
update best: 0.64097
Epoch: 20, Time: 0.02068s, Loss: 1.47175
update best: 0.65031
Epoch: 21, Time: 0.02072s, Loss: 1.43212
update best: 0.65810
Epoch: 22, Time: 0.01916s, Loss: 1.38867
update best: 0.66706
Epoch: 23, Time: 0.02046s, Loss: 1.34108
update best: 0.66939
Epoch: 24, Time: 0.02086s, Loss: 1.30372
update best: 0.67290
Epoch: 25, Time: 0.01999s, Loss: 1.25607
update best: 0.67874
Epoch: 26, Time: 0.02230s, Loss: 1.21814
update best: 0.68030
Epoch: 27, Time: 0.02194s, Loss: 1.17242
update best: 0.68458
Epoch: 28, Time: 0.01969s, Loss: 1.13717
update best: 0.68847
Epoch: 29, Time: 0.01961s, Loss: 1.10892

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6656316248022973, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1299)
Epoch: 0, Time: 0.03457s, Loss: 1.94655
update best: 0.12188
Epoch: 1, Time: 0.01950s, Loss: 1.94069
update best: 0.31075
Epoch: 2, Time: 0.02115s, Loss: 1.93371
Epoch: 3, Time: 0.02076s, Loss: 1.92579
update best: 0.31231
Epoch: 4, Time: 0.02103s, Loss: 1.91566
update best: 0.31659
Epoch: 5, Time: 0.02080s, Loss: 1.90310
update best: 0.32165
Epoch: 6, Time: 0.02241s, Loss: 1.88959
update best: 0.33294
Epoch: 7, Time: 0.02507s, Loss: 1.87414
update best: 0.36565
Epoch: 8, Time: 0.02036s, Loss: 1.85638
update best: 0.39486
Epoch: 9, Time: 0.02269s, Loss: 1.83581
update best: 0.42991
Epoch: 10, Time: 0.02257s, Loss: 1.81786
update best: 0.47547
Epoch: 11, Time: 0.02291s, Loss: 1.79278
update best: 0.51636
Epoch: 12, Time: 0.02279s, Loss: 1.76274
update best: 0.55101
Epoch: 13, Time: 0.02837s, Loss: 1.73319
update best: 0.56114
Epoch: 14, Time: 0.02284s, Loss: 1.70580
update best: 0.56931
Epoch: 15, Time: 0.02120s, Loss: 1.67139
update best: 0.57749
Epoch: 16, Time: 0.02113s, Loss: 1.63617
update best: 0.58333
Epoch: 17, Time: 0.02066s, Loss: 1.60213
update best: 0.60553
Epoch: 18, Time: 0.02141s, Loss: 1.56499
update best: 0.63045
Epoch: 19, Time: 0.02135s, Loss: 1.52812
update best: 0.64914
Epoch: 20, Time: 0.02034s, Loss: 1.48051
update best: 0.64953
Epoch: 21, Time: 0.01945s, Loss: 1.43963
update best: 0.66316
Epoch: 22, Time: 0.01969s, Loss: 1.39769
update best: 0.66706
Epoch: 23, Time: 0.02099s, Loss: 1.35053
update best: 0.66783
Epoch: 24, Time: 0.02259s, Loss: 1.31354
update best: 0.67484
Epoch: 25, Time: 0.02102s, Loss: 1.26760
Epoch: 26, Time: 0.01741s, Loss: 1.22837
Epoch: 27, Time: 0.01945s, Loss: 1.18420
update best: 0.67952
Epoch: 28, Time: 0.02106s, Loss: 1.15017
update best: 0.67991
Epoch: 29, Time: 0.02095s, Loss: 1.11926
update best: 0.68030

train finished!
best val: 0.68030
test...
final result: epoch: 29
{'accuracy': 0.6802959442138672, 'f1_score': 0.6582997033539028, 'f1_score -> average@micro': 0.6802959501557633}
Hypergraph(num_v=2708, num_e=1379)
Epoch: 0, Time: 0.03540s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.01835s, Loss: 1.94101
update best: 0.36488
Epoch: 2, Time: 0.02154s, Loss: 1.93433
Epoch: 3, Time: 0.02405s, Loss: 1.92662
Epoch: 4, Time: 0.02492s, Loss: 1.91700
Epoch: 5, Time: 0.01991s, Loss: 1.90432
Epoch: 6, Time: 0.01961s, Loss: 1.89139
Epoch: 7, Time: 0.01983s, Loss: 1.87630
update best: 0.37734
Epoch: 8, Time: 0.02322s, Loss: 1.85829
update best: 0.40732
Epoch: 9, Time: 0.02057s, Loss: 1.83801
update best: 0.44276
Epoch: 10, Time: 0.01980s, Loss: 1.82132
update best: 0.49377
Epoch: 11, Time: 0.02098s, Loss: 1.79589
update best: 0.52998
Epoch: 12, Time: 0.02006s, Loss: 1.76592
update best: 0.55374
Epoch: 13, Time: 0.02055s, Loss: 1.73613
update best: 0.56620
Epoch: 14, Time: 0.02118s, Loss: 1.70883
update best: 0.57477
Epoch: 15, Time: 0.02004s, Loss: 1.67371
update best: 0.57749
Epoch: 16, Time: 0.01778s, Loss: 1.63830
update best: 0.60553
Epoch: 17, Time: 0.01992s, Loss: 1.60461
update best: 0.63045
Epoch: 18, Time: 0.02053s, Loss: 1.56738
update best: 0.64252
Epoch: 19, Time: 0.01669s, Loss: 1.53163
update best: 0.65382
Epoch: 20, Time: 0.02010s, Loss: 1.48427
update best: 0.65576
Epoch: 21, Time: 0.02076s, Loss: 1.44324
update best: 0.65849
Epoch: 22, Time: 0.01719s, Loss: 1.40271
update best: 0.66394
Epoch: 23, Time: 0.02333s, Loss: 1.35483
update best: 0.66822
Epoch: 24, Time: 0.01977s, Loss: 1.31683
Epoch: 25, Time: 0.02152s, Loss: 1.27361
update best: 0.67173
Epoch: 26, Time: 0.02008s, Loss: 1.23339
update best: 0.67290
Epoch: 27, Time: 0.02050s, Loss: 1.18958
update best: 0.67329
Epoch: 28, Time: 0.01939s, Loss: 1.15407
update best: 0.67718
Epoch: 29, Time: 0.02029s, Loss: 1.12820
update best: 0.67835

train finished!
best val: 0.67835
test...
final result: epoch: 29
{'accuracy': 0.6783488988876343, 'f1_score': 0.6601141054534718, 'f1_score -> average@micro': 0.6783489096573209}
Hypergraph(num_v=2708, num_e=1102)
Epoch: 0, Time: 0.03186s, Loss: 1.94657
update best: 0.12188
Epoch: 1, Time: 0.01881s, Loss: 1.94023
update best: 0.30607
Epoch: 2, Time: 0.01973s, Loss: 1.93316
Epoch: 3, Time: 0.02110s, Loss: 1.92488
Epoch: 4, Time: 0.01993s, Loss: 1.91427
Epoch: 5, Time: 0.02386s, Loss: 1.90135
Epoch: 6, Time: 0.02226s, Loss: 1.88781
update best: 0.31542
Epoch: 7, Time: 0.01931s, Loss: 1.87181
update best: 0.33294
Epoch: 8, Time: 0.01970s, Loss: 1.85377
update best: 0.36254
Epoch: 9, Time: 0.01690s, Loss: 1.83219
update best: 0.39914
Epoch: 10, Time: 0.01864s, Loss: 1.81465
update best: 0.43692
Epoch: 11, Time: 0.01756s, Loss: 1.78920
update best: 0.48014
Epoch: 12, Time: 0.01767s, Loss: 1.75812
update best: 0.52142
Epoch: 13, Time: 0.01572s, Loss: 1.72718
update best: 0.54322
Epoch: 14, Time: 0.01663s, Loss: 1.70052
update best: 0.55997
Epoch: 15, Time: 0.01648s, Loss: 1.66493
update best: 0.57204
Epoch: 16, Time: 0.01635s, Loss: 1.62775
update best: 0.58061
Epoch: 17, Time: 0.01652s, Loss: 1.59314
update best: 0.58995
Epoch: 18, Time: 0.02029s, Loss: 1.55636
update best: 0.61137
Epoch: 19, Time: 0.02508s, Loss: 1.51844
update best: 0.63318
Epoch: 20, Time: 0.02292s, Loss: 1.46758
update best: 0.64564
Epoch: 21, Time: 0.02136s, Loss: 1.42809
update best: 0.65421
Epoch: 22, Time: 0.02102s, Loss: 1.38406
update best: 0.65888
Epoch: 23, Time: 0.02302s, Loss: 1.34019
update best: 0.66628
Epoch: 24, Time: 0.02259s, Loss: 1.30156
update best: 0.67056
Epoch: 25, Time: 0.01980s, Loss: 1.25232
update best: 0.67445
Epoch: 26, Time: 0.02058s, Loss: 1.21016
update best: 0.68030
Epoch: 27, Time: 0.02429s, Loss: 1.16988
update best: 0.68224
Epoch: 28, Time: 0.02120s, Loss: 1.13035
update best: 0.68692
Epoch: 29, Time: 0.01947s, Loss: 1.10171

train finished!
best val: 0.68692
test...
final result: epoch: 28
{'accuracy': 0.6869158744812012, 'f1_score': 0.6625469363553543, 'f1_score -> average@micro': 0.6869158878504673}
Hypergraph(num_v=2708, num_e=1185)
Epoch: 0, Time: 0.03278s, Loss: 1.94663
update best: 0.12188
Epoch: 1, Time: 0.02040s, Loss: 1.94038
update best: 0.31114
Epoch: 2, Time: 0.02085s, Loss: 1.93330
Epoch: 3, Time: 0.01856s, Loss: 1.92500
Epoch: 4, Time: 0.02061s, Loss: 1.91457
update best: 0.31153
Epoch: 5, Time: 0.02275s, Loss: 1.90153
update best: 0.31620
Epoch: 6, Time: 0.02451s, Loss: 1.88766
update best: 0.32204
Epoch: 7, Time: 0.02036s, Loss: 1.87171
update best: 0.33879
Epoch: 8, Time: 0.01868s, Loss: 1.85352
update best: 0.37539
Epoch: 9, Time: 0.02057s, Loss: 1.83184
update best: 0.40460
[I 2024-01-18 05:03:13,130] Trial 96 finished with value: 0.6861370801925659 and parameters: {'border': 0.986}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 05:03:41,734] Trial 97 finished with value: 0.6717289686203003 and parameters: {'border': 0.972}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 05:04:10,071] Trial 98 finished with value: 0.6849688291549683 and parameters: {'border': 0.983}. Best is trial 26 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.9, 1, 0.001)
[I 2024-01-18 05:04:49,426] Trial 99 finished with value: 0.6861370801925659 and parameters: {'border': 0.988}. Best is trial 26 with value: 0.6884735226631165.
Epoch: 10, Time: 0.01920s, Loss: 1.81360
update best: 0.44626
Epoch: 11, Time: 0.02140s, Loss: 1.78824
update best: 0.47508
Epoch: 12, Time: 0.02069s, Loss: 1.75643
update best: 0.52103
Epoch: 13, Time: 0.02302s, Loss: 1.72621
update best: 0.54595
Epoch: 14, Time: 0.01984s, Loss: 1.69845
update best: 0.56192
Epoch: 15, Time: 0.02007s, Loss: 1.66152
update best: 0.57009
Epoch: 16, Time: 0.02150s, Loss: 1.62307
update best: 0.58333
Epoch: 17, Time: 0.01916s, Loss: 1.58902
update best: 0.60631
Epoch: 18, Time: 0.01910s, Loss: 1.55067
update best: 0.63045
Epoch: 19, Time: 0.01906s, Loss: 1.51208
update best: 0.64252
Epoch: 20, Time: 0.01907s, Loss: 1.46314
update best: 0.65148
Epoch: 21, Time: 0.01719s, Loss: 1.42213
update best: 0.66199
Epoch: 22, Time: 0.01934s, Loss: 1.37623
update best: 0.66900
Epoch: 23, Time: 0.01925s, Loss: 1.33290
update best: 0.67173
Epoch: 24, Time: 0.02264s, Loss: 1.29185
update best: 0.67523
Epoch: 25, Time: 0.02359s, Loss: 1.24411
update best: 0.67835
Epoch: 26, Time: 0.01947s, Loss: 1.20520
update best: 0.68069
Epoch: 27, Time: 0.01912s, Loss: 1.16083
update best: 0.68302
Epoch: 28, Time: 0.02045s, Loss: 1.12508
update best: 0.68614
Epoch: 29, Time: 0.02004s, Loss: 1.09512

train finished!
best val: 0.68614
test...
final result: epoch: 28
{'accuracy': 0.6861370801925659, 'f1_score': 0.6633122522599343, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1472)
Epoch: 0, Time: 0.03973s, Loss: 1.94653
update best: 0.12227
Epoch: 1, Time: 0.02289s, Loss: 1.94087
update best: 0.30452
Epoch: 2, Time: 0.02212s, Loss: 1.93418
Epoch: 3, Time: 0.02269s, Loss: 1.92612
Epoch: 4, Time: 0.02226s, Loss: 1.91662
Epoch: 5, Time: 0.02251s, Loss: 1.90378
update best: 0.30607
Epoch: 6, Time: 0.02241s, Loss: 1.89099
update best: 0.32477
Epoch: 7, Time: 0.02238s, Loss: 1.87564
update best: 0.36137
Epoch: 8, Time: 0.02224s, Loss: 1.85759
update best: 0.39213
Epoch: 9, Time: 0.02194s, Loss: 1.83643
update best: 0.42445
Epoch: 10, Time: 0.02208s, Loss: 1.81918
update best: 0.47313
Epoch: 11, Time: 0.02266s, Loss: 1.79348
update best: 0.50545
Epoch: 12, Time: 0.02292s, Loss: 1.76411
update best: 0.54322
Epoch: 13, Time: 0.02251s, Loss: 1.73476
update best: 0.55997
Epoch: 14, Time: 0.02266s, Loss: 1.70616
update best: 0.57165
Epoch: 15, Time: 0.02363s, Loss: 1.67186
update best: 0.59735
Epoch: 16, Time: 0.02094s, Loss: 1.63594
update best: 0.62033
Epoch: 17, Time: 0.02348s, Loss: 1.60378
update best: 0.63629
Epoch: 18, Time: 0.02531s, Loss: 1.56476
update best: 0.65304
Epoch: 19, Time: 0.02310s, Loss: 1.52987
update best: 0.65615
Epoch: 20, Time: 0.02224s, Loss: 1.48328
Epoch: 21, Time: 0.02272s, Loss: 1.44283
Epoch: 22, Time: 0.02262s, Loss: 1.40191
update best: 0.65966
Epoch: 23, Time: 0.02093s, Loss: 1.35544
update best: 0.66433
Epoch: 24, Time: 0.02588s, Loss: 1.31733
update best: 0.66550
Epoch: 25, Time: 0.02357s, Loss: 1.27503
update best: 0.66939
Epoch: 26, Time: 0.02213s, Loss: 1.23890
Epoch: 27, Time: 0.02281s, Loss: 1.19493
update best: 0.67134
Epoch: 28, Time: 0.02176s, Loss: 1.15832
Epoch: 29, Time: 0.02323s, Loss: 1.13232
update best: 0.67173

train finished!
best val: 0.67173
test...
final result: epoch: 29
{'accuracy': 0.6717289686203003, 'f1_score': 0.6520928705096602, 'f1_score -> average@micro': 0.6717289719626168}
Hypergraph(num_v=2708, num_e=1255)
Epoch: 0, Time: 0.03528s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.02072s, Loss: 1.94056
update best: 0.31269
Epoch: 2, Time: 0.02045s, Loss: 1.93354
Epoch: 3, Time: 0.02064s, Loss: 1.92540
Epoch: 4, Time: 0.02061s, Loss: 1.91536
Epoch: 5, Time: 0.02047s, Loss: 1.90277
update best: 0.31698
Epoch: 6, Time: 0.02211s, Loss: 1.88941
update best: 0.32321
Epoch: 7, Time: 0.01602s, Loss: 1.87323
update best: 0.34657
Epoch: 8, Time: 0.01639s, Loss: 1.85615
update best: 0.37266
Epoch: 9, Time: 0.01795s, Loss: 1.83597
update best: 0.40226
Epoch: 10, Time: 0.01698s, Loss: 1.81795
update best: 0.44393
Epoch: 11, Time: 0.01589s, Loss: 1.79352
update best: 0.47469
Epoch: 12, Time: 0.01550s, Loss: 1.76298
update best: 0.50662
Epoch: 13, Time: 0.01587s, Loss: 1.73436
update best: 0.53466
Epoch: 14, Time: 0.01435s, Loss: 1.70780
update best: 0.55569
Epoch: 15, Time: 0.01481s, Loss: 1.67268
update best: 0.56854
Epoch: 16, Time: 0.01408s, Loss: 1.63722
update best: 0.57671
Epoch: 17, Time: 0.01438s, Loss: 1.60288
update best: 0.59151
Epoch: 18, Time: 0.01468s, Loss: 1.56713
update best: 0.61838
Epoch: 19, Time: 0.01532s, Loss: 1.53034
update best: 0.63318
Epoch: 20, Time: 0.01370s, Loss: 1.48350
update best: 0.64330
Epoch: 21, Time: 0.01493s, Loss: 1.44192
update best: 0.65187
Epoch: 22, Time: 0.01384s, Loss: 1.39956
update best: 0.66238
Epoch: 23, Time: 0.01384s, Loss: 1.35380
update best: 0.66861
Epoch: 24, Time: 0.01542s, Loss: 1.31408
update best: 0.67212
Epoch: 25, Time: 0.01392s, Loss: 1.27004
update best: 0.67445
Epoch: 26, Time: 0.01429s, Loss: 1.23186
update best: 0.67952
Epoch: 27, Time: 0.01388s, Loss: 1.18439
update best: 0.68146
Epoch: 28, Time: 0.01507s, Loss: 1.15004
update best: 0.68497
Epoch: 29, Time: 0.01507s, Loss: 1.11990

train finished!
best val: 0.68497
test...
final result: epoch: 28
{'accuracy': 0.6849688291549683, 'f1_score': 0.6619911171061926, 'f1_score -> average@micro': 0.6849688473520249}
Hypergraph(num_v=2708, num_e=1150)
Epoch: 0, Time: 0.03402s, Loss: 1.94653
update best: 0.12188
Epoch: 1, Time: 0.01929s, Loss: 1.94059
update best: 0.36449
Epoch: 2, Time: 0.02131s, Loss: 1.93353
Epoch: 3, Time: 0.02137s, Loss: 1.92516
Epoch: 4, Time: 0.02364s, Loss: 1.91465
Epoch: 5, Time: 0.01978s, Loss: 1.90151
Epoch: 6, Time: 0.01970s, Loss: 1.88785
Epoch: 7, Time: 0.02215s, Loss: 1.87198
Epoch: 8, Time: 0.02305s, Loss: 1.85370
update best: 0.39019
Epoch: 9, Time: 0.01897s, Loss: 1.83231
update best: 0.41783
Epoch: 10, Time: 0.01882s, Loss: 1.81445
update best: 0.45366
Epoch: 11, Time: 0.02235s, Loss: 1.78938
update best: 0.48910
Epoch: 12, Time: 0.02096s, Loss: 1.75809
update best: 0.52609
Epoch: 13, Time: 0.02329s, Loss: 1.72758
update best: 0.54712
Epoch: 14, Time: 0.01926s, Loss: 1.70020
update best: 0.56542
Epoch: 15, Time: 0.01916s, Loss: 1.66416
update best: 0.57438
Epoch: 16, Time: 0.01807s, Loss: 1.62656
update best: 0.58489
Epoch: 17, Time: 0.02049s, Loss: 1.59308
update best: 0.60864
Epoch: 18, Time: 0.02005s, Loss: 1.55481
update best: 0.62500
Epoch: 19, Time: 0.02662s, Loss: 1.51752
update best: 0.64097
Epoch: 20, Time: 0.02313s, Loss: 1.46721
update best: 0.64953
Epoch: 21, Time: 0.01921s, Loss: 1.42849
update best: 0.66199
Epoch: 22, Time: 0.02091s, Loss: 1.38193
update best: 0.66861
Epoch: 23, Time: 0.02088s, Loss: 1.33927
update best: 0.66939
Epoch: 24, Time: 0.01967s, Loss: 1.29939
update best: 0.67251
Epoch: 25, Time: 0.02176s, Loss: 1.25167
update best: 0.67913
Epoch: 26, Time: 0.01951s, Loss: 1.20989
update best: 0.68069
Epoch: 27, Time: 0.01976s, Loss: 1.16839
update best: 0.68458
Epoch: 28, Time: 0.02171s, Loss: 1.13037
update best: 0.68614
Epoch: 29, Time: 0.02222s, Loss: 1.10322

train finished!
best val: 0.68614
test...
final result: epoch: 28
{'accuracy': 0.6861370801925659, 'f1_score': 0.663840096895994, 'f1_score -> average@micro': 0.6861370716510904}
Number of finished trials:  100
Best trial:
  Value:  0.6884735226631165
  Params: 
    border: 0.984
