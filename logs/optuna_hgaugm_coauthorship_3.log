[I 2024-01-18 05:54:04,402] A new study created in memory with name: HGAugM_CoauthorshipCora_study
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 05:55:03,986] Trial 0 finished with value: 0.6557632684707642 and parameters: {'border': 0.953}. Best is trial 0 with value: 0.6557632684707642.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 05:56:02,744] Trial 1 finished with value: 0.6873052716255188 and parameters: {'border': 0.995}. Best is trial 1 with value: 0.6873052716255188.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 05:57:40,008] Trial 2 finished with value: 0.6584891080856323 and parameters: {'border': 0.964}. Best is trial 1 with value: 0.6873052716255188.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 05:58:40,232] Trial 3 finished with value: 0.6876947283744812 and parameters: {'border': 0.986}. Best is trial 3 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Hypergraph(num_v=2708, num_e=3166)
Epoch: 0, Time: 0.05580s, Loss: 1.94639
update best: 0.12111
Epoch: 1, Time: 0.02530s, Loss: 1.94167
update best: 0.32749
Epoch: 2, Time: 0.02581s, Loss: 1.93568
Epoch: 3, Time: 0.02445s, Loss: 1.92912
Epoch: 4, Time: 0.02449s, Loss: 1.92032
Epoch: 5, Time: 0.02489s, Loss: 1.90961
Epoch: 6, Time: 0.02434s, Loss: 1.89918
Epoch: 7, Time: 0.02456s, Loss: 1.88622
update best: 0.35864
Epoch: 8, Time: 0.02598s, Loss: 1.87061
update best: 0.38668
Epoch: 9, Time: 0.02668s, Loss: 1.85132
update best: 0.41978
Epoch: 10, Time: 0.02634s, Loss: 1.83780
update best: 0.45366
Epoch: 11, Time: 0.02440s, Loss: 1.81578
update best: 0.47936
Epoch: 12, Time: 0.02429s, Loss: 1.79033
update best: 0.49922
Epoch: 13, Time: 0.02455s, Loss: 1.76402
update best: 0.52453
Epoch: 14, Time: 0.02427s, Loss: 1.74194
update best: 0.54439
Epoch: 15, Time: 0.02557s, Loss: 1.71024
update best: 0.57593
Epoch: 16, Time: 0.02445s, Loss: 1.68097
update best: 0.59774
Epoch: 17, Time: 0.02393s, Loss: 1.65371
update best: 0.61137
Epoch: 18, Time: 0.02145s, Loss: 1.61752
update best: 0.62773
Epoch: 19, Time: 0.02391s, Loss: 1.58962
update best: 0.63824
Epoch: 20, Time: 0.02409s, Loss: 1.54566
Epoch: 21, Time: 0.02520s, Loss: 1.51175
update best: 0.63980
Epoch: 22, Time: 0.02419s, Loss: 1.47615
update best: 0.64486
Epoch: 23, Time: 0.02389s, Loss: 1.43781
update best: 0.64720
Epoch: 24, Time: 0.02449s, Loss: 1.39943
update best: 0.64953
Epoch: 25, Time: 0.02398s, Loss: 1.35885
update best: 0.65382
Epoch: 26, Time: 0.02517s, Loss: 1.31962
update best: 0.65421
Epoch: 27, Time: 0.02422s, Loss: 1.28453
update best: 0.65576
Epoch: 28, Time: 0.02609s, Loss: 1.25362
Epoch: 29, Time: 0.02375s, Loss: 1.22779

train finished!
best val: 0.65576
test...
final result: epoch: 27
{'accuracy': 0.6557632684707642, 'f1_score': 0.6314614647124686, 'f1_score -> average@micro': 0.6557632398753894}
Hypergraph(num_v=2708, num_e=1043)
Epoch: 0, Time: 0.03114s, Loss: 1.94648
update best: 0.12188
Epoch: 1, Time: 0.01916s, Loss: 1.94046
update best: 0.35631
Epoch: 2, Time: 0.02176s, Loss: 1.93322
Epoch: 3, Time: 0.02010s, Loss: 1.92475
Epoch: 4, Time: 0.02010s, Loss: 1.91396
Epoch: 5, Time: 0.02209s, Loss: 1.90058
Epoch: 6, Time: 0.01856s, Loss: 1.88653
Epoch: 7, Time: 0.01678s, Loss: 1.87075
update best: 0.36994
Epoch: 8, Time: 0.01662s, Loss: 1.85187
update best: 0.40070
Epoch: 9, Time: 0.01448s, Loss: 1.83014
update best: 0.43380
Epoch: 10, Time: 0.01567s, Loss: 1.81127
update best: 0.48014
Epoch: 11, Time: 0.01505s, Loss: 1.78464
update best: 0.51713
Epoch: 12, Time: 0.01585s, Loss: 1.75400
update best: 0.54050
Epoch: 13, Time: 0.01478s, Loss: 1.72251
update best: 0.56075
Epoch: 14, Time: 0.01535s, Loss: 1.69452
update best: 0.56581
Epoch: 15, Time: 0.01517s, Loss: 1.65760
update best: 0.57632
Epoch: 16, Time: 0.01335s, Loss: 1.61964
update best: 0.59463
Epoch: 17, Time: 0.01322s, Loss: 1.58343
update best: 0.61799
Epoch: 18, Time: 0.01452s, Loss: 1.54500
update best: 0.63435
Epoch: 19, Time: 0.01333s, Loss: 1.50713
update best: 0.64836
Epoch: 20, Time: 0.01319s, Loss: 1.45498
update best: 0.65265
Epoch: 21, Time: 0.01256s, Loss: 1.41275
update best: 0.66511
Epoch: 22, Time: 0.01521s, Loss: 1.37005
update best: 0.67173
Epoch: 23, Time: 0.01419s, Loss: 1.32308
update best: 0.67523
Epoch: 24, Time: 0.01415s, Loss: 1.28365
update best: 0.67679
Epoch: 25, Time: 0.01418s, Loss: 1.23477
update best: 0.67952
Epoch: 26, Time: 0.01417s, Loss: 1.19500
Epoch: 27, Time: 0.01290s, Loss: 1.15283
update best: 0.68419
Epoch: 28, Time: 0.01442s, Loss: 1.11185
update best: 0.68653
Epoch: 29, Time: 0.01309s, Loss: 1.08283
update best: 0.68731

train finished!
best val: 0.68731
test...
final result: epoch: 29
{'accuracy': 0.6873052716255188, 'f1_score': 0.667891010746498, 'f1_score -> average@micro': 0.6873052959501558}
Hypergraph(num_v=2708, num_e=2280)
Epoch: 0, Time: 0.04358s, Loss: 1.94644
update best: 0.12150
Epoch: 1, Time: 0.02529s, Loss: 1.94145
update best: 0.31036
Epoch: 2, Time: 0.02283s, Loss: 1.93504
Epoch: 3, Time: 0.02367s, Loss: 1.92782
Epoch: 4, Time: 0.02247s, Loss: 1.91855
Epoch: 5, Time: 0.02297s, Loss: 1.90701
Epoch: 6, Time: 0.01896s, Loss: 1.89546
update best: 0.31308
Epoch: 7, Time: 0.01940s, Loss: 1.88132
update best: 0.34229
Epoch: 8, Time: 0.01970s, Loss: 1.86484
update best: 0.37773
Epoch: 9, Time: 0.01935s, Loss: 1.84470
update best: 0.40888
Epoch: 10, Time: 0.01949s, Loss: 1.82955
update best: 0.44938
Epoch: 11, Time: 0.02072s, Loss: 1.80590
update best: 0.47625
Epoch: 12, Time: 0.02182s, Loss: 1.77800
update best: 0.50078
Epoch: 13, Time: 0.01728s, Loss: 1.75058
update best: 0.52687
Epoch: 14, Time: 0.01760s, Loss: 1.72589
update best: 0.55413
Epoch: 15, Time: 0.01967s, Loss: 1.69307
update best: 0.57555
Epoch: 16, Time: 0.01966s, Loss: 1.65972
update best: 0.60086
Epoch: 17, Time: 0.01867s, Loss: 1.63119
update best: 0.61604
Epoch: 18, Time: 0.01830s, Loss: 1.59262
update best: 0.63551
Epoch: 19, Time: 0.01802s, Loss: 1.56139
update best: 0.64798
Epoch: 20, Time: 0.01938s, Loss: 1.51413
Epoch: 21, Time: 0.02228s, Loss: 1.47622
Epoch: 22, Time: 0.01954s, Loss: 1.43914
update best: 0.65148
Epoch: 23, Time: 0.01955s, Loss: 1.39636
update best: 0.65421
Epoch: 24, Time: 0.02239s, Loss: 1.35927
Epoch: 25, Time: 0.01949s, Loss: 1.31429
Epoch: 26, Time: 0.01899s, Loss: 1.28125
update best: 0.65460
Epoch: 27, Time: 0.01922s, Loss: 1.23938
update best: 0.65615
Epoch: 28, Time: 0.01925s, Loss: 1.20361
update best: 0.65810
Epoch: 29, Time: 0.01972s, Loss: 1.17992
update best: 0.65849

train finished!
best val: 0.65849
test...
final result: epoch: 29
{'accuracy': 0.6584891080856323, 'f1_score': 0.634557509582096, 'f1_score -> average@micro': 0.6584890965732088}
Hypergraph(num_v=2708, num_e=1237)
Epoch: 0, Time: 0.03119s, Loss: 1.94663
update best: 0.12188
Epoch: 1, Time: 0.01939s, Loss: 1.94043
update best: 0.32749
Epoch: 2, Time: 0.01990s, Loss: 1.93342
Epoch: 3, Time: 0.01758s, Loss: 1.92501
Epoch: 4, Time: 0.01963s, Loss: 1.91462
Epoch: 5, Time: 0.01868s, Loss: 1.90154
Epoch: 6, Time: 0.01814s, Loss: 1.88776
Epoch: 7, Time: 0.02011s, Loss: 1.87184
update best: 0.33995
Epoch: 8, Time: 0.01611s, Loss: 1.85383
update best: 0.37656
Epoch: 9, Time: 0.01886s, Loss: 1.83192
update best: 0.40537
Epoch: 10, Time: 0.01593s, Loss: 1.81376
update best: 0.44704
Epoch: 11, Time: 0.01983s, Loss: 1.78845
update best: 0.47858
Epoch: 12, Time: 0.01615s, Loss: 1.75667
update best: 0.52181
Epoch: 13, Time: 0.02221s, Loss: 1.72660
update best: 0.55023
Epoch: 14, Time: 0.01965s, Loss: 1.69932
update best: 0.56659
Epoch: 15, Time: 0.01698s, Loss: 1.66167
update best: 0.57204
Epoch: 16, Time: 0.01898s, Loss: 1.62382
update best: 0.58528
Epoch: 17, Time: 0.01947s, Loss: 1.58996
update best: 0.60748
Epoch: 18, Time: 0.01900s, Loss: 1.55154
update best: 0.63123
Epoch: 19, Time: 0.01936s, Loss: 1.51352
update best: 0.64291
Epoch: 20, Time: 0.01713s, Loss: 1.46440
update best: 0.65343
Epoch: 21, Time: 0.01699s, Loss: 1.42280
update best: 0.66160
Epoch: 22, Time: 0.01836s, Loss: 1.37718
update best: 0.67017
Epoch: 23, Time: 0.01856s, Loss: 1.33420
update best: 0.67407
Epoch: 24, Time: 0.01940s, Loss: 1.29331
update best: 0.67874
Epoch: 25, Time: 0.01986s, Loss: 1.24430
update best: 0.68107
Epoch: 26, Time: 0.01670s, Loss: 1.20621
update best: 0.68185
Epoch: 27, Time: 0.01865s, Loss: 1.16259
update best: 0.68458
Epoch: 28, Time: 0.01606s, Loss: 1.12618
update best: 0.68769
Epoch: 29, Time: 0.01668s, Loss: 1.09703

train finished!
best val: 0.68769
test...
final result: epoch: 28
{'accuracy': 0.6876947283744812, 'f1_score': 0.6652098366111925, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=1604)
Epoch: 0, Time: 0.03668s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.02090s, Loss: 1.94093
update best: 0.31075
Epoch: 2, Time: 0.02162s, Loss: 1.93414
Epoch: 3, Time: 0.02512s, Loss: 1.92645
Epoch: 4, Time: 0.02030s, Loss: 1.91709
Epoch: 5, Time: 0.02014s, Loss: 1.90434
update best: 0.31308
Epoch: 6, Time: 0.02154s, Loss: 1.89173
update best: 0.32009
Epoch: 7, Time: 0.01927s, Loss: 1.87655
update best: 0.34735
Epoch: 8, Time: 0.01769s, Loss: 1.85905
[I 2024-01-18 05:59:38,562] Trial 4 finished with value: 0.6826323866844177 and parameters: {'border': 0.976}. Best is trial 3 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:00:37,512] Trial 5 finished with value: 0.6853582262992859 and parameters: {'border': 0.992}. Best is trial 3 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:01:36,228] Trial 6 finished with value: 0.6826323866844177 and parameters: {'border': 0.976}. Best is trial 3 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:02:35,043] Trial 7 finished with value: 0.6553738117218018 and parameters: {'border': 0.958}. Best is trial 3 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
update best: 0.38668
Epoch: 9, Time: 0.01677s, Loss: 1.83835
update best: 0.42562
Epoch: 10, Time: 0.02002s, Loss: 1.82177
update best: 0.47040
Epoch: 11, Time: 0.02060s, Loss: 1.79579
update best: 0.51051
Epoch: 12, Time: 0.02099s, Loss: 1.76643
update best: 0.53154
Epoch: 13, Time: 0.01728s, Loss: 1.73650
update best: 0.55685
Epoch: 14, Time: 0.02122s, Loss: 1.70982
update best: 0.56620
Epoch: 15, Time: 0.01918s, Loss: 1.67418
update best: 0.58061
Epoch: 16, Time: 0.01914s, Loss: 1.64038
update best: 0.60787
Epoch: 17, Time: 0.01782s, Loss: 1.60664
update best: 0.62539
Epoch: 18, Time: 0.01520s, Loss: 1.57033
update best: 0.64252
Epoch: 19, Time: 0.01464s, Loss: 1.53515
update best: 0.65460
Epoch: 20, Time: 0.01584s, Loss: 1.49012
update best: 0.65849
Epoch: 21, Time: 0.01799s, Loss: 1.44745
update best: 0.66044
Epoch: 22, Time: 0.01854s, Loss: 1.40697
update best: 0.66706
Epoch: 23, Time: 0.01853s, Loss: 1.36150
update best: 0.66939
Epoch: 24, Time: 0.01907s, Loss: 1.32175
update best: 0.67251
Epoch: 25, Time: 0.01980s, Loss: 1.27893
update best: 0.67445
Epoch: 26, Time: 0.01940s, Loss: 1.23851
update best: 0.67640
Epoch: 27, Time: 0.02033s, Loss: 1.19866
update best: 0.67718
Epoch: 28, Time: 0.01948s, Loss: 1.16109
update best: 0.67952
Epoch: 29, Time: 0.01964s, Loss: 1.13628
update best: 0.68263

train finished!
best val: 0.68263
test...
final result: epoch: 29
{'accuracy': 0.6826323866844177, 'f1_score': 0.6634167953126298, 'f1_score -> average@micro': 0.682632398753894}
Hypergraph(num_v=2708, num_e=1094)
Epoch: 0, Time: 0.03238s, Loss: 1.94664
update best: 0.12188
Epoch: 1, Time: 0.01963s, Loss: 1.94020
update best: 0.30491
Epoch: 2, Time: 0.02097s, Loss: 1.93297
Epoch: 3, Time: 0.02054s, Loss: 1.92462
Epoch: 4, Time: 0.01604s, Loss: 1.91404
Epoch: 5, Time: 0.01917s, Loss: 1.90111
update best: 0.30919
Epoch: 6, Time: 0.01991s, Loss: 1.88750
update best: 0.31698
Epoch: 7, Time: 0.01654s, Loss: 1.87170
update best: 0.32710
Epoch: 8, Time: 0.01580s, Loss: 1.85345
update best: 0.35164
Epoch: 9, Time: 0.01953s, Loss: 1.83182
update best: 0.39875
Epoch: 10, Time: 0.01948s, Loss: 1.81383
update best: 0.43886
Epoch: 11, Time: 0.01927s, Loss: 1.78861
update best: 0.48910
Epoch: 12, Time: 0.01906s, Loss: 1.75761
update best: 0.52220
Epoch: 13, Time: 0.01820s, Loss: 1.72707
update best: 0.54517
Epoch: 14, Time: 0.01677s, Loss: 1.70023
update best: 0.56153
Epoch: 15, Time: 0.01821s, Loss: 1.66424
update best: 0.56815
Epoch: 16, Time: 0.01901s, Loss: 1.62698
update best: 0.58061
Epoch: 17, Time: 0.01948s, Loss: 1.59259
update best: 0.59463
Epoch: 18, Time: 0.01853s, Loss: 1.55558
update best: 0.61877
Epoch: 19, Time: 0.01974s, Loss: 1.51741
update best: 0.63474
Epoch: 20, Time: 0.01853s, Loss: 1.46639
update best: 0.64447
Epoch: 21, Time: 0.01611s, Loss: 1.42576
update best: 0.65849
Epoch: 22, Time: 0.01958s, Loss: 1.38338
update best: 0.66511
Epoch: 23, Time: 0.01941s, Loss: 1.33898
update best: 0.66628
Epoch: 24, Time: 0.01954s, Loss: 1.30067
update best: 0.66861
Epoch: 25, Time: 0.01948s, Loss: 1.25041
update best: 0.67407
Epoch: 26, Time: 0.01836s, Loss: 1.20821
update best: 0.67991
Epoch: 27, Time: 0.01984s, Loss: 1.16992
update best: 0.68224
Epoch: 28, Time: 0.01863s, Loss: 1.13034
update best: 0.68536
Epoch: 29, Time: 0.01597s, Loss: 1.10097

train finished!
best val: 0.68536
test...
final result: epoch: 28
{'accuracy': 0.6853582262992859, 'f1_score': 0.6595623797267406, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=1604)
Epoch: 0, Time: 0.03925s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.02041s, Loss: 1.94093
update best: 0.31075
Epoch: 2, Time: 0.02170s, Loss: 1.93414
Epoch: 3, Time: 0.02147s, Loss: 1.92645
Epoch: 4, Time: 0.02122s, Loss: 1.91709
Epoch: 5, Time: 0.02084s, Loss: 1.90434
update best: 0.31308
Epoch: 6, Time: 0.02037s, Loss: 1.89173
update best: 0.32009
Epoch: 7, Time: 0.02155s, Loss: 1.87655
update best: 0.34735
Epoch: 8, Time: 0.01959s, Loss: 1.85905
update best: 0.38668
Epoch: 9, Time: 0.02222s, Loss: 1.83835
update best: 0.42562
Epoch: 10, Time: 0.02121s, Loss: 1.82177
update best: 0.47040
Epoch: 11, Time: 0.01814s, Loss: 1.79579
update best: 0.51051
Epoch: 12, Time: 0.02157s, Loss: 1.76643
update best: 0.53154
Epoch: 13, Time: 0.02150s, Loss: 1.73650
update best: 0.55685
Epoch: 14, Time: 0.02242s, Loss: 1.70982
update best: 0.56620
Epoch: 15, Time: 0.01715s, Loss: 1.67418
update best: 0.58061
Epoch: 16, Time: 0.02151s, Loss: 1.64038
update best: 0.60787
Epoch: 17, Time: 0.02067s, Loss: 1.60664
update best: 0.62539
Epoch: 18, Time: 0.02130s, Loss: 1.57033
update best: 0.64252
Epoch: 19, Time: 0.02071s, Loss: 1.53515
update best: 0.65460
Epoch: 20, Time: 0.01954s, Loss: 1.49012
update best: 0.65849
Epoch: 21, Time: 0.02021s, Loss: 1.44745
update best: 0.66044
Epoch: 22, Time: 0.02193s, Loss: 1.40697
update best: 0.66706
Epoch: 23, Time: 0.02168s, Loss: 1.36150
update best: 0.66939
Epoch: 24, Time: 0.02055s, Loss: 1.32175
update best: 0.67251
Epoch: 25, Time: 0.02090s, Loss: 1.27893
update best: 0.67445
Epoch: 26, Time: 0.02140s, Loss: 1.23851
update best: 0.67640
Epoch: 27, Time: 0.02108s, Loss: 1.19866
update best: 0.67718
Epoch: 28, Time: 0.02115s, Loss: 1.16109
update best: 0.67952
Epoch: 29, Time: 0.02073s, Loss: 1.13628
update best: 0.68263

train finished!
best val: 0.68263
test...
final result: epoch: 29
{'accuracy': 0.6826323866844177, 'f1_score': 0.6634167953126298, 'f1_score -> average@micro': 0.682632398753894}
Hypergraph(num_v=2708, num_e=2734)
Epoch: 0, Time: 0.04617s, Loss: 1.94646
update best: 0.12150
Epoch: 1, Time: 0.02459s, Loss: 1.94155
update best: 0.36449
Epoch: 2, Time: 0.02333s, Loss: 1.93550
Epoch: 3, Time: 0.02342s, Loss: 1.92853
Epoch: 4, Time: 0.02316s, Loss: 1.91946
Epoch: 5, Time: 0.02375s, Loss: 1.90817
Epoch: 6, Time: 0.02346s, Loss: 1.89677
Epoch: 7, Time: 0.02329s, Loss: 1.88383
update best: 0.37344
Epoch: 8, Time: 0.02395s, Loss: 1.86714
update best: 0.39408
Epoch: 9, Time: 0.02339s, Loss: 1.84742
update best: 0.42562
Epoch: 10, Time: 0.02330s, Loss: 1.83285
update best: 0.46028
Epoch: 11, Time: 0.02395s, Loss: 1.80938
update best: 0.48287
Epoch: 12, Time: 0.02305s, Loss: 1.78297
update best: 0.51285
Epoch: 13, Time: 0.02326s, Loss: 1.75584
update best: 0.54322
Epoch: 14, Time: 0.02344s, Loss: 1.73113
update best: 0.56893
Epoch: 15, Time: 0.02320s, Loss: 1.69918
update best: 0.60008
Epoch: 16, Time: 0.02263s, Loss: 1.66786
update best: 0.60942
Epoch: 17, Time: 0.02339s, Loss: 1.63900
update best: 0.62383
Epoch: 18, Time: 0.02331s, Loss: 1.60080
update best: 0.64291
Epoch: 19, Time: 0.02335s, Loss: 1.57180
Epoch: 20, Time: 0.02223s, Loss: 1.52605
Epoch: 21, Time: 0.02287s, Loss: 1.48944
update best: 0.64720
Epoch: 22, Time: 0.02309s, Loss: 1.45535
update best: 0.65031
Epoch: 23, Time: 0.02311s, Loss: 1.41342
update best: 0.65537
Epoch: 24, Time: 0.02287s, Loss: 1.37551
Epoch: 25, Time: 0.02282s, Loss: 1.33206
Epoch: 26, Time: 0.02330s, Loss: 1.29449
Epoch: 27, Time: 0.02302s, Loss: 1.25809
Epoch: 28, Time: 0.02428s, Loss: 1.22571
Epoch: 29, Time: 0.02276s, Loss: 1.20123

train finished!
best val: 0.65537
test...
final result: epoch: 23
{'accuracy': 0.6553738117218018, 'f1_score': 0.6284641319066386, 'f1_score -> average@micro': 0.655373831775701}
Hypergraph(num_v=2708, num_e=1300)
Epoch: 0, Time: 0.03769s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.02139s, Loss: 1.94049
update best: 0.36955
Epoch: 2, Time: 0.02006s, Loss: 1.93363
Epoch: 3, Time: 0.01967s, Loss: 1.92542
Epoch: 4, Time: 0.01953s, Loss: 1.91522
Epoch: 5, Time: 0.01955s, Loss: 1.90234
Epoch: 6, Time: 0.02074s, Loss: 1.88865
Epoch: 7, Time: 0.02233s, Loss: 1.87333
Epoch: 8, Time: 0.01960s, Loss: 1.85552
update best: 0.39798
Epoch: 9, Time: 0.02100s, Loss: 1.83460
update best: 0.43069
Epoch: 10, Time: 0.02330s, Loss: 1.81624
update best: 0.46262
Epoch: 11, Time: 0.02023s, Loss: 1.79111
update best: 0.50350
Epoch: 12, Time: 0.01995s, Loss: 1.76028
update best: 0.53816
Epoch: 13, Time: 0.02451s, Loss: 1.73058
update best: 0.55841
Epoch: 14, Time: 0.02216s, Loss: 1.70390
update best: 0.56970
Epoch: 15, Time: 0.01922s, Loss: 1.66774
update best: 0.57710
[I 2024-01-18 06:03:33,556] Trial 8 finished with value: 0.6865264773368835 and parameters: {'border': 0.984}. Best is trial 3 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:04:33,484] Trial 9 finished with value: 0.6584891080856323 and parameters: {'border': 0.964}. Best is trial 3 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:05:32,957] Trial 10 finished with value: 0.6849688291549683 and parameters: {'border': 0.985}. Best is trial 3 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:06:32,534] Trial 11 finished with value: 0.6873052716255188 and parameters: {'border': 0.998}. Best is trial 3 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 16, Time: 0.02188s, Loss: 1.63196
update best: 0.58528
Epoch: 17, Time: 0.02379s, Loss: 1.59608
update best: 0.60942
Epoch: 18, Time: 0.01906s, Loss: 1.55982
update best: 0.62656
Epoch: 19, Time: 0.01890s, Loss: 1.52333
update best: 0.64097
Epoch: 20, Time: 0.02029s, Loss: 1.47363
update best: 0.64759
Epoch: 21, Time: 0.02563s, Loss: 1.43356
update best: 0.65460
Epoch: 22, Time: 0.02021s, Loss: 1.38996
update best: 0.66706
Epoch: 23, Time: 0.02063s, Loss: 1.34418
update best: 0.67368
Epoch: 24, Time: 0.02032s, Loss: 1.30672
update best: 0.67601
Epoch: 25, Time: 0.02303s, Loss: 1.25776
update best: 0.67796
Epoch: 26, Time: 0.02252s, Loss: 1.22161
update best: 0.68030
Epoch: 27, Time: 0.01974s, Loss: 1.17642
update best: 0.68419
Epoch: 28, Time: 0.02007s, Loss: 1.14161
Epoch: 29, Time: 0.01996s, Loss: 1.11272
update best: 0.68653

train finished!
best val: 0.68653
test...
final result: epoch: 29
{'accuracy': 0.6865264773368835, 'f1_score': 0.6645425193745674, 'f1_score -> average@micro': 0.6865264797507789}
Hypergraph(num_v=2708, num_e=2280)
Epoch: 0, Time: 0.04220s, Loss: 1.94644
update best: 0.12150
Epoch: 1, Time: 0.02255s, Loss: 1.94145
update best: 0.31036
Epoch: 2, Time: 0.02253s, Loss: 1.93504
Epoch: 3, Time: 0.02216s, Loss: 1.92782
Epoch: 4, Time: 0.02248s, Loss: 1.91855
Epoch: 5, Time: 0.02234s, Loss: 1.90701
Epoch: 6, Time: 0.02230s, Loss: 1.89546
update best: 0.31308
Epoch: 7, Time: 0.02298s, Loss: 1.88132
update best: 0.34229
Epoch: 8, Time: 0.02234s, Loss: 1.86484
update best: 0.37773
Epoch: 9, Time: 0.02232s, Loss: 1.84470
update best: 0.40888
Epoch: 10, Time: 0.02231s, Loss: 1.82955
update best: 0.44938
Epoch: 11, Time: 0.02354s, Loss: 1.80590
update best: 0.47625
Epoch: 12, Time: 0.02214s, Loss: 1.77800
update best: 0.50078
Epoch: 13, Time: 0.02202s, Loss: 1.75058
update best: 0.52687
Epoch: 14, Time: 0.02216s, Loss: 1.72589
update best: 0.55413
Epoch: 15, Time: 0.02213s, Loss: 1.69307
update best: 0.57555
Epoch: 16, Time: 0.02256s, Loss: 1.65972
update best: 0.60086
Epoch: 17, Time: 0.02221s, Loss: 1.63119
update best: 0.61604
Epoch: 18, Time: 0.02235s, Loss: 1.59262
update best: 0.63551
Epoch: 19, Time: 0.02184s, Loss: 1.56139
update best: 0.64798
Epoch: 20, Time: 0.02155s, Loss: 1.51413
Epoch: 21, Time: 0.02103s, Loss: 1.47622
Epoch: 22, Time: 0.02235s, Loss: 1.43914
update best: 0.65148
Epoch: 23, Time: 0.01861s, Loss: 1.39636
update best: 0.65421
Epoch: 24, Time: 0.01897s, Loss: 1.35927
Epoch: 25, Time: 0.02153s, Loss: 1.31429
Epoch: 26, Time: 0.01701s, Loss: 1.28125
update best: 0.65460
Epoch: 27, Time: 0.01672s, Loss: 1.23938
update best: 0.65615
Epoch: 28, Time: 0.01747s, Loss: 1.20361
update best: 0.65810
Epoch: 29, Time: 0.01912s, Loss: 1.17992
update best: 0.65849

train finished!
best val: 0.65849
test...
final result: epoch: 29
{'accuracy': 0.6584891080856323, 'f1_score': 0.634557509582096, 'f1_score -> average@micro': 0.6584890965732088}
Hypergraph(num_v=2708, num_e=1274)
Epoch: 0, Time: 0.03755s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.02041s, Loss: 1.94053
update best: 0.35787
Epoch: 2, Time: 0.02055s, Loss: 1.93369
Epoch: 3, Time: 0.02314s, Loss: 1.92571
Epoch: 4, Time: 0.02324s, Loss: 1.91552
Epoch: 5, Time: 0.02061s, Loss: 1.90279
Epoch: 6, Time: 0.01988s, Loss: 1.88936
Epoch: 7, Time: 0.01969s, Loss: 1.87385
Epoch: 8, Time: 0.02145s, Loss: 1.85672
update best: 0.38279
Epoch: 9, Time: 0.02404s, Loss: 1.83579
update best: 0.40810
Epoch: 10, Time: 0.02261s, Loss: 1.81825
update best: 0.44431
Epoch: 11, Time: 0.02216s, Loss: 1.79322
update best: 0.47508
Epoch: 12, Time: 0.02006s, Loss: 1.76261
update best: 0.51324
Epoch: 13, Time: 0.01905s, Loss: 1.73314
update best: 0.54128
Epoch: 14, Time: 0.01904s, Loss: 1.70659
update best: 0.55802
Epoch: 15, Time: 0.02070s, Loss: 1.67099
update best: 0.56698
Epoch: 16, Time: 0.02262s, Loss: 1.63474
update best: 0.57516
Epoch: 17, Time: 0.02599s, Loss: 1.60033
update best: 0.59852
Epoch: 18, Time: 0.01909s, Loss: 1.56347
update best: 0.62305
Epoch: 19, Time: 0.02236s, Loss: 1.52661
update best: 0.63512
Epoch: 20, Time: 0.01959s, Loss: 1.47767
update best: 0.64642
Epoch: 21, Time: 0.01769s, Loss: 1.43740
update best: 0.65537
Epoch: 22, Time: 0.01734s, Loss: 1.39440
update best: 0.66472
Epoch: 23, Time: 0.01704s, Loss: 1.34836
update best: 0.67017
Epoch: 24, Time: 0.01921s, Loss: 1.31151
update best: 0.67562
Epoch: 25, Time: 0.01734s, Loss: 1.26169
update best: 0.67874
Epoch: 26, Time: 0.01752s, Loss: 1.22363
update best: 0.68107
Epoch: 27, Time: 0.01664s, Loss: 1.18038
update best: 0.68497
Epoch: 28, Time: 0.01972s, Loss: 1.14599
Epoch: 29, Time: 0.01840s, Loss: 1.11687

train finished!
best val: 0.68497
test...
final result: epoch: 27
{'accuracy': 0.6849688291549683, 'f1_score': 0.6616746092396986, 'f1_score -> average@micro': 0.6849688473520249}
Hypergraph(num_v=2708, num_e=999)
Epoch: 0, Time: 0.02796s, Loss: 1.94644
update best: 0.12188
Epoch: 1, Time: 0.01783s, Loss: 1.94041
update best: 0.33762
Epoch: 2, Time: 0.01770s, Loss: 1.93325
Epoch: 3, Time: 0.01918s, Loss: 1.92476
Epoch: 4, Time: 0.02168s, Loss: 1.91421
Epoch: 5, Time: 0.01974s, Loss: 1.90030
Epoch: 6, Time: 0.02053s, Loss: 1.88649
Epoch: 7, Time: 0.01925s, Loss: 1.87042
update best: 0.36682
Epoch: 8, Time: 0.02054s, Loss: 1.85123
update best: 0.39798
Epoch: 9, Time: 0.02158s, Loss: 1.82972
update best: 0.43575
Epoch: 10, Time: 0.01624s, Loss: 1.81020
update best: 0.47002
Epoch: 11, Time: 0.02199s, Loss: 1.78358
update best: 0.50818
Epoch: 12, Time: 0.01970s, Loss: 1.75346
update best: 0.53583
Epoch: 13, Time: 0.01936s, Loss: 1.72126
update best: 0.55530
Epoch: 14, Time: 0.01994s, Loss: 1.69239
update best: 0.56931
Epoch: 15, Time: 0.01905s, Loss: 1.65625
update best: 0.57944
Epoch: 16, Time: 0.01846s, Loss: 1.61695
update best: 0.60047
Epoch: 17, Time: 0.02010s, Loss: 1.58092
update best: 0.62422
Epoch: 18, Time: 0.01979s, Loss: 1.54277
update best: 0.63785
Epoch: 19, Time: 0.01971s, Loss: 1.50485
update best: 0.65187
Epoch: 20, Time: 0.01748s, Loss: 1.45146
update best: 0.65382
Epoch: 21, Time: 0.01975s, Loss: 1.41001
update best: 0.65966
Epoch: 22, Time: 0.02112s, Loss: 1.36709
update best: 0.66550
Epoch: 23, Time: 0.01827s, Loss: 1.32046
update best: 0.67212
Epoch: 24, Time: 0.01599s, Loss: 1.28129
update best: 0.67445
Epoch: 25, Time: 0.01977s, Loss: 1.23135
update best: 0.68107
Epoch: 26, Time: 0.02127s, Loss: 1.18946
Epoch: 27, Time: 0.01862s, Loss: 1.14818
update best: 0.68497
Epoch: 28, Time: 0.01876s, Loss: 1.10696
update best: 0.68731
Epoch: 29, Time: 0.01873s, Loss: 1.07705

train finished!
best val: 0.68731
test...
final result: epoch: 28
{'accuracy': 0.6873052716255188, 'f1_score': 0.666859853470488, 'f1_score -> average@micro': 0.6873052959501558}
Hypergraph(num_v=2708, num_e=971)
Epoch: 0, Time: 0.02695s, Loss: 1.94641
update best: 0.12188
Epoch: 1, Time: 0.01794s, Loss: 1.94033
update best: 0.34307
Epoch: 2, Time: 0.02174s, Loss: 1.93312
Epoch: 3, Time: 0.02004s, Loss: 1.92471
Epoch: 4, Time: 0.01855s, Loss: 1.91394
Epoch: 5, Time: 0.01938s, Loss: 1.90033
Epoch: 6, Time: 0.02098s, Loss: 1.88647
Epoch: 7, Time: 0.01734s, Loss: 1.87034
update best: 0.36643
Epoch: 8, Time: 0.02240s, Loss: 1.85130
update best: 0.39330
Epoch: 9, Time: 0.02361s, Loss: 1.82924
update best: 0.42718
Epoch: 10, Time: 0.02180s, Loss: 1.81064
update best: 0.46379
Epoch: 11, Time: 0.02135s, Loss: 1.78458
update best: 0.50896
Epoch: 12, Time: 0.02392s, Loss: 1.75335
update best: 0.53388
Epoch: 13, Time: 0.01621s, Loss: 1.72121
update best: 0.55452
Epoch: 14, Time: 0.01591s, Loss: 1.69312
update best: 0.56581
Epoch: 15, Time: 0.01450s, Loss: 1.65749
update best: 0.57710
Epoch: 16, Time: 0.01606s, Loss: 1.61835
update best: 0.58879
Epoch: 17, Time: 0.01411s, Loss: 1.58219
update best: 0.61643
Epoch: 18, Time: 0.01715s, Loss: 1.54515
update best: 0.63435
Epoch: 19, Time: 0.01423s, Loss: 1.50626
update best: 0.64681
Epoch: 20, Time: 0.01530s, Loss: 1.45349
update best: 0.65927
Epoch: 21, Time: 0.01441s, Loss: 1.41288
Epoch: 22, Time: 0.01629s, Loss: 1.37024
update best: 0.66160
Epoch: 23, Time: 0.01464s, Loss: 1.32470
update best: 0.66628
Epoch: 24, Time: 0.01500s, Loss: 1.28567
update best: 0.67484
[I 2024-01-18 06:07:31,299] Trial 12 finished with value: 0.6861370801925659 and parameters: {'border': 1.0}. Best is trial 3 with value: 0.6876947283744812.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:08:31,074] Trial 13 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:09:29,548] Trial 14 finished with value: 0.6830217838287354 and parameters: {'border': 0.987}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:10:28,474] Trial 15 finished with value: 0.6845794320106506 and parameters: {'border': 0.98}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 25, Time: 0.01587s, Loss: 1.23676
update best: 0.67796
Epoch: 26, Time: 0.01437s, Loss: 1.19497
update best: 0.67874
Epoch: 27, Time: 0.01337s, Loss: 1.15239
update best: 0.68146
Epoch: 28, Time: 0.01418s, Loss: 1.11260
update best: 0.68263
Epoch: 29, Time: 0.01348s, Loss: 1.08225
update best: 0.68614

train finished!
best val: 0.68614
test...
final result: epoch: 29
{'accuracy': 0.6861370801925659, 'f1_score': 0.6645933831713843, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.03337s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.01829s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.02084s, Loss: 1.93352
Epoch: 3, Time: 0.02086s, Loss: 1.92512
Epoch: 4, Time: 0.02251s, Loss: 1.91455
Epoch: 5, Time: 0.02284s, Loss: 1.90150
Epoch: 6, Time: 0.02018s, Loss: 1.88778
Epoch: 7, Time: 0.02313s, Loss: 1.87197
Epoch: 8, Time: 0.01979s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.02107s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.02042s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.02274s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.02145s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.02468s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.02067s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.02186s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.02074s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.02589s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.02055s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.02671s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.02069s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.02324s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.02345s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.01927s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.01932s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.02037s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.02015s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.01952s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.01942s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.01935s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1206)
Epoch: 0, Time: 0.03292s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.01921s, Loss: 1.94051
update best: 0.37383
Epoch: 2, Time: 0.02136s, Loss: 1.93361
Epoch: 3, Time: 0.02142s, Loss: 1.92531
Epoch: 4, Time: 0.02109s, Loss: 1.91493
Epoch: 5, Time: 0.01967s, Loss: 1.90201
Epoch: 6, Time: 0.02337s, Loss: 1.88820
Epoch: 7, Time: 0.02530s, Loss: 1.87212
Epoch: 8, Time: 0.02162s, Loss: 1.85420
update best: 0.39330
Epoch: 9, Time: 0.02090s, Loss: 1.83301
update best: 0.41900
Epoch: 10, Time: 0.02057s, Loss: 1.81520
update best: 0.45833
Epoch: 11, Time: 0.01933s, Loss: 1.78938
update best: 0.49299
Epoch: 12, Time: 0.02010s, Loss: 1.75814
update best: 0.52414
Epoch: 13, Time: 0.01937s, Loss: 1.72791
update best: 0.54790
Epoch: 14, Time: 0.02037s, Loss: 1.70101
update best: 0.56425
Epoch: 15, Time: 0.02039s, Loss: 1.66413
update best: 0.57555
Epoch: 16, Time: 0.01980s, Loss: 1.62725
update best: 0.59073
Epoch: 17, Time: 0.02036s, Loss: 1.59247
update best: 0.61643
Epoch: 18, Time: 0.01922s, Loss: 1.55481
update best: 0.63240
Epoch: 19, Time: 0.01700s, Loss: 1.51861
update best: 0.64486
Epoch: 20, Time: 0.02049s, Loss: 1.46778
update best: 0.65771
Epoch: 21, Time: 0.01939s, Loss: 1.42742
update best: 0.65849
Epoch: 22, Time: 0.01927s, Loss: 1.38236
update best: 0.66783
Epoch: 23, Time: 0.02150s, Loss: 1.33881
update best: 0.67134
Epoch: 24, Time: 0.02015s, Loss: 1.29973
update best: 0.67718
Epoch: 25, Time: 0.01967s, Loss: 1.25105
update best: 0.68030
Epoch: 26, Time: 0.01677s, Loss: 1.21320
Epoch: 27, Time: 0.01969s, Loss: 1.16960
update best: 0.68302
Epoch: 28, Time: 0.01873s, Loss: 1.13380
Epoch: 29, Time: 0.01957s, Loss: 1.10606

train finished!
best val: 0.68302
test...
final result: epoch: 27
{'accuracy': 0.6830217838287354, 'f1_score': 0.6580493410678123, 'f1_score -> average@micro': 0.6830218068535826}
Hypergraph(num_v=2708, num_e=1450)
Epoch: 0, Time: 0.03742s, Loss: 1.94659
update best: 0.12188
Epoch: 1, Time: 0.02246s, Loss: 1.94080
update best: 0.31854
Epoch: 2, Time: 0.02161s, Loss: 1.93404
Epoch: 3, Time: 0.02350s, Loss: 1.92595
Epoch: 4, Time: 0.02304s, Loss: 1.91588
Epoch: 5, Time: 0.02290s, Loss: 1.90316
update best: 0.32048
Epoch: 6, Time: 0.01990s, Loss: 1.88998
update best: 0.32593
Epoch: 7, Time: 0.02487s, Loss: 1.87500
update best: 0.35358
Epoch: 8, Time: 0.02243s, Loss: 1.85614
update best: 0.39252
Epoch: 9, Time: 0.02184s, Loss: 1.83540
update best: 0.42835
Epoch: 10, Time: 0.01858s, Loss: 1.81852
update best: 0.47858
Epoch: 11, Time: 0.02108s, Loss: 1.79240
update best: 0.52259
Epoch: 12, Time: 0.02223s, Loss: 1.76248
update best: 0.55335
Epoch: 13, Time: 0.02051s, Loss: 1.73171
update best: 0.57048
Epoch: 14, Time: 0.02014s, Loss: 1.70520
update best: 0.57632
Epoch: 15, Time: 0.02075s, Loss: 1.66884
update best: 0.58178
Epoch: 16, Time: 0.02151s, Loss: 1.63496
update best: 0.59385
Epoch: 17, Time: 0.02063s, Loss: 1.59967
update best: 0.62617
Epoch: 18, Time: 0.02041s, Loss: 1.56241
update best: 0.64486
Epoch: 19, Time: 0.01984s, Loss: 1.52472
update best: 0.65382
Epoch: 20, Time: 0.01958s, Loss: 1.47785
update best: 0.65693
Epoch: 21, Time: 0.01783s, Loss: 1.43605
update best: 0.66706
Epoch: 22, Time: 0.02031s, Loss: 1.39455
update best: 0.66900
Epoch: 23, Time: 0.01959s, Loss: 1.34838
update best: 0.67484
Epoch: 24, Time: 0.02036s, Loss: 1.30929
update best: 0.67796
Epoch: 25, Time: 0.01768s, Loss: 1.26239
update best: 0.67835
Epoch: 26, Time: 0.02089s, Loss: 1.22235
update best: 0.68341
Epoch: 27, Time: 0.01972s, Loss: 1.18059
update best: 0.68458
Epoch: 28, Time: 0.02040s, Loss: 1.14425
Epoch: 29, Time: 0.01923s, Loss: 1.11554

train finished!
best val: 0.68458
test...
final result: epoch: 27
{'accuracy': 0.6845794320106506, 'f1_score': 0.6626837334309369, 'f1_score -> average@micro': 0.6845794392523364}
Hypergraph(num_v=2708, num_e=1140)
Epoch: 0, Time: 0.03380s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.02003s, Loss: 1.94045
update best: 0.31542
Epoch: 2, Time: 0.02057s, Loss: 1.93341
Epoch: 3, Time: 0.01944s, Loss: 1.92518
Epoch: 4, Time: 0.02168s, Loss: 1.91454
Epoch: 5, Time: 0.02001s, Loss: 1.90185
Epoch: 6, Time: 0.01996s, Loss: 1.88838
update best: 0.31737
Epoch: 7, Time: 0.02177s, Loss: 1.87250
update best: 0.33684
Epoch: 8, Time: 0.01815s, Loss: 1.85475
update best: 0.36877
Epoch: 9, Time: 0.01849s, Loss: 1.83312
update best: 0.40460
Epoch: 10, Time: 0.01820s, Loss: 1.81559
update best: 0.44081
Epoch: 11, Time: 0.02083s, Loss: 1.79045
update best: 0.48326
Epoch: 12, Time: 0.01838s, Loss: 1.75942
update best: 0.51986
Epoch: 13, Time: 0.01942s, Loss: 1.72896
update best: 0.54439
Epoch: 14, Time: 0.01906s, Loss: 1.70258
update best: 0.55491
Epoch: 15, Time: 0.02003s, Loss: 1.66629
update best: 0.56854
Epoch: 16, Time: 0.01898s, Loss: 1.63043
update best: 0.57827
Epoch: 17, Time: 0.01962s, Loss: 1.59577
update best: 0.58217
Epoch: 18, Time: 0.01944s, Loss: 1.55994
update best: 0.61176
Epoch: 19, Time: 0.01935s, Loss: 1.52208
update best: 0.63084
Epoch: 20, Time: 0.01929s, Loss: 1.47199
update best: 0.64525
Epoch: 21, Time: 0.01704s, Loss: 1.43174
update best: 0.65537
Epoch: 22, Time: 0.01910s, Loss: 1.38862
update best: 0.66005
Epoch: 23, Time: 0.01971s, Loss: 1.34424
update best: 0.66355
Epoch: 24, Time: 0.01964s, Loss: 1.30237
update best: 0.66978
Epoch: 25, Time: 0.02151s, Loss: 1.25589
update best: 0.67562
Epoch: 26, Time: 0.01803s, Loss: 1.21605
update best: 0.68146
Epoch: 27, Time: 0.01953s, Loss: 1.17547
update best: 0.68341
Epoch: 28, Time: 0.01933s, Loss: 1.13525
update best: 0.68731
Epoch: 29, Time: 0.01953s, Loss: 1.10585

train finished!
best val: 0.68731
test...
final result: epoch: 28
[I 2024-01-18 06:11:27,102] Trial 16 finished with value: 0.6873052716255188 and parameters: {'border': 0.99}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:12:27,249] Trial 17 finished with value: 0.6717289686203003 and parameters: {'border': 0.972}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:13:26,689] Trial 18 finished with value: 0.6802959442138672 and parameters: {'border': 0.981}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:14:26,299] Trial 19 finished with value: 0.6717289686203003 and parameters: {'border': 0.97}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:15:25,971] Trial 20 finished with value: 0.6853582262992859 and parameters: {'border': 0.992}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
{'accuracy': 0.6873052716255188, 'f1_score': 0.6623724299431235, 'f1_score -> average@micro': 0.6873052959501558}
Hypergraph(num_v=2708, num_e=1798)
Epoch: 0, Time: 0.03911s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.02088s, Loss: 1.94093
update best: 0.31231
Epoch: 2, Time: 0.02188s, Loss: 1.93420
Epoch: 3, Time: 0.02220s, Loss: 1.92608
Epoch: 4, Time: 0.02612s, Loss: 1.91674
Epoch: 5, Time: 0.02238s, Loss: 1.90362
Epoch: 6, Time: 0.02314s, Loss: 1.89102
update best: 0.32944
Epoch: 7, Time: 0.02207s, Loss: 1.87541
update best: 0.36604
Epoch: 8, Time: 0.02212s, Loss: 1.85749
update best: 0.39603
Epoch: 9, Time: 0.02254s, Loss: 1.83613
update best: 0.42913
Epoch: 10, Time: 0.02159s, Loss: 1.81876
update best: 0.46924
Epoch: 11, Time: 0.02470s, Loss: 1.79279
update best: 0.50818
Epoch: 12, Time: 0.01945s, Loss: 1.76372
update best: 0.53466
Epoch: 13, Time: 0.02213s, Loss: 1.73397
update best: 0.56464
Epoch: 14, Time: 0.02392s, Loss: 1.70568
update best: 0.57671
Epoch: 15, Time: 0.02107s, Loss: 1.67059
update best: 0.60787
Epoch: 16, Time: 0.02155s, Loss: 1.63415
update best: 0.62812
Epoch: 17, Time: 0.02207s, Loss: 1.60254
update best: 0.64097
Epoch: 18, Time: 0.02230s, Loss: 1.56348
update best: 0.65460
Epoch: 19, Time: 0.02191s, Loss: 1.52939
update best: 0.66472
Epoch: 20, Time: 0.02186s, Loss: 1.48229
Epoch: 21, Time: 0.02095s, Loss: 1.44072
Epoch: 22, Time: 0.02081s, Loss: 1.40093
Epoch: 23, Time: 0.02221s, Loss: 1.35451
update best: 0.66550
Epoch: 24, Time: 0.02273s, Loss: 1.31553
update best: 0.66822
Epoch: 25, Time: 0.02218s, Loss: 1.27285
update best: 0.67056
Epoch: 26, Time: 0.02059s, Loss: 1.23603
Epoch: 27, Time: 0.02061s, Loss: 1.19337
Epoch: 28, Time: 0.01931s, Loss: 1.15634
Epoch: 29, Time: 0.02217s, Loss: 1.13224
update best: 0.67173

train finished!
best val: 0.67173
test...
final result: epoch: 29
{'accuracy': 0.6717289686203003, 'f1_score': 0.6507560189695581, 'f1_score -> average@micro': 0.6717289719626168}
Hypergraph(num_v=2708, num_e=1402)
Epoch: 0, Time: 0.03481s, Loss: 1.94655
update best: 0.12188
Epoch: 1, Time: 0.01961s, Loss: 1.94065
update best: 0.31581
Epoch: 2, Time: 0.02068s, Loss: 1.93373
Epoch: 3, Time: 0.02148s, Loss: 1.92576
Epoch: 4, Time: 0.02092s, Loss: 1.91560
Epoch: 5, Time: 0.02376s, Loss: 1.90313
update best: 0.31970
Epoch: 6, Time: 0.02109s, Loss: 1.88955
update best: 0.32827
Epoch: 7, Time: 0.02450s, Loss: 1.87418
update best: 0.36098
Epoch: 8, Time: 0.02262s, Loss: 1.85648
update best: 0.39136
Epoch: 9, Time: 0.02249s, Loss: 1.83593
update best: 0.42913
Epoch: 10, Time: 0.02072s, Loss: 1.81792
update best: 0.47469
Epoch: 11, Time: 0.02050s, Loss: 1.79278
update best: 0.51402
Epoch: 12, Time: 0.02343s, Loss: 1.76247
update best: 0.55140
Epoch: 13, Time: 0.02268s, Loss: 1.73306
update best: 0.56153
Epoch: 14, Time: 0.02046s, Loss: 1.70610
update best: 0.56893
Epoch: 15, Time: 0.02115s, Loss: 1.67097
update best: 0.57632
Epoch: 16, Time: 0.02272s, Loss: 1.63598
update best: 0.58333
Epoch: 17, Time: 0.01956s, Loss: 1.60226
update best: 0.60514
Epoch: 18, Time: 0.01989s, Loss: 1.56524
update best: 0.63006
Epoch: 19, Time: 0.01935s, Loss: 1.52803
update best: 0.64759
Epoch: 20, Time: 0.02140s, Loss: 1.48042
update best: 0.65187
Epoch: 21, Time: 0.01998s, Loss: 1.43816
update best: 0.66277
Epoch: 22, Time: 0.02066s, Loss: 1.39751
update best: 0.66706
Epoch: 23, Time: 0.01890s, Loss: 1.35024
update best: 0.66861
Epoch: 24, Time: 0.02114s, Loss: 1.31254
update best: 0.67523
Epoch: 25, Time: 0.01999s, Loss: 1.26568
Epoch: 26, Time: 0.02040s, Loss: 1.22675
update best: 0.67679
Epoch: 27, Time: 0.02041s, Loss: 1.18360
update best: 0.67874
Epoch: 28, Time: 0.01814s, Loss: 1.14871
update best: 0.67991
Epoch: 29, Time: 0.02073s, Loss: 1.11912
update best: 0.68030

train finished!
best val: 0.68030
test...
final result: epoch: 29
{'accuracy': 0.6802959442138672, 'f1_score': 0.6591743885608691, 'f1_score -> average@micro': 0.6802959501557633}
Hypergraph(num_v=2708, num_e=1918)
Epoch: 0, Time: 0.04006s, Loss: 1.94651
update best: 0.12150
Epoch: 1, Time: 0.02547s, Loss: 1.94103
update best: 0.33723
Epoch: 2, Time: 0.02188s, Loss: 1.93455
Epoch: 3, Time: 0.02435s, Loss: 1.92668
Epoch: 4, Time: 0.02491s, Loss: 1.91783
Epoch: 5, Time: 0.02257s, Loss: 1.90503
Epoch: 6, Time: 0.02435s, Loss: 1.89277
Epoch: 7, Time: 0.02251s, Loss: 1.87718
update best: 0.35981
Epoch: 8, Time: 0.02581s, Loss: 1.85984
update best: 0.38863
Epoch: 9, Time: 0.02142s, Loss: 1.83901
update best: 0.41628
Epoch: 10, Time: 0.02300s, Loss: 1.82231
update best: 0.46379
Epoch: 11, Time: 0.02151s, Loss: 1.79688
update best: 0.49338
Epoch: 12, Time: 0.02182s, Loss: 1.76838
update best: 0.52025
Epoch: 13, Time: 0.02197s, Loss: 1.73925
update best: 0.55997
Epoch: 14, Time: 0.02202s, Loss: 1.71254
update best: 0.56815
Epoch: 15, Time: 0.02249s, Loss: 1.67772
update best: 0.58995
Epoch: 16, Time: 0.02479s, Loss: 1.64216
update best: 0.61371
Epoch: 17, Time: 0.02216s, Loss: 1.61077
update best: 0.63006
Epoch: 18, Time: 0.02411s, Loss: 1.57236
update best: 0.64603
Epoch: 19, Time: 0.02373s, Loss: 1.53971
update best: 0.64914
Epoch: 20, Time: 0.02374s, Loss: 1.49122
update best: 0.65148
Epoch: 21, Time: 0.02780s, Loss: 1.45149
update best: 0.65498
Epoch: 22, Time: 0.02416s, Loss: 1.41368
update best: 0.65849
Epoch: 23, Time: 0.02253s, Loss: 1.36781
update best: 0.66277
Epoch: 24, Time: 0.02114s, Loss: 1.32829
update best: 0.66667
Epoch: 25, Time: 0.02362s, Loss: 1.28537
update best: 0.67017
Epoch: 26, Time: 0.02198s, Loss: 1.24886
Epoch: 27, Time: 0.02168s, Loss: 1.20569
update best: 0.67095
Epoch: 28, Time: 0.02282s, Loss: 1.17197
update best: 0.67173
Epoch: 29, Time: 0.02262s, Loss: 1.14775

train finished!
best val: 0.67173
test...
final result: epoch: 28
{'accuracy': 0.6717289686203003, 'f1_score': 0.6505972481684434, 'f1_score -> average@micro': 0.6717289719626168}
Hypergraph(num_v=2708, num_e=1094)
Epoch: 0, Time: 0.03205s, Loss: 1.94664
update best: 0.12188
Epoch: 1, Time: 0.02006s, Loss: 1.94020
update best: 0.30491
Epoch: 2, Time: 0.02169s, Loss: 1.93297
Epoch: 3, Time: 0.02400s, Loss: 1.92462
Epoch: 4, Time: 0.02223s, Loss: 1.91404
Epoch: 5, Time: 0.02541s, Loss: 1.90111
update best: 0.30919
Epoch: 6, Time: 0.02297s, Loss: 1.88750
update best: 0.31698
Epoch: 7, Time: 0.01909s, Loss: 1.87170
update best: 0.32710
Epoch: 8, Time: 0.02291s, Loss: 1.85345
update best: 0.35164
Epoch: 9, Time: 0.02294s, Loss: 1.83182
update best: 0.39875
Epoch: 10, Time: 0.01723s, Loss: 1.81383
update best: 0.43886
Epoch: 11, Time: 0.01835s, Loss: 1.78861
update best: 0.48910
Epoch: 12, Time: 0.01953s, Loss: 1.75761
update best: 0.52220
Epoch: 13, Time: 0.01987s, Loss: 1.72707
update best: 0.54517
Epoch: 14, Time: 0.01635s, Loss: 1.70023
update best: 0.56153
Epoch: 15, Time: 0.01722s, Loss: 1.66424
update best: 0.56815
Epoch: 16, Time: 0.01945s, Loss: 1.62698
update best: 0.58061
Epoch: 17, Time: 0.01540s, Loss: 1.59259
update best: 0.59463
Epoch: 18, Time: 0.01717s, Loss: 1.55558
update best: 0.61877
Epoch: 19, Time: 0.01685s, Loss: 1.51741
update best: 0.63474
Epoch: 20, Time: 0.01631s, Loss: 1.46639
update best: 0.64447
Epoch: 21, Time: 0.01548s, Loss: 1.42576
update best: 0.65849
Epoch: 22, Time: 0.01737s, Loss: 1.38338
update best: 0.66511
Epoch: 23, Time: 0.01499s, Loss: 1.33898
update best: 0.66628
Epoch: 24, Time: 0.01597s, Loss: 1.30067
update best: 0.66861
Epoch: 25, Time: 0.01477s, Loss: 1.25041
update best: 0.67407
Epoch: 26, Time: 0.01630s, Loss: 1.20821
update best: 0.67991
Epoch: 27, Time: 0.01672s, Loss: 1.16992
update best: 0.68224
Epoch: 28, Time: 0.01500s, Loss: 1.13034
update best: 0.68536
Epoch: 29, Time: 0.01311s, Loss: 1.10097

train finished!
best val: 0.68536
test...
final result: epoch: 28
{'accuracy': 0.6853582262992859, 'f1_score': 0.6595623797267406, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=1033)
Epoch: 0, Time: 0.03057s, Loss: 1.94643
update best: 0.12188
Epoch: 1, Time: 0.01823s, Loss: 1.94040
update best: 0.33917
Epoch: 2, Time: 0.02000s, Loss: 1.93313
Epoch: 3, Time: 0.02121s, Loss: 1.92469
Epoch: 4, Time: 0.01967s, Loss: 1.91391
Epoch: 5, Time: 0.01990s, Loss: 1.90041
[I 2024-01-18 06:16:25,363] Trial 21 finished with value: 0.6857476830482483 and parameters: {'border': 0.996}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:17:24,660] Trial 22 finished with value: 0.6853582262992859 and parameters: {'border': 0.993}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:18:25,045] Trial 23 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:19:24,120] Trial 24 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 6, Time: 0.02192s, Loss: 1.88635
update best: 0.34579
Epoch: 7, Time: 0.01969s, Loss: 1.87042
update best: 0.37227
Epoch: 8, Time: 0.02061s, Loss: 1.85155
update best: 0.40226
Epoch: 9, Time: 0.02027s, Loss: 1.82983
update best: 0.43925
Epoch: 10, Time: 0.02018s, Loss: 1.81041
update best: 0.49221
Epoch: 11, Time: 0.01907s, Loss: 1.78359
update best: 0.52570
Epoch: 12, Time: 0.01813s, Loss: 1.75353
update best: 0.55062
Epoch: 13, Time: 0.01943s, Loss: 1.72137
update best: 0.56581
Epoch: 14, Time: 0.01967s, Loss: 1.69333
update best: 0.57438
Epoch: 15, Time: 0.01966s, Loss: 1.65659
update best: 0.58645
Epoch: 16, Time: 0.01827s, Loss: 1.61735
update best: 0.60358
Epoch: 17, Time: 0.01878s, Loss: 1.58197
update best: 0.62344
Epoch: 18, Time: 0.01777s, Loss: 1.54412
update best: 0.64097
Epoch: 19, Time: 0.01961s, Loss: 1.50678
update best: 0.64992
Epoch: 20, Time: 0.01869s, Loss: 1.45406
update best: 0.65498
Epoch: 21, Time: 0.01956s, Loss: 1.41198
update best: 0.66550
Epoch: 22, Time: 0.01927s, Loss: 1.36879
update best: 0.67017
Epoch: 23, Time: 0.02105s, Loss: 1.32291
update best: 0.67368
Epoch: 24, Time: 0.01957s, Loss: 1.28286
update best: 0.67445
Epoch: 25, Time: 0.01959s, Loss: 1.23468
update best: 0.68030
Epoch: 26, Time: 0.01886s, Loss: 1.19418
Epoch: 27, Time: 0.02115s, Loss: 1.15191
update best: 0.68107
Epoch: 28, Time: 0.01955s, Loss: 1.11292
update best: 0.68575
Epoch: 29, Time: 0.01638s, Loss: 1.08156

train finished!
best val: 0.68575
test...
final result: epoch: 28
{'accuracy': 0.6857476830482483, 'f1_score': 0.6648293795468189, 'f1_score -> average@micro': 0.6857476635514018}
Hypergraph(num_v=2708, num_e=1077)
Epoch: 0, Time: 0.03118s, Loss: 1.94662
update best: 0.12188
Epoch: 1, Time: 0.01875s, Loss: 1.94047
update best: 0.30530
Epoch: 2, Time: 0.01722s, Loss: 1.93329
Epoch: 3, Time: 0.02000s, Loss: 1.92520
Epoch: 4, Time: 0.01952s, Loss: 1.91455
update best: 0.30763
Epoch: 5, Time: 0.01831s, Loss: 1.90177
update best: 0.31153
Epoch: 6, Time: 0.02105s, Loss: 1.88815
update best: 0.31970
Epoch: 7, Time: 0.02108s, Loss: 1.87213
update best: 0.33139
Epoch: 8, Time: 0.02105s, Loss: 1.85390
update best: 0.36410
Epoch: 9, Time: 0.01908s, Loss: 1.83247
update best: 0.40966
Epoch: 10, Time: 0.01903s, Loss: 1.81453
update best: 0.45016
Epoch: 11, Time: 0.02112s, Loss: 1.78885
update best: 0.49611
Epoch: 12, Time: 0.02493s, Loss: 1.75798
update best: 0.53310
Epoch: 13, Time: 0.02157s, Loss: 1.72721
update best: 0.55023
Epoch: 14, Time: 0.02052s, Loss: 1.70015
update best: 0.56503
Epoch: 15, Time: 0.02027s, Loss: 1.66414
update best: 0.57126
Epoch: 16, Time: 0.02014s, Loss: 1.62737
update best: 0.58217
Epoch: 17, Time: 0.01976s, Loss: 1.59241
update best: 0.59930
Epoch: 18, Time: 0.02033s, Loss: 1.55479
update best: 0.62305
Epoch: 19, Time: 0.01478s, Loss: 1.51695
update best: 0.64369
Epoch: 20, Time: 0.01539s, Loss: 1.46607
update best: 0.65265
Epoch: 21, Time: 0.01732s, Loss: 1.42480
update best: 0.65888
Epoch: 22, Time: 0.01744s, Loss: 1.38215
update best: 0.66822
Epoch: 23, Time: 0.01608s, Loss: 1.33711
update best: 0.66939
Epoch: 24, Time: 0.01545s, Loss: 1.29836
update best: 0.67017
Epoch: 25, Time: 0.01467s, Loss: 1.24764
update best: 0.67601
Epoch: 26, Time: 0.01686s, Loss: 1.20658
update best: 0.67952
Epoch: 27, Time: 0.01506s, Loss: 1.16838
update best: 0.68146
Epoch: 28, Time: 0.01552s, Loss: 1.12701
update best: 0.68458
Epoch: 29, Time: 0.01512s, Loss: 1.09775
update best: 0.68536

train finished!
best val: 0.68536
test...
final result: epoch: 29
{'accuracy': 0.6853582262992859, 'f1_score': 0.6636031678896811, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.02910s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.02264s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.02023s, Loss: 1.93352
Epoch: 3, Time: 0.02101s, Loss: 1.92512
Epoch: 4, Time: 0.01985s, Loss: 1.91455
Epoch: 5, Time: 0.02004s, Loss: 1.90150
Epoch: 6, Time: 0.01966s, Loss: 1.88778
Epoch: 7, Time: 0.02044s, Loss: 1.87197
Epoch: 8, Time: 0.02169s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.02083s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.01928s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.01923s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.01975s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.01873s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.01925s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.01940s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.01955s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.01898s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.01967s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.01932s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.01918s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.01938s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.01939s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.01936s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.01928s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.01722s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.01956s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.01922s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.01940s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.01925s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.03364s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.02125s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.02358s, Loss: 1.93352
Epoch: 3, Time: 0.01956s, Loss: 1.92512
Epoch: 4, Time: 0.01844s, Loss: 1.91455
Epoch: 5, Time: 0.02089s, Loss: 1.90150
Epoch: 6, Time: 0.02081s, Loss: 1.88778
Epoch: 7, Time: 0.02257s, Loss: 1.87197
Epoch: 8, Time: 0.02276s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.02263s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.02017s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.02138s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.01973s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.02108s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.02214s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.02250s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.01930s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.01923s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.01706s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.01956s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.01717s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.01736s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.01944s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.01894s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.01801s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.01997s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.01723s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.01888s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.01689s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.01972s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1450)
Epoch: 0, Time: 0.03604s, Loss: 1.94659
update best: 0.12188
Epoch: 1, Time: 0.01983s, Loss: 1.94080
update best: 0.31854
Epoch: 2, Time: 0.02113s, Loss: 1.93404
Epoch: 3, Time: 0.02481s, Loss: 1.92595
Epoch: 4, Time: 0.02099s, Loss: 1.91588
Epoch: 5, Time: 0.02203s, Loss: 1.90316
update best: 0.32048
Epoch: 6, Time: 0.02517s, Loss: 1.88998
update best: 0.32593
Epoch: 7, Time: 0.02219s, Loss: 1.87500
update best: 0.35358
Epoch: 8, Time: 0.02231s, Loss: 1.85614
update best: 0.39252
Epoch: 9, Time: 0.02168s, Loss: 1.83540
update best: 0.42835
Epoch: 10, Time: 0.01889s, Loss: 1.81852
update best: 0.47858
Epoch: 11, Time: 0.01875s, Loss: 1.79240
update best: 0.52259
[I 2024-01-18 06:20:23,168] Trial 25 finished with value: 0.6845794320106506 and parameters: {'border': 0.98}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:21:22,660] Trial 26 finished with value: 0.6845794320106506 and parameters: {'border': 0.989}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:22:22,379] Trial 27 finished with value: 0.6830217838287354 and parameters: {'border': 0.982}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:23:23,391] Trial 28 finished with value: 0.6845794320106506 and parameters: {'border': 0.989}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 12, Time: 0.02209s, Loss: 1.76248
update best: 0.55335
Epoch: 13, Time: 0.01908s, Loss: 1.73171
update best: 0.57048
Epoch: 14, Time: 0.02140s, Loss: 1.70520
update best: 0.57632
Epoch: 15, Time: 0.02227s, Loss: 1.66884
update best: 0.58178
Epoch: 16, Time: 0.02223s, Loss: 1.63496
update best: 0.59385
Epoch: 17, Time: 0.02158s, Loss: 1.59967
update best: 0.62617
Epoch: 18, Time: 0.01785s, Loss: 1.56241
update best: 0.64486
Epoch: 19, Time: 0.02101s, Loss: 1.52472
update best: 0.65382
Epoch: 20, Time: 0.02051s, Loss: 1.47785
update best: 0.65693
Epoch: 21, Time: 0.02135s, Loss: 1.43605
update best: 0.66706
Epoch: 22, Time: 0.02011s, Loss: 1.39455
update best: 0.66900
Epoch: 23, Time: 0.01691s, Loss: 1.34838
update best: 0.67484
Epoch: 24, Time: 0.02455s, Loss: 1.30929
update best: 0.67796
Epoch: 25, Time: 0.02108s, Loss: 1.26239
update best: 0.67835
Epoch: 26, Time: 0.02277s, Loss: 1.22235
update best: 0.68341
Epoch: 27, Time: 0.01659s, Loss: 1.18059
update best: 0.68458
Epoch: 28, Time: 0.02228s, Loss: 1.14425
Epoch: 29, Time: 0.02031s, Loss: 1.11554

train finished!
best val: 0.68458
test...
final result: epoch: 27
{'accuracy': 0.6845794320106506, 'f1_score': 0.6626837334309369, 'f1_score -> average@micro': 0.6845794392523364}
Hypergraph(num_v=2708, num_e=1159)
Epoch: 0, Time: 0.03188s, Loss: 1.94661
update best: 0.12188
Epoch: 1, Time: 0.01863s, Loss: 1.94038
update best: 0.34151
Epoch: 2, Time: 0.01880s, Loss: 1.93350
Epoch: 3, Time: 0.01984s, Loss: 1.92534
Epoch: 4, Time: 0.01990s, Loss: 1.91478
Epoch: 5, Time: 0.02160s, Loss: 1.90180
Epoch: 6, Time: 0.02042s, Loss: 1.88834
Epoch: 7, Time: 0.02309s, Loss: 1.87205
update best: 0.34696
Epoch: 8, Time: 0.02333s, Loss: 1.85443
update best: 0.37305
Epoch: 9, Time: 0.01932s, Loss: 1.83362
update best: 0.40498
Epoch: 10, Time: 0.01713s, Loss: 1.81586
update best: 0.44393
Epoch: 11, Time: 0.01929s, Loss: 1.79077
update best: 0.47352
Epoch: 12, Time: 0.01948s, Loss: 1.76051
update best: 0.51324
Epoch: 13, Time: 0.01915s, Loss: 1.72942
update best: 0.54089
Epoch: 14, Time: 0.01945s, Loss: 1.70333
update best: 0.55491
Epoch: 15, Time: 0.01949s, Loss: 1.66653
update best: 0.57243
Epoch: 16, Time: 0.02312s, Loss: 1.63049
update best: 0.58450
Epoch: 17, Time: 0.02266s, Loss: 1.59662
update best: 0.60164
Epoch: 18, Time: 0.01937s, Loss: 1.55931
update best: 0.62188
Epoch: 19, Time: 0.02336s, Loss: 1.52301
update best: 0.63240
Epoch: 20, Time: 0.01989s, Loss: 1.47269
update best: 0.64252
Epoch: 21, Time: 0.01965s, Loss: 1.43253
update best: 0.65265
Epoch: 22, Time: 0.02023s, Loss: 1.38843
update best: 0.66121
Epoch: 23, Time: 0.01866s, Loss: 1.34594
update best: 0.66628
Epoch: 24, Time: 0.02030s, Loss: 1.30662
Epoch: 25, Time: 0.02221s, Loss: 1.25731
update best: 0.67212
Epoch: 26, Time: 0.02415s, Loss: 1.21655
update best: 0.67407
Epoch: 27, Time: 0.01990s, Loss: 1.17788
update best: 0.68380
Epoch: 28, Time: 0.02261s, Loss: 1.13940
update best: 0.68458
Epoch: 29, Time: 0.02353s, Loss: 1.11000

train finished!
best val: 0.68458
test...
final result: epoch: 28
{'accuracy': 0.6845794320106506, 'f1_score': 0.6599619408517492, 'f1_score -> average@micro': 0.6845794392523364}
Hypergraph(num_v=2708, num_e=1369)
Epoch: 0, Time: 0.03485s, Loss: 1.94659
update best: 0.12188
Epoch: 1, Time: 0.02092s, Loss: 1.94061
update best: 0.34696
Epoch: 2, Time: 0.01978s, Loss: 1.93380
Epoch: 3, Time: 0.02343s, Loss: 1.92559
Epoch: 4, Time: 0.01953s, Loss: 1.91548
Epoch: 5, Time: 0.01952s, Loss: 1.90287
Epoch: 6, Time: 0.01945s, Loss: 1.88938
Epoch: 7, Time: 0.02337s, Loss: 1.87374
Epoch: 8, Time: 0.01953s, Loss: 1.85597
update best: 0.37344
Epoch: 9, Time: 0.02281s, Loss: 1.83529
update best: 0.41005
Epoch: 10, Time: 0.02267s, Loss: 1.81693
update best: 0.45561
Epoch: 11, Time: 0.02338s, Loss: 1.79231
update best: 0.49065
Epoch: 12, Time: 0.01941s, Loss: 1.76128
update best: 0.53154
Epoch: 13, Time: 0.01686s, Loss: 1.73176
update best: 0.55452
Epoch: 14, Time: 0.01892s, Loss: 1.70478
update best: 0.56659
Epoch: 15, Time: 0.01851s, Loss: 1.66912
update best: 0.57593
Epoch: 16, Time: 0.01917s, Loss: 1.63398
update best: 0.58178
Epoch: 17, Time: 0.01882s, Loss: 1.59909
update best: 0.59813
Epoch: 18, Time: 0.01693s, Loss: 1.56282
update best: 0.62188
Epoch: 19, Time: 0.01632s, Loss: 1.52441
update best: 0.63746
Epoch: 20, Time: 0.01644s, Loss: 1.47729
update best: 0.64875
Epoch: 21, Time: 0.01530s, Loss: 1.43520
update best: 0.65576
Epoch: 22, Time: 0.01390s, Loss: 1.39300
update best: 0.66316
Epoch: 23, Time: 0.01523s, Loss: 1.34628
update best: 0.67173
Epoch: 24, Time: 0.01400s, Loss: 1.30864
update best: 0.67796
Epoch: 25, Time: 0.01377s, Loss: 1.26108
update best: 0.67835
Epoch: 26, Time: 0.01491s, Loss: 1.22270
update best: 0.67913
Epoch: 27, Time: 0.01464s, Loss: 1.17871
update best: 0.68302
Epoch: 28, Time: 0.01362s, Loss: 1.14430
Epoch: 29, Time: 0.01519s, Loss: 1.11382

train finished!
best val: 0.68302
test...
final result: epoch: 27
{'accuracy': 0.6830217838287354, 'f1_score': 0.6601386848332408, 'f1_score -> average@micro': 0.6830218068535826}
Hypergraph(num_v=2708, num_e=1159)
Epoch: 0, Time: 0.03256s, Loss: 1.94661
update best: 0.12188
Epoch: 1, Time: 0.02003s, Loss: 1.94038
update best: 0.34151
Epoch: 2, Time: 0.01985s, Loss: 1.93350
Epoch: 3, Time: 0.02016s, Loss: 1.92534
Epoch: 4, Time: 0.01931s, Loss: 1.91478
Epoch: 5, Time: 0.01982s, Loss: 1.90180
Epoch: 6, Time: 0.01978s, Loss: 1.88834
Epoch: 7, Time: 0.02289s, Loss: 1.87205
update best: 0.34696
Epoch: 8, Time: 0.02365s, Loss: 1.85443
update best: 0.37305
Epoch: 9, Time: 0.02096s, Loss: 1.83362
update best: 0.40498
Epoch: 10, Time: 0.02441s, Loss: 1.81586
update best: 0.44393
Epoch: 11, Time: 0.02284s, Loss: 1.79077
update best: 0.47352
Epoch: 12, Time: 0.01997s, Loss: 1.76051
update best: 0.51324
Epoch: 13, Time: 0.02002s, Loss: 1.72942
update best: 0.54089
Epoch: 14, Time: 0.02133s, Loss: 1.70333
update best: 0.55491
Epoch: 15, Time: 0.02342s, Loss: 1.66653
update best: 0.57243
Epoch: 16, Time: 0.01568s, Loss: 1.63049
update best: 0.58450
Epoch: 17, Time: 0.01754s, Loss: 1.59662
update best: 0.60164
Epoch: 18, Time: 0.01400s, Loss: 1.55931
update best: 0.62188
Epoch: 19, Time: 0.01731s, Loss: 1.52301
update best: 0.63240
Epoch: 20, Time: 0.01631s, Loss: 1.47269
update best: 0.64252
Epoch: 21, Time: 0.01550s, Loss: 1.43253
update best: 0.65265
Epoch: 22, Time: 0.01468s, Loss: 1.38843
update best: 0.66121
Epoch: 23, Time: 0.01581s, Loss: 1.34594
update best: 0.66628
Epoch: 24, Time: 0.01575s, Loss: 1.30662
Epoch: 25, Time: 0.01466s, Loss: 1.25731
update best: 0.67212
Epoch: 26, Time: 0.01421s, Loss: 1.21655
update best: 0.67407
Epoch: 27, Time: 0.01371s, Loss: 1.17788
update best: 0.68380
Epoch: 28, Time: 0.01376s, Loss: 1.13940
update best: 0.68458
Epoch: 29, Time: 0.01399s, Loss: 1.11000

train finished!
best val: 0.68458
test...
final result: epoch: 28
{'accuracy': 0.6845794320106506, 'f1_score': 0.6599619408517492, 'f1_score -> average@micro': 0.6845794392523364}
Hypergraph(num_v=2708, num_e=1713)
Epoch: 0, Time: 0.03760s, Loss: 1.94645
update best: 0.12188
Epoch: 1, Time: 0.02273s, Loss: 1.94095
update best: 0.32983
Epoch: 2, Time: 0.02198s, Loss: 1.93439
Epoch: 3, Time: 0.02071s, Loss: 1.92643
Epoch: 4, Time: 0.02239s, Loss: 1.91719
Epoch: 5, Time: 0.02336s, Loss: 1.90445
Epoch: 6, Time: 0.02287s, Loss: 1.89155
update best: 0.33917
Epoch: 7, Time: 0.02212s, Loss: 1.87684
update best: 0.37539
Epoch: 8, Time: 0.02241s, Loss: 1.85871
update best: 0.39875
Epoch: 9, Time: 0.02050s, Loss: 1.83741
update best: 0.43925
Epoch: 10, Time: 0.02017s, Loss: 1.82084
update best: 0.47391
Epoch: 11, Time: 0.02229s, Loss: 1.79483
update best: 0.51012
Epoch: 12, Time: 0.02232s, Loss: 1.76560
update best: 0.53427
Epoch: 13, Time: 0.02402s, Loss: 1.73536
update best: 0.56464
Epoch: 14, Time: 0.02062s, Loss: 1.70883
update best: 0.58917
Epoch: 15, Time: 0.02209s, Loss: 1.67291
update best: 0.60670
Epoch: 16, Time: 0.02201s, Loss: 1.63799
update best: 0.62266
Epoch: 17, Time: 0.02216s, Loss: 1.60399
update best: 0.63785
Epoch: 18, Time: 0.02240s, Loss: 1.56790
update best: 0.64992
Epoch: 19, Time: 0.02218s, Loss: 1.53176
update best: 0.66199
[I 2024-01-18 06:24:23,217] Trial 29 finished with value: 0.6787382960319519 and parameters: {'border': 0.974}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:25:23,317] Trial 30 finished with value: 0.6799065470695496 and parameters: {'border': 0.978}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:26:23,062] Trial 31 finished with value: 0.6876947283744812 and parameters: {'border': 0.986}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:27:22,567] Trial 32 finished with value: 0.6873052716255188 and parameters: {'border': 0.995}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 20, Time: 0.02110s, Loss: 1.48547
Epoch: 21, Time: 0.01955s, Loss: 1.44301
update best: 0.66277
Epoch: 22, Time: 0.01743s, Loss: 1.40400
update best: 0.66667
Epoch: 23, Time: 0.01754s, Loss: 1.35715
update best: 0.67056
Epoch: 24, Time: 0.01802s, Loss: 1.31805
update best: 0.67095
Epoch: 25, Time: 0.01845s, Loss: 1.27507
update best: 0.67562
Epoch: 26, Time: 0.01836s, Loss: 1.23647
update best: 0.67718
Epoch: 27, Time: 0.01830s, Loss: 1.19309
Epoch: 28, Time: 0.01832s, Loss: 1.15572
update best: 0.67796
Epoch: 29, Time: 0.01808s, Loss: 1.13391
update best: 0.67874

train finished!
best val: 0.67874
test...
final result: epoch: 29
{'accuracy': 0.6787382960319519, 'f1_score': 0.6581950791722796, 'f1_score -> average@micro': 0.6787383177570093}
Hypergraph(num_v=2708, num_e=1518)
Epoch: 0, Time: 0.02959s, Loss: 1.94655
update best: 0.12188
Epoch: 1, Time: 0.02209s, Loss: 1.94092
update best: 0.36020
Epoch: 2, Time: 0.02015s, Loss: 1.93399
Epoch: 3, Time: 0.02213s, Loss: 1.92623
Epoch: 4, Time: 0.02218s, Loss: 1.91640
Epoch: 5, Time: 0.02031s, Loss: 1.90343
Epoch: 6, Time: 0.02185s, Loss: 1.89057
Epoch: 7, Time: 0.01978s, Loss: 1.87525
update best: 0.37422
Epoch: 8, Time: 0.02078s, Loss: 1.85677
update best: 0.40810
Epoch: 9, Time: 0.02058s, Loss: 1.83579
update best: 0.44393
Epoch: 10, Time: 0.01960s, Loss: 1.81894
update best: 0.48170
Epoch: 11, Time: 0.02034s, Loss: 1.79287
update best: 0.52259
Epoch: 12, Time: 0.01993s, Loss: 1.76311
update best: 0.55062
Epoch: 13, Time: 0.02077s, Loss: 1.73231
update best: 0.56698
Epoch: 14, Time: 0.01766s, Loss: 1.70518
update best: 0.57360
Epoch: 15, Time: 0.02067s, Loss: 1.66868
update best: 0.58294
Epoch: 16, Time: 0.02058s, Loss: 1.63414
update best: 0.61332
Epoch: 17, Time: 0.01990s, Loss: 1.59931
update best: 0.63123
Epoch: 18, Time: 0.01973s, Loss: 1.56307
update best: 0.64486
Epoch: 19, Time: 0.02106s, Loss: 1.52525
update best: 0.65226
Epoch: 20, Time: 0.01947s, Loss: 1.47840
update best: 0.66394
Epoch: 21, Time: 0.01883s, Loss: 1.43667
update best: 0.66511
Epoch: 22, Time: 0.01995s, Loss: 1.39666
update best: 0.67134
Epoch: 23, Time: 0.01976s, Loss: 1.34770
update best: 0.67290
Epoch: 24, Time: 0.02085s, Loss: 1.30948
Epoch: 25, Time: 0.01723s, Loss: 1.26287
update best: 0.67718
Epoch: 26, Time: 0.02018s, Loss: 1.22200
update best: 0.67991
Epoch: 27, Time: 0.02091s, Loss: 1.18189
Epoch: 28, Time: 0.01958s, Loss: 1.14405
Epoch: 29, Time: 0.01977s, Loss: 1.11817

train finished!
best val: 0.67991
test...
final result: epoch: 26
{'accuracy': 0.6799065470695496, 'f1_score': 0.6572993836577421, 'f1_score -> average@micro': 0.6799065420560748}
Hypergraph(num_v=2708, num_e=1237)
Epoch: 0, Time: 0.03366s, Loss: 1.94663
update best: 0.12188
Epoch: 1, Time: 0.02121s, Loss: 1.94043
update best: 0.32749
Epoch: 2, Time: 0.01932s, Loss: 1.93342
Epoch: 3, Time: 0.02373s, Loss: 1.92501
Epoch: 4, Time: 0.02034s, Loss: 1.91462
Epoch: 5, Time: 0.02221s, Loss: 1.90154
Epoch: 6, Time: 0.02341s, Loss: 1.88776
Epoch: 7, Time: 0.02377s, Loss: 1.87184
update best: 0.33995
Epoch: 8, Time: 0.02049s, Loss: 1.85383
update best: 0.37656
Epoch: 9, Time: 0.02139s, Loss: 1.83192
update best: 0.40537
Epoch: 10, Time: 0.02258s, Loss: 1.81376
update best: 0.44704
Epoch: 11, Time: 0.02175s, Loss: 1.78845
update best: 0.47858
Epoch: 12, Time: 0.02051s, Loss: 1.75667
update best: 0.52181
Epoch: 13, Time: 0.01922s, Loss: 1.72660
update best: 0.55023
Epoch: 14, Time: 0.01917s, Loss: 1.69932
update best: 0.56659
Epoch: 15, Time: 0.01919s, Loss: 1.66167
update best: 0.57204
Epoch: 16, Time: 0.01625s, Loss: 1.62382
update best: 0.58528
Epoch: 17, Time: 0.02007s, Loss: 1.58996
update best: 0.60748
Epoch: 18, Time: 0.01900s, Loss: 1.55154
update best: 0.63123
Epoch: 19, Time: 0.01932s, Loss: 1.51352
update best: 0.64291
Epoch: 20, Time: 0.01923s, Loss: 1.46440
update best: 0.65343
Epoch: 21, Time: 0.01862s, Loss: 1.42280
update best: 0.66160
Epoch: 22, Time: 0.01839s, Loss: 1.37718
update best: 0.67017
Epoch: 23, Time: 0.01921s, Loss: 1.33420
update best: 0.67407
Epoch: 24, Time: 0.01947s, Loss: 1.29331
update best: 0.67874
Epoch: 25, Time: 0.02009s, Loss: 1.24430
update best: 0.68107
Epoch: 26, Time: 0.01911s, Loss: 1.20621
update best: 0.68185
Epoch: 27, Time: 0.01550s, Loss: 1.16259
update best: 0.68458
Epoch: 28, Time: 0.01998s, Loss: 1.12618
update best: 0.68769
Epoch: 29, Time: 0.01978s, Loss: 1.09703

train finished!
best val: 0.68769
test...
final result: epoch: 28
{'accuracy': 0.6876947283744812, 'f1_score': 0.6652098366111925, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=1043)
Epoch: 0, Time: 0.02819s, Loss: 1.94648
update best: 0.12188
Epoch: 1, Time: 0.01841s, Loss: 1.94046
update best: 0.35631
Epoch: 2, Time: 0.01879s, Loss: 1.93322
Epoch: 3, Time: 0.02363s, Loss: 1.92475
Epoch: 4, Time: 0.02198s, Loss: 1.91396
Epoch: 5, Time: 0.01937s, Loss: 1.90058
Epoch: 6, Time: 0.02350s, Loss: 1.88653
Epoch: 7, Time: 0.01507s, Loss: 1.87075
update best: 0.36994
Epoch: 8, Time: 0.01477s, Loss: 1.85187
update best: 0.40070
Epoch: 9, Time: 0.01516s, Loss: 1.83014
update best: 0.43380
Epoch: 10, Time: 0.01278s, Loss: 1.81127
update best: 0.48014
Epoch: 11, Time: 0.01340s, Loss: 1.78464
update best: 0.51713
Epoch: 12, Time: 0.01368s, Loss: 1.75400
update best: 0.54050
Epoch: 13, Time: 0.01346s, Loss: 1.72251
update best: 0.56075
Epoch: 14, Time: 0.01351s, Loss: 1.69452
update best: 0.56581
Epoch: 15, Time: 0.01294s, Loss: 1.65760
update best: 0.57632
Epoch: 16, Time: 0.01297s, Loss: 1.61964
update best: 0.59463
Epoch: 17, Time: 0.01284s, Loss: 1.58343
update best: 0.61799
Epoch: 18, Time: 0.01290s, Loss: 1.54500
update best: 0.63435
Epoch: 19, Time: 0.01312s, Loss: 1.50713
update best: 0.64836
Epoch: 20, Time: 0.01423s, Loss: 1.45498
update best: 0.65265
Epoch: 21, Time: 0.01327s, Loss: 1.41275
update best: 0.66511
Epoch: 22, Time: 0.01286s, Loss: 1.37005
update best: 0.67173
Epoch: 23, Time: 0.01286s, Loss: 1.32308
update best: 0.67523
Epoch: 24, Time: 0.01255s, Loss: 1.28365
update best: 0.67679
Epoch: 25, Time: 0.01257s, Loss: 1.23477
update best: 0.67952
Epoch: 26, Time: 0.01244s, Loss: 1.19500
Epoch: 27, Time: 0.01330s, Loss: 1.15283
update best: 0.68419
Epoch: 28, Time: 0.01304s, Loss: 1.11185
update best: 0.68653
Epoch: 29, Time: 0.01253s, Loss: 1.08283
update best: 0.68731

train finished!
best val: 0.68731
test...
final result: epoch: 29
{'accuracy': 0.6873052716255188, 'f1_score': 0.667891010746498, 'f1_score -> average@micro': 0.6873052959501558}
Hypergraph(num_v=2708, num_e=1300)
Epoch: 0, Time: 0.03506s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.02096s, Loss: 1.94049
update best: 0.36955
Epoch: 2, Time: 0.02362s, Loss: 1.93363
Epoch: 3, Time: 0.02105s, Loss: 1.92542
Epoch: 4, Time: 0.02230s, Loss: 1.91522
Epoch: 5, Time: 0.02006s, Loss: 1.90234
Epoch: 6, Time: 0.02141s, Loss: 1.88865
Epoch: 7, Time: 0.02174s, Loss: 1.87333
Epoch: 8, Time: 0.02226s, Loss: 1.85552
update best: 0.39798
Epoch: 9, Time: 0.02064s, Loss: 1.83460
update best: 0.43069
Epoch: 10, Time: 0.02225s, Loss: 1.81624
update best: 0.46262
Epoch: 11, Time: 0.02096s, Loss: 1.79111
update best: 0.50350
Epoch: 12, Time: 0.02015s, Loss: 1.76028
update best: 0.53816
Epoch: 13, Time: 0.02280s, Loss: 1.73058
update best: 0.55841
Epoch: 14, Time: 0.01895s, Loss: 1.70390
update best: 0.56970
Epoch: 15, Time: 0.01900s, Loss: 1.66774
update best: 0.57710
Epoch: 16, Time: 0.02297s, Loss: 1.63196
update best: 0.58528
Epoch: 17, Time: 0.01912s, Loss: 1.59608
update best: 0.60942
Epoch: 18, Time: 0.01900s, Loss: 1.55982
update best: 0.62656
Epoch: 19, Time: 0.02272s, Loss: 1.52333
update best: 0.64097
Epoch: 20, Time: 0.01939s, Loss: 1.47363
update best: 0.64759
Epoch: 21, Time: 0.01986s, Loss: 1.43356
update best: 0.65460
Epoch: 22, Time: 0.02217s, Loss: 1.38996
update best: 0.66706
Epoch: 23, Time: 0.02296s, Loss: 1.34418
update best: 0.67368
Epoch: 24, Time: 0.01896s, Loss: 1.30672
update best: 0.67601
Epoch: 25, Time: 0.01906s, Loss: 1.25776
update best: 0.67796
Epoch: 26, Time: 0.01960s, Loss: 1.22161
update best: 0.68030
Epoch: 27, Time: 0.02026s, Loss: 1.17642
update best: 0.68419
Epoch: 28, Time: 0.02117s, Loss: 1.14161
[I 2024-01-18 06:28:22,483] Trial 33 finished with value: 0.6865264773368835 and parameters: {'border': 0.984}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:29:22,164] Trial 34 finished with value: 0.6830217838287354 and parameters: {'border': 0.987}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:30:21,876] Trial 35 finished with value: 0.6853582262992859 and parameters: {'border': 0.992}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:31:22,226] Trial 36 finished with value: 0.6557632684707642 and parameters: {'border': 0.953}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:32:21,255] Trial 37 finished with value: 0.6873052716255188 and parameters: {'border': 0.99}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 29, Time: 0.02060s, Loss: 1.11272
update best: 0.68653

train finished!
best val: 0.68653
test...
final result: epoch: 29
{'accuracy': 0.6865264773368835, 'f1_score': 0.6645425193745674, 'f1_score -> average@micro': 0.6865264797507789}
Hypergraph(num_v=2708, num_e=1206)
Epoch: 0, Time: 0.03398s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.02155s, Loss: 1.94051
update best: 0.37383
Epoch: 2, Time: 0.02041s, Loss: 1.93361
Epoch: 3, Time: 0.02085s, Loss: 1.92531
Epoch: 4, Time: 0.02396s, Loss: 1.91493
Epoch: 5, Time: 0.01807s, Loss: 1.90201
Epoch: 6, Time: 0.02009s, Loss: 1.88820
Epoch: 7, Time: 0.02030s, Loss: 1.87212
Epoch: 8, Time: 0.01926s, Loss: 1.85420
update best: 0.39330
Epoch: 9, Time: 0.02304s, Loss: 1.83301
update best: 0.41900
Epoch: 10, Time: 0.02047s, Loss: 1.81520
update best: 0.45833
Epoch: 11, Time: 0.02381s, Loss: 1.78938
update best: 0.49299
Epoch: 12, Time: 0.02141s, Loss: 1.75814
update best: 0.52414
Epoch: 13, Time: 0.02168s, Loss: 1.72791
update best: 0.54790
Epoch: 14, Time: 0.02148s, Loss: 1.70101
update best: 0.56425
Epoch: 15, Time: 0.01890s, Loss: 1.66413
update best: 0.57555
Epoch: 16, Time: 0.01706s, Loss: 1.62725
update best: 0.59073
Epoch: 17, Time: 0.01712s, Loss: 1.59247
update best: 0.61643
Epoch: 18, Time: 0.01723s, Loss: 1.55481
update best: 0.63240
Epoch: 19, Time: 0.01696s, Loss: 1.51861
update best: 0.64486
Epoch: 20, Time: 0.01688s, Loss: 1.46778
update best: 0.65771
Epoch: 21, Time: 0.01582s, Loss: 1.42742
update best: 0.65849
Epoch: 22, Time: 0.01852s, Loss: 1.38236
update best: 0.66783
Epoch: 23, Time: 0.01897s, Loss: 1.33881
update best: 0.67134
Epoch: 24, Time: 0.01733s, Loss: 1.29973
update best: 0.67718
Epoch: 25, Time: 0.01727s, Loss: 1.25105
update best: 0.68030
Epoch: 26, Time: 0.02089s, Loss: 1.21320
Epoch: 27, Time: 0.01685s, Loss: 1.16960
update best: 0.68302
Epoch: 28, Time: 0.01562s, Loss: 1.13380
Epoch: 29, Time: 0.01724s, Loss: 1.10606

train finished!
best val: 0.68302
test...
final result: epoch: 27
{'accuracy': 0.6830217838287354, 'f1_score': 0.6580493410678123, 'f1_score -> average@micro': 0.6830218068535826}
Hypergraph(num_v=2708, num_e=1094)
Epoch: 0, Time: 0.03183s, Loss: 1.94664
update best: 0.12188
Epoch: 1, Time: 0.01895s, Loss: 1.94020
update best: 0.30491
Epoch: 2, Time: 0.02204s, Loss: 1.93297
Epoch: 3, Time: 0.01893s, Loss: 1.92462
Epoch: 4, Time: 0.01903s, Loss: 1.91404
Epoch: 5, Time: 0.01889s, Loss: 1.90111
update best: 0.30919
Epoch: 6, Time: 0.01976s, Loss: 1.88750
update best: 0.31698
Epoch: 7, Time: 0.01985s, Loss: 1.87170
update best: 0.32710
Epoch: 8, Time: 0.01731s, Loss: 1.85345
update best: 0.35164
Epoch: 9, Time: 0.02005s, Loss: 1.83182
update best: 0.39875
Epoch: 10, Time: 0.01932s, Loss: 1.81383
update best: 0.43886
Epoch: 11, Time: 0.01977s, Loss: 1.78861
update best: 0.48910
Epoch: 12, Time: 0.01865s, Loss: 1.75761
update best: 0.52220
Epoch: 13, Time: 0.02050s, Loss: 1.72707
update best: 0.54517
Epoch: 14, Time: 0.02018s, Loss: 1.70023
update best: 0.56153
Epoch: 15, Time: 0.01938s, Loss: 1.66424
update best: 0.56815
Epoch: 16, Time: 0.02051s, Loss: 1.62698
update best: 0.58061
Epoch: 17, Time: 0.01896s, Loss: 1.59259
update best: 0.59463
Epoch: 18, Time: 0.02021s, Loss: 1.55558
update best: 0.61877
Epoch: 19, Time: 0.01963s, Loss: 1.51741
update best: 0.63474
Epoch: 20, Time: 0.01937s, Loss: 1.46639
update best: 0.64447
Epoch: 21, Time: 0.01951s, Loss: 1.42576
update best: 0.65849
Epoch: 22, Time: 0.01960s, Loss: 1.38338
update best: 0.66511
Epoch: 23, Time: 0.01958s, Loss: 1.33898
update best: 0.66628
Epoch: 24, Time: 0.02134s, Loss: 1.30067
update best: 0.66861
Epoch: 25, Time: 0.01508s, Loss: 1.25041
update best: 0.67407
Epoch: 26, Time: 0.01664s, Loss: 1.20821
update best: 0.67991
Epoch: 27, Time: 0.01654s, Loss: 1.16992
update best: 0.68224
Epoch: 28, Time: 0.01744s, Loss: 1.13034
update best: 0.68536
Epoch: 29, Time: 0.01459s, Loss: 1.10097

train finished!
best val: 0.68536
test...
final result: epoch: 28
{'accuracy': 0.6853582262992859, 'f1_score': 0.6595623797267406, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=3166)
Epoch: 0, Time: 0.04278s, Loss: 1.94639
update best: 0.12111
Epoch: 1, Time: 0.02526s, Loss: 1.94167
update best: 0.32749
Epoch: 2, Time: 0.02478s, Loss: 1.93568
Epoch: 3, Time: 0.02754s, Loss: 1.92912
Epoch: 4, Time: 0.02504s, Loss: 1.92032
Epoch: 5, Time: 0.02483s, Loss: 1.90961
Epoch: 6, Time: 0.02634s, Loss: 1.89918
Epoch: 7, Time: 0.02462s, Loss: 1.88622
update best: 0.35864
Epoch: 8, Time: 0.02477s, Loss: 1.87061
update best: 0.38668
Epoch: 9, Time: 0.02485s, Loss: 1.85132
update best: 0.41978
Epoch: 10, Time: 0.02502s, Loss: 1.83780
update best: 0.45366
Epoch: 11, Time: 0.02495s, Loss: 1.81578
update best: 0.47936
Epoch: 12, Time: 0.02477s, Loss: 1.79033
update best: 0.49922
Epoch: 13, Time: 0.02467s, Loss: 1.76402
update best: 0.52453
Epoch: 14, Time: 0.02434s, Loss: 1.74194
update best: 0.54439
Epoch: 15, Time: 0.02446s, Loss: 1.71024
update best: 0.57593
Epoch: 16, Time: 0.02493s, Loss: 1.68097
update best: 0.59774
Epoch: 17, Time: 0.02508s, Loss: 1.65371
update best: 0.61137
Epoch: 18, Time: 0.02514s, Loss: 1.61752
update best: 0.62773
Epoch: 19, Time: 0.02431s, Loss: 1.58962
update best: 0.63824
Epoch: 20, Time: 0.02507s, Loss: 1.54566
Epoch: 21, Time: 0.02473s, Loss: 1.51175
update best: 0.63980
Epoch: 22, Time: 0.02515s, Loss: 1.47615
update best: 0.64486
Epoch: 23, Time: 0.02439s, Loss: 1.43781
update best: 0.64720
Epoch: 24, Time: 0.02456s, Loss: 1.39943
update best: 0.64953
Epoch: 25, Time: 0.02555s, Loss: 1.35885
update best: 0.65382
Epoch: 26, Time: 0.02518s, Loss: 1.31962
update best: 0.65421
Epoch: 27, Time: 0.02477s, Loss: 1.28453
update best: 0.65576
Epoch: 28, Time: 0.02499s, Loss: 1.25362
Epoch: 29, Time: 0.02516s, Loss: 1.22779

train finished!
best val: 0.65576
test...
final result: epoch: 27
{'accuracy': 0.6557632684707642, 'f1_score': 0.6314614647124686, 'f1_score -> average@micro': 0.6557632398753894}
Hypergraph(num_v=2708, num_e=1140)
Epoch: 0, Time: 0.03400s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.01410s, Loss: 1.94045
update best: 0.31542
Epoch: 2, Time: 0.01379s, Loss: 1.93341
Epoch: 3, Time: 0.01402s, Loss: 1.92518
Epoch: 4, Time: 0.01624s, Loss: 1.91454
Epoch: 5, Time: 0.01769s, Loss: 1.90185
Epoch: 6, Time: 0.01603s, Loss: 1.88838
update best: 0.31737
Epoch: 7, Time: 0.01395s, Loss: 1.87250
update best: 0.33684
Epoch: 8, Time: 0.01401s, Loss: 1.85475
update best: 0.36877
Epoch: 9, Time: 0.01399s, Loss: 1.83312
update best: 0.40460
Epoch: 10, Time: 0.01420s, Loss: 1.81559
update best: 0.44081
Epoch: 11, Time: 0.01376s, Loss: 1.79045
update best: 0.48326
Epoch: 12, Time: 0.01390s, Loss: 1.75942
update best: 0.51986
Epoch: 13, Time: 0.01385s, Loss: 1.72896
update best: 0.54439
Epoch: 14, Time: 0.01388s, Loss: 1.70258
update best: 0.55491
Epoch: 15, Time: 0.01478s, Loss: 1.66629
update best: 0.56854
Epoch: 16, Time: 0.01383s, Loss: 1.63043
update best: 0.57827
Epoch: 17, Time: 0.01383s, Loss: 1.59577
update best: 0.58217
Epoch: 18, Time: 0.01372s, Loss: 1.55994
update best: 0.61176
Epoch: 19, Time: 0.01365s, Loss: 1.52208
update best: 0.63084
Epoch: 20, Time: 0.01348s, Loss: 1.47199
update best: 0.64525
Epoch: 21, Time: 0.01326s, Loss: 1.43174
update best: 0.65537
Epoch: 22, Time: 0.01351s, Loss: 1.38862
update best: 0.66005
Epoch: 23, Time: 0.01335s, Loss: 1.34424
update best: 0.66355
Epoch: 24, Time: 0.01336s, Loss: 1.30237
update best: 0.66978
Epoch: 25, Time: 0.01313s, Loss: 1.25589
update best: 0.67562
Epoch: 26, Time: 0.01367s, Loss: 1.21605
update best: 0.68146
Epoch: 27, Time: 0.01299s, Loss: 1.17547
update best: 0.68341
Epoch: 28, Time: 0.01303s, Loss: 1.13525
update best: 0.68731
Epoch: 29, Time: 0.01352s, Loss: 1.10585

train finished!
best val: 0.68731
test...
final result: epoch: 28
{'accuracy': 0.6873052716255188, 'f1_score': 0.6623724299431235, 'f1_score -> average@micro': 0.6873052959501558}
Hypergraph(num_v=2708, num_e=1033)
Epoch: 0, Time: 0.03309s, Loss: 1.94643
update best: 0.12188
Epoch: 1, Time: 0.02111s, Loss: 1.94040
update best: 0.33917
Epoch: 2, Time: 0.02219s, Loss: 1.93313
[I 2024-01-18 06:33:21,028] Trial 38 finished with value: 0.6857476830482483 and parameters: {'border': 0.996}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:34:20,265] Trial 39 finished with value: 0.6783488988876343 and parameters: {'border': 0.977}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:35:19,780] Trial 40 finished with value: 0.6861370801925659 and parameters: {'border': 0.983}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:36:18,704] Trial 41 finished with value: 0.6876947283744812 and parameters: {'border': 0.986}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 3, Time: 0.02121s, Loss: 1.92469
Epoch: 4, Time: 0.02369s, Loss: 1.91391
Epoch: 5, Time: 0.01952s, Loss: 1.90041
Epoch: 6, Time: 0.01977s, Loss: 1.88635
update best: 0.34579
Epoch: 7, Time: 0.01916s, Loss: 1.87042
update best: 0.37227
Epoch: 8, Time: 0.02209s, Loss: 1.85155
update best: 0.40226
Epoch: 9, Time: 0.02050s, Loss: 1.82983
update best: 0.43925
Epoch: 10, Time: 0.01921s, Loss: 1.81041
update best: 0.49221
Epoch: 11, Time: 0.02189s, Loss: 1.78359
update best: 0.52570
Epoch: 12, Time: 0.01927s, Loss: 1.75353
update best: 0.55062
Epoch: 13, Time: 0.02022s, Loss: 1.72137
update best: 0.56581
Epoch: 14, Time: 0.01919s, Loss: 1.69333
update best: 0.57438
Epoch: 15, Time: 0.01938s, Loss: 1.65659
update best: 0.58645
Epoch: 16, Time: 0.02158s, Loss: 1.61735
update best: 0.60358
Epoch: 17, Time: 0.01899s, Loss: 1.58197
update best: 0.62344
Epoch: 18, Time: 0.01846s, Loss: 1.54412
update best: 0.64097
Epoch: 19, Time: 0.01876s, Loss: 1.50678
update best: 0.64992
Epoch: 20, Time: 0.01917s, Loss: 1.45406
update best: 0.65498
Epoch: 21, Time: 0.01878s, Loss: 1.41198
update best: 0.66550
Epoch: 22, Time: 0.01876s, Loss: 1.36879
update best: 0.67017
Epoch: 23, Time: 0.01967s, Loss: 1.32291
update best: 0.67368
Epoch: 24, Time: 0.01972s, Loss: 1.28286
update best: 0.67445
Epoch: 25, Time: 0.01919s, Loss: 1.23468
update best: 0.68030
Epoch: 26, Time: 0.02120s, Loss: 1.19418
Epoch: 27, Time: 0.02183s, Loss: 1.15191
update best: 0.68107
Epoch: 28, Time: 0.02002s, Loss: 1.11292
update best: 0.68575
Epoch: 29, Time: 0.01757s, Loss: 1.08156

train finished!
best val: 0.68575
test...
final result: epoch: 28
{'accuracy': 0.6857476830482483, 'f1_score': 0.6648293795468189, 'f1_score -> average@micro': 0.6857476635514018}
Hypergraph(num_v=2708, num_e=1556)
Epoch: 0, Time: 0.03666s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.01988s, Loss: 1.94098
update best: 0.37266
Epoch: 2, Time: 0.02158s, Loss: 1.93439
Epoch: 3, Time: 0.02281s, Loss: 1.92672
Epoch: 4, Time: 0.02253s, Loss: 1.91718
Epoch: 5, Time: 0.02717s, Loss: 1.90453
Epoch: 6, Time: 0.02455s, Loss: 1.89164
Epoch: 7, Time: 0.02087s, Loss: 1.87676
update best: 0.37500
Epoch: 8, Time: 0.02156s, Loss: 1.85898
update best: 0.40810
Epoch: 9, Time: 0.02250s, Loss: 1.83845
update best: 0.43731
Epoch: 10, Time: 0.02125s, Loss: 1.82187
update best: 0.48520
Epoch: 11, Time: 0.02089s, Loss: 1.79641
update best: 0.52687
Epoch: 12, Time: 0.01817s, Loss: 1.76656
update best: 0.55218
Epoch: 13, Time: 0.02241s, Loss: 1.73656
update best: 0.56386
Epoch: 14, Time: 0.02042s, Loss: 1.70993
update best: 0.57321
Epoch: 15, Time: 0.01768s, Loss: 1.67375
update best: 0.58333
Epoch: 16, Time: 0.02152s, Loss: 1.63906
update best: 0.60903
Epoch: 17, Time: 0.02066s, Loss: 1.60542
update best: 0.63162
Epoch: 18, Time: 0.02003s, Loss: 1.56894
update best: 0.64330
Epoch: 19, Time: 0.01756s, Loss: 1.53333
update best: 0.65421
Epoch: 20, Time: 0.02020s, Loss: 1.48587
update best: 0.65849
Epoch: 21, Time: 0.02010s, Loss: 1.44440
update best: 0.66277
Epoch: 22, Time: 0.02050s, Loss: 1.40455
update best: 0.66589
Epoch: 23, Time: 0.01794s, Loss: 1.35649
update best: 0.67134
Epoch: 24, Time: 0.02006s, Loss: 1.31821
Epoch: 25, Time: 0.01724s, Loss: 1.27424
update best: 0.67368
Epoch: 26, Time: 0.02037s, Loss: 1.23421
update best: 0.67484
Epoch: 27, Time: 0.01759s, Loss: 1.19199
Epoch: 28, Time: 0.02009s, Loss: 1.15548
update best: 0.67835
Epoch: 29, Time: 0.01942s, Loss: 1.13130

train finished!
best val: 0.67835
test...
final result: epoch: 28
{'accuracy': 0.6783488988876343, 'f1_score': 0.6589573350809221, 'f1_score -> average@micro': 0.6783489096573209}
Hypergraph(num_v=2708, num_e=1328)
Epoch: 0, Time: 0.02935s, Loss: 1.94657
update best: 0.12188
Epoch: 1, Time: 0.01990s, Loss: 1.94050
update best: 0.33645
Epoch: 2, Time: 0.02163s, Loss: 1.93343
Epoch: 3, Time: 0.02042s, Loss: 1.92494
Epoch: 4, Time: 0.02022s, Loss: 1.91490
Epoch: 5, Time: 0.01919s, Loss: 1.90206
Epoch: 6, Time: 0.02090s, Loss: 1.88843
Epoch: 7, Time: 0.02223s, Loss: 1.87251
update best: 0.34735
Epoch: 8, Time: 0.02280s, Loss: 1.85484
update best: 0.37266
Epoch: 9, Time: 0.02109s, Loss: 1.83434
update best: 0.40226
Epoch: 10, Time: 0.02244s, Loss: 1.81571
update best: 0.44354
Epoch: 11, Time: 0.02124s, Loss: 1.79140
update best: 0.47079
Epoch: 12, Time: 0.02228s, Loss: 1.76039
update best: 0.50701
Epoch: 13, Time: 0.01970s, Loss: 1.73148
update best: 0.53154
Epoch: 14, Time: 0.02205s, Loss: 1.70502
update best: 0.55023
Epoch: 15, Time: 0.02027s, Loss: 1.66855
update best: 0.57165
Epoch: 16, Time: 0.02098s, Loss: 1.63293
update best: 0.57905
Epoch: 17, Time: 0.02009s, Loss: 1.59825
update best: 0.59813
Epoch: 18, Time: 0.02005s, Loss: 1.56177
update best: 0.62266
Epoch: 19, Time: 0.02016s, Loss: 1.52408
update best: 0.63863
Epoch: 20, Time: 0.01989s, Loss: 1.47797
update best: 0.64369
Epoch: 21, Time: 0.02112s, Loss: 1.43491
update best: 0.65343
Epoch: 22, Time: 0.01722s, Loss: 1.39254
update best: 0.66316
Epoch: 23, Time: 0.01922s, Loss: 1.34772
update best: 0.66861
Epoch: 24, Time: 0.02255s, Loss: 1.30814
update best: 0.67329
Epoch: 25, Time: 0.01907s, Loss: 1.26152
update best: 0.67757
Epoch: 26, Time: 0.01774s, Loss: 1.22379
update best: 0.68069
Epoch: 27, Time: 0.01887s, Loss: 1.17742
update best: 0.68536
Epoch: 28, Time: 0.02030s, Loss: 1.14275
update best: 0.68614
Epoch: 29, Time: 0.01909s, Loss: 1.11249

train finished!
best val: 0.68614
test...
final result: epoch: 28
{'accuracy': 0.6861370801925659, 'f1_score': 0.6633361749673746, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1237)
Epoch: 0, Time: 0.03443s, Loss: 1.94663
update best: 0.12188
Epoch: 1, Time: 0.02020s, Loss: 1.94043
update best: 0.32749
Epoch: 2, Time: 0.01923s, Loss: 1.93342
Epoch: 3, Time: 0.01988s, Loss: 1.92501
Epoch: 4, Time: 0.01907s, Loss: 1.91462
Epoch: 5, Time: 0.02004s, Loss: 1.90154
Epoch: 6, Time: 0.01967s, Loss: 1.88776
Epoch: 7, Time: 0.02269s, Loss: 1.87184
update best: 0.33995
Epoch: 8, Time: 0.02007s, Loss: 1.85383
update best: 0.37656
Epoch: 9, Time: 0.01911s, Loss: 1.83192
update best: 0.40537
Epoch: 10, Time: 0.01894s, Loss: 1.81376
update best: 0.44704
Epoch: 11, Time: 0.02016s, Loss: 1.78845
update best: 0.47858
Epoch: 12, Time: 0.01846s, Loss: 1.75667
update best: 0.52181
Epoch: 13, Time: 0.01877s, Loss: 1.72660
update best: 0.55023
Epoch: 14, Time: 0.01913s, Loss: 1.69932
update best: 0.56659
Epoch: 15, Time: 0.02083s, Loss: 1.66167
update best: 0.57204
Epoch: 16, Time: 0.02065s, Loss: 1.62382
update best: 0.58528
Epoch: 17, Time: 0.02027s, Loss: 1.58996
update best: 0.60748
Epoch: 18, Time: 0.02274s, Loss: 1.55154
update best: 0.63123
Epoch: 19, Time: 0.01970s, Loss: 1.51352
update best: 0.64291
Epoch: 20, Time: 0.02312s, Loss: 1.46440
update best: 0.65343
Epoch: 21, Time: 0.01928s, Loss: 1.42280
update best: 0.66160
Epoch: 22, Time: 0.01860s, Loss: 1.37718
update best: 0.67017
Epoch: 23, Time: 0.01983s, Loss: 1.33420
update best: 0.67407
Epoch: 24, Time: 0.01923s, Loss: 1.29331
update best: 0.67874
Epoch: 25, Time: 0.01940s, Loss: 1.24430
update best: 0.68107
Epoch: 26, Time: 0.01927s, Loss: 1.20621
update best: 0.68185
Epoch: 27, Time: 0.01933s, Loss: 1.16259
update best: 0.68458
Epoch: 28, Time: 0.01933s, Loss: 1.12618
update best: 0.68769
Epoch: 29, Time: 0.01934s, Loss: 1.09703

train finished!
best val: 0.68769
test...
final result: epoch: 28
{'accuracy': 0.6876947283744812, 'f1_score': 0.6652098366111925, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=1206)
Epoch: 0, Time: 0.03249s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.01892s, Loss: 1.94051
update best: 0.37383
Epoch: 2, Time: 0.02046s, Loss: 1.93361
Epoch: 3, Time: 0.02266s, Loss: 1.92531
Epoch: 4, Time: 0.01769s, Loss: 1.91493
Epoch: 5, Time: 0.01762s, Loss: 1.90201
Epoch: 6, Time: 0.01744s, Loss: 1.88820
Epoch: 7, Time: 0.01626s, Loss: 1.87212
Epoch: 8, Time: 0.01630s, Loss: 1.85420
update best: 0.39330
Epoch: 9, Time: 0.01933s, Loss: 1.83301
update best: 0.41900
Epoch: 10, Time: 0.01717s, Loss: 1.81520
update best: 0.45833
Epoch: 11, Time: 0.01751s, Loss: 1.78938
update best: 0.49299
[I 2024-01-18 06:37:17,808] Trial 42 finished with value: 0.6830217838287354 and parameters: {'border': 0.987}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:38:17,176] Trial 43 finished with value: 0.6849688291549683 and parameters: {'border': 0.985}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:39:16,353] Trial 44 finished with value: 0.6853582262992859 and parameters: {'border': 0.994}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:40:15,357] Trial 45 finished with value: 0.6651090383529663 and parameters: {'border': 0.966}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 12, Time: 0.01684s, Loss: 1.75814
update best: 0.52414
Epoch: 13, Time: 0.01516s, Loss: 1.72791
update best: 0.54790
Epoch: 14, Time: 0.01702s, Loss: 1.70101
update best: 0.56425
Epoch: 15, Time: 0.01679s, Loss: 1.66413
update best: 0.57555
Epoch: 16, Time: 0.01702s, Loss: 1.62725
update best: 0.59073
Epoch: 17, Time: 0.01659s, Loss: 1.59247
update best: 0.61643
Epoch: 18, Time: 0.01545s, Loss: 1.55481
update best: 0.63240
Epoch: 19, Time: 0.01713s, Loss: 1.51861
update best: 0.64486
Epoch: 20, Time: 0.01736s, Loss: 1.46778
update best: 0.65771
Epoch: 21, Time: 0.01704s, Loss: 1.42742
update best: 0.65849
Epoch: 22, Time: 0.01868s, Loss: 1.38236
update best: 0.66783
Epoch: 23, Time: 0.01664s, Loss: 1.33881
update best: 0.67134
Epoch: 24, Time: 0.01542s, Loss: 1.29973
update best: 0.67718
Epoch: 25, Time: 0.01686s, Loss: 1.25105
update best: 0.68030
Epoch: 26, Time: 0.01717s, Loss: 1.21320
Epoch: 27, Time: 0.01817s, Loss: 1.16960
update best: 0.68302
Epoch: 28, Time: 0.01699s, Loss: 1.13380
Epoch: 29, Time: 0.01576s, Loss: 1.10606

train finished!
best val: 0.68302
test...
final result: epoch: 27
{'accuracy': 0.6830217838287354, 'f1_score': 0.6580493410678123, 'f1_score -> average@micro': 0.6830218068535826}
Hypergraph(num_v=2708, num_e=1274)
Epoch: 0, Time: 0.03396s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.02026s, Loss: 1.94053
update best: 0.35787
Epoch: 2, Time: 0.02299s, Loss: 1.93369
Epoch: 3, Time: 0.01978s, Loss: 1.92571
Epoch: 4, Time: 0.02122s, Loss: 1.91552
Epoch: 5, Time: 0.02115s, Loss: 1.90279
Epoch: 6, Time: 0.02305s, Loss: 1.88936
Epoch: 7, Time: 0.01936s, Loss: 1.87385
Epoch: 8, Time: 0.01900s, Loss: 1.85672
update best: 0.38279
Epoch: 9, Time: 0.02286s, Loss: 1.83579
update best: 0.40810
Epoch: 10, Time: 0.01704s, Loss: 1.81825
update best: 0.44431
Epoch: 11, Time: 0.02248s, Loss: 1.79322
update best: 0.47508
Epoch: 12, Time: 0.01958s, Loss: 1.76261
update best: 0.51324
Epoch: 13, Time: 0.02301s, Loss: 1.73314
update best: 0.54128
Epoch: 14, Time: 0.02075s, Loss: 1.70659
update best: 0.55802
Epoch: 15, Time: 0.02145s, Loss: 1.67099
update best: 0.56698
Epoch: 16, Time: 0.01907s, Loss: 1.63474
update best: 0.57516
Epoch: 17, Time: 0.02303s, Loss: 1.60033
update best: 0.59852
Epoch: 18, Time: 0.02049s, Loss: 1.56347
update best: 0.62305
Epoch: 19, Time: 0.02189s, Loss: 1.52661
update best: 0.63512
Epoch: 20, Time: 0.01906s, Loss: 1.47767
update best: 0.64642
Epoch: 21, Time: 0.01917s, Loss: 1.43740
update best: 0.65537
Epoch: 22, Time: 0.01830s, Loss: 1.39440
update best: 0.66472
Epoch: 23, Time: 0.02187s, Loss: 1.34836
update best: 0.67017
Epoch: 24, Time: 0.01925s, Loss: 1.31151
update best: 0.67562
Epoch: 25, Time: 0.01999s, Loss: 1.26169
update best: 0.67874
Epoch: 26, Time: 0.01716s, Loss: 1.22363
update best: 0.68107
Epoch: 27, Time: 0.02018s, Loss: 1.18038
update best: 0.68497
Epoch: 28, Time: 0.02012s, Loss: 1.14599
Epoch: 29, Time: 0.01998s, Loss: 1.11687

train finished!
best val: 0.68497
test...
final result: epoch: 27
{'accuracy': 0.6849688291549683, 'f1_score': 0.6616746092396986, 'f1_score -> average@micro': 0.6849688473520249}
Hypergraph(num_v=2708, num_e=1060)
Epoch: 0, Time: 0.02812s, Loss: 1.94653
update best: 0.12188
Epoch: 1, Time: 0.01962s, Loss: 1.94055
update best: 0.35319
Epoch: 2, Time: 0.01940s, Loss: 1.93342
Epoch: 3, Time: 0.02007s, Loss: 1.92514
Epoch: 4, Time: 0.01908s, Loss: 1.91444
Epoch: 5, Time: 0.02121s, Loss: 1.90140
Epoch: 6, Time: 0.01641s, Loss: 1.88764
Epoch: 7, Time: 0.01546s, Loss: 1.87198
update best: 0.36215
Epoch: 8, Time: 0.01632s, Loss: 1.85344
update best: 0.39798
Epoch: 9, Time: 0.01670s, Loss: 1.83194
update best: 0.42913
Epoch: 10, Time: 0.01448s, Loss: 1.81350
update best: 0.47002
Epoch: 11, Time: 0.01652s, Loss: 1.78776
update best: 0.51363
Epoch: 12, Time: 0.01693s, Loss: 1.75692
update best: 0.53816
Epoch: 13, Time: 0.01699s, Loss: 1.72604
update best: 0.55880
Epoch: 14, Time: 0.01748s, Loss: 1.69900
update best: 0.56659
Epoch: 15, Time: 0.01652s, Loss: 1.66267
update best: 0.57827
Epoch: 16, Time: 0.01548s, Loss: 1.62586
update best: 0.58411
Epoch: 17, Time: 0.01709s, Loss: 1.59031
update best: 0.60475
Epoch: 18, Time: 0.01643s, Loss: 1.55297
update best: 0.62695
Epoch: 19, Time: 0.01605s, Loss: 1.51509
update best: 0.64174
Epoch: 20, Time: 0.01569s, Loss: 1.46442
update best: 0.65265
Epoch: 21, Time: 0.01728s, Loss: 1.42304
update best: 0.65927
Epoch: 22, Time: 0.01603s, Loss: 1.38101
update best: 0.66783
Epoch: 23, Time: 0.01527s, Loss: 1.33465
update best: 0.67173
Epoch: 24, Time: 0.02147s, Loss: 1.29590
update best: 0.67407
Epoch: 25, Time: 0.01719s, Loss: 1.24604
update best: 0.67835
Epoch: 26, Time: 0.01978s, Loss: 1.20626
Epoch: 27, Time: 0.02146s, Loss: 1.16624
update best: 0.68185
Epoch: 28, Time: 0.01661s, Loss: 1.12636
update best: 0.68536
Epoch: 29, Time: 0.01673s, Loss: 1.09677

train finished!
best val: 0.68536
test...
final result: epoch: 28
{'accuracy': 0.6853582262992859, 'f1_score': 0.6605734854940827, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=2137)
Epoch: 0, Time: 0.04090s, Loss: 1.94650
update best: 0.12150
Epoch: 1, Time: 0.02322s, Loss: 1.94133
update best: 0.30880
Epoch: 2, Time: 0.02266s, Loss: 1.93490
Epoch: 3, Time: 0.02226s, Loss: 1.92794
Epoch: 4, Time: 0.02182s, Loss: 1.91870
Epoch: 5, Time: 0.02557s, Loss: 1.90707
update best: 0.31659
Epoch: 6, Time: 0.02213s, Loss: 1.89550
update best: 0.32399
Epoch: 7, Time: 0.02311s, Loss: 1.88071
update best: 0.35202
Epoch: 8, Time: 0.02229s, Loss: 1.86443
update best: 0.38668
Epoch: 9, Time: 0.02284s, Loss: 1.84447
update best: 0.42368
Epoch: 10, Time: 0.02562s, Loss: 1.82889
update best: 0.47118
Epoch: 11, Time: 0.02187s, Loss: 1.80624
update best: 0.49688
Epoch: 12, Time: 0.02509s, Loss: 1.77829
update best: 0.52220
Epoch: 13, Time: 0.02325s, Loss: 1.74926
update best: 0.55179
Epoch: 14, Time: 0.02363s, Loss: 1.72470
update best: 0.56581
Epoch: 15, Time: 0.02183s, Loss: 1.69095
update best: 0.57477
Epoch: 16, Time: 0.02176s, Loss: 1.65964
update best: 0.59930
Epoch: 17, Time: 0.02158s, Loss: 1.63013
update best: 0.62422
Epoch: 18, Time: 0.02297s, Loss: 1.59201
update best: 0.64213
Epoch: 19, Time: 0.02314s, Loss: 1.56143
update best: 0.64642
Epoch: 20, Time: 0.02161s, Loss: 1.51333
update best: 0.64836
Epoch: 21, Time: 0.02288s, Loss: 1.47738
update best: 0.64914
Epoch: 22, Time: 0.02168s, Loss: 1.43957
update best: 0.65265
Epoch: 23, Time: 0.02312s, Loss: 1.39637
update best: 0.65576
Epoch: 24, Time: 0.02154s, Loss: 1.35896
update best: 0.66005
Epoch: 25, Time: 0.02202s, Loss: 1.31631
update best: 0.66199
Epoch: 26, Time: 0.02170s, Loss: 1.27971
update best: 0.66355
Epoch: 27, Time: 0.02147s, Loss: 1.23855
Epoch: 28, Time: 0.02314s, Loss: 1.20613
Epoch: 29, Time: 0.02131s, Loss: 1.17949
update best: 0.66511

train finished!
best val: 0.66511
test...
final result: epoch: 29
{'accuracy': 0.6651090383529663, 'f1_score': 0.6440370520687155, 'f1_score -> average@micro': 0.6651090342679128}
Hypergraph(num_v=2708, num_e=1159)
Epoch: 0, Time: 0.03215s, Loss: 1.94661
update best: 0.12188
Epoch: 1, Time: 0.02078s, Loss: 1.94038
update best: 0.34151
Epoch: 2, Time: 0.01945s, Loss: 1.93350
Epoch: 3, Time: 0.01988s, Loss: 1.92534
Epoch: 4, Time: 0.01987s, Loss: 1.91478
Epoch: 5, Time: 0.01992s, Loss: 1.90180
Epoch: 6, Time: 0.01978s, Loss: 1.88834
Epoch: 7, Time: 0.01987s, Loss: 1.87205
update best: 0.34696
Epoch: 8, Time: 0.01926s, Loss: 1.85443
update best: 0.37305
Epoch: 9, Time: 0.01931s, Loss: 1.83362
update best: 0.40498
Epoch: 10, Time: 0.01916s, Loss: 1.81586
update best: 0.44393
Epoch: 11, Time: 0.01920s, Loss: 1.79077
update best: 0.47352
Epoch: 12, Time: 0.01730s, Loss: 1.76051
update best: 0.51324
Epoch: 13, Time: 0.01923s, Loss: 1.72942
update best: 0.54089
Epoch: 14, Time: 0.01931s, Loss: 1.70333
update best: 0.55491
Epoch: 15, Time: 0.01925s, Loss: 1.66653
update best: 0.57243
Epoch: 16, Time: 0.01963s, Loss: 1.63049
update best: 0.58450
Epoch: 17, Time: 0.01973s, Loss: 1.59662
update best: 0.60164
Epoch: 18, Time: 0.01858s, Loss: 1.55931
update best: 0.62188
Epoch: 19, Time: 0.01932s, Loss: 1.52301
update best: 0.63240
[I 2024-01-18 06:41:14,565] Trial 46 finished with value: 0.6845794320106506 and parameters: {'border': 0.989}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:42:14,013] Trial 47 finished with value: 0.6861370801925659 and parameters: {'border': 1.0}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:43:13,629] Trial 48 finished with value: 0.6799065470695496 and parameters: {'border': 0.978}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:44:13,009] Trial 49 finished with value: 0.6873052716255188 and parameters: {'border': 0.998}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 20, Time: 0.01936s, Loss: 1.47269
update best: 0.64252
Epoch: 21, Time: 0.01919s, Loss: 1.43253
update best: 0.65265
Epoch: 22, Time: 0.01919s, Loss: 1.38843
update best: 0.66121
Epoch: 23, Time: 0.01728s, Loss: 1.34594
update best: 0.66628
Epoch: 24, Time: 0.01728s, Loss: 1.30662
Epoch: 25, Time: 0.01985s, Loss: 1.25731
update best: 0.67212
Epoch: 26, Time: 0.01708s, Loss: 1.21655
update best: 0.67407
Epoch: 27, Time: 0.01597s, Loss: 1.17788
update best: 0.68380
Epoch: 28, Time: 0.02038s, Loss: 1.13940
update best: 0.68458
Epoch: 29, Time: 0.01578s, Loss: 1.11000

train finished!
best val: 0.68458
test...
final result: epoch: 28
{'accuracy': 0.6845794320106506, 'f1_score': 0.6599619408517492, 'f1_score -> average@micro': 0.6845794392523364}
Hypergraph(num_v=2708, num_e=971)
Epoch: 0, Time: 0.03077s, Loss: 1.94641
update best: 0.12188
Epoch: 1, Time: 0.01937s, Loss: 1.94033
update best: 0.34307
Epoch: 2, Time: 0.01939s, Loss: 1.93312
Epoch: 3, Time: 0.01783s, Loss: 1.92471
Epoch: 4, Time: 0.02011s, Loss: 1.91394
Epoch: 5, Time: 0.01998s, Loss: 1.90033
Epoch: 6, Time: 0.02187s, Loss: 1.88647
Epoch: 7, Time: 0.01866s, Loss: 1.87034
update best: 0.36643
Epoch: 8, Time: 0.01691s, Loss: 1.85130
update best: 0.39330
Epoch: 9, Time: 0.02000s, Loss: 1.82924
update best: 0.42718
Epoch: 10, Time: 0.01648s, Loss: 1.81064
update best: 0.46379
Epoch: 11, Time: 0.01898s, Loss: 1.78458
update best: 0.50896
Epoch: 12, Time: 0.02347s, Loss: 1.75335
update best: 0.53388
Epoch: 13, Time: 0.01654s, Loss: 1.72121
update best: 0.55452
Epoch: 14, Time: 0.01620s, Loss: 1.69312
update best: 0.56581
Epoch: 15, Time: 0.01554s, Loss: 1.65749
update best: 0.57710
Epoch: 16, Time: 0.01561s, Loss: 1.61835
update best: 0.58879
Epoch: 17, Time: 0.01539s, Loss: 1.58219
update best: 0.61643
Epoch: 18, Time: 0.01455s, Loss: 1.54515
update best: 0.63435
Epoch: 19, Time: 0.01539s, Loss: 1.50626
update best: 0.64681
Epoch: 20, Time: 0.01395s, Loss: 1.45349
update best: 0.65927
Epoch: 21, Time: 0.01458s, Loss: 1.41288
Epoch: 22, Time: 0.01410s, Loss: 1.37024
update best: 0.66160
Epoch: 23, Time: 0.01539s, Loss: 1.32470
update best: 0.66628
Epoch: 24, Time: 0.01387s, Loss: 1.28567
update best: 0.67484
Epoch: 25, Time: 0.01558s, Loss: 1.23676
update best: 0.67796
Epoch: 26, Time: 0.01806s, Loss: 1.19497
update best: 0.67874
Epoch: 27, Time: 0.01395s, Loss: 1.15239
update best: 0.68146
Epoch: 28, Time: 0.01453s, Loss: 1.11260
update best: 0.68263
Epoch: 29, Time: 0.01411s, Loss: 1.08225
update best: 0.68614

train finished!
best val: 0.68614
test...
final result: epoch: 29
{'accuracy': 0.6861370801925659, 'f1_score': 0.6645933831713843, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1518)
Epoch: 0, Time: 0.03665s, Loss: 1.94655
update best: 0.12188
Epoch: 1, Time: 0.02176s, Loss: 1.94092
update best: 0.36020
Epoch: 2, Time: 0.02002s, Loss: 1.93399
Epoch: 3, Time: 0.02154s, Loss: 1.92623
Epoch: 4, Time: 0.02079s, Loss: 1.91640
Epoch: 5, Time: 0.02322s, Loss: 1.90343
Epoch: 6, Time: 0.01963s, Loss: 1.89057
Epoch: 7, Time: 0.02077s, Loss: 1.87525
update best: 0.37422
Epoch: 8, Time: 0.01943s, Loss: 1.85677
update best: 0.40810
Epoch: 9, Time: 0.02338s, Loss: 1.83579
update best: 0.44393
Epoch: 10, Time: 0.01916s, Loss: 1.81894
update best: 0.48170
Epoch: 11, Time: 0.02222s, Loss: 1.79287
update best: 0.52259
Epoch: 12, Time: 0.02122s, Loss: 1.76311
update best: 0.55062
Epoch: 13, Time: 0.01992s, Loss: 1.73231
update best: 0.56698
Epoch: 14, Time: 0.02153s, Loss: 1.70518
update best: 0.57360
Epoch: 15, Time: 0.02120s, Loss: 1.66868
update best: 0.58294
Epoch: 16, Time: 0.02102s, Loss: 1.63414
update best: 0.61332
Epoch: 17, Time: 0.01835s, Loss: 1.59931
update best: 0.63123
Epoch: 18, Time: 0.02094s, Loss: 1.56307
update best: 0.64486
Epoch: 19, Time: 0.02152s, Loss: 1.52525
update best: 0.65226
Epoch: 20, Time: 0.02134s, Loss: 1.47840
update best: 0.66394
Epoch: 21, Time: 0.02081s, Loss: 1.43667
update best: 0.66511
Epoch: 22, Time: 0.01840s, Loss: 1.39666
update best: 0.67134
Epoch: 23, Time: 0.02110s, Loss: 1.34770
update best: 0.67290
Epoch: 24, Time: 0.02148s, Loss: 1.30948
Epoch: 25, Time: 0.02029s, Loss: 1.26287
update best: 0.67718
Epoch: 26, Time: 0.01971s, Loss: 1.22200
update best: 0.67991
Epoch: 27, Time: 0.02161s, Loss: 1.18189
Epoch: 28, Time: 0.02107s, Loss: 1.14405
Epoch: 29, Time: 0.02160s, Loss: 1.11817

train finished!
best val: 0.67991
test...
final result: epoch: 26
{'accuracy': 0.6799065470695496, 'f1_score': 0.6572993836577421, 'f1_score -> average@micro': 0.6799065420560748}
Hypergraph(num_v=2708, num_e=999)
Epoch: 0, Time: 0.02557s, Loss: 1.94644
update best: 0.12188
Epoch: 1, Time: 0.01818s, Loss: 1.94041
update best: 0.33762
Epoch: 2, Time: 0.01777s, Loss: 1.93325
Epoch: 3, Time: 0.02018s, Loss: 1.92476
Epoch: 4, Time: 0.02088s, Loss: 1.91421
Epoch: 5, Time: 0.02735s, Loss: 1.90030
Epoch: 6, Time: 0.02066s, Loss: 1.88649
Epoch: 7, Time: 0.01897s, Loss: 1.87042
update best: 0.36682
Epoch: 8, Time: 0.02044s, Loss: 1.85123
update best: 0.39798
Epoch: 9, Time: 0.02178s, Loss: 1.82972
update best: 0.43575
Epoch: 10, Time: 0.01911s, Loss: 1.81020
update best: 0.47002
Epoch: 11, Time: 0.02339s, Loss: 1.78358
update best: 0.50818
Epoch: 12, Time: 0.02212s, Loss: 1.75346
update best: 0.53583
Epoch: 13, Time: 0.02075s, Loss: 1.72126
update best: 0.55530
Epoch: 14, Time: 0.01970s, Loss: 1.69239
update best: 0.56931
Epoch: 15, Time: 0.02781s, Loss: 1.65625
update best: 0.57944
Epoch: 16, Time: 0.01953s, Loss: 1.61695
update best: 0.60047
Epoch: 17, Time: 0.01729s, Loss: 1.58092
update best: 0.62422
Epoch: 18, Time: 0.01885s, Loss: 1.54277
update best: 0.63785
Epoch: 19, Time: 0.01633s, Loss: 1.50485
update best: 0.65187
Epoch: 20, Time: 0.01616s, Loss: 1.45146
update best: 0.65382
Epoch: 21, Time: 0.01634s, Loss: 1.41001
update best: 0.65966
Epoch: 22, Time: 0.01425s, Loss: 1.36709
update best: 0.66550
Epoch: 23, Time: 0.01442s, Loss: 1.32046
update best: 0.67212
Epoch: 24, Time: 0.01629s, Loss: 1.28129
update best: 0.67445
Epoch: 25, Time: 0.02102s, Loss: 1.23135
update best: 0.68107
Epoch: 26, Time: 0.02602s, Loss: 1.18946
Epoch: 27, Time: 0.02190s, Loss: 1.14818
update best: 0.68497
Epoch: 28, Time: 0.02145s, Loss: 1.10696
update best: 0.68731
Epoch: 29, Time: 0.01778s, Loss: 1.07705

train finished!
best val: 0.68731
test...
final result: epoch: 28
{'accuracy': 0.6873052716255188, 'f1_score': 0.666859853470488, 'f1_score -> average@micro': 0.6873052959501558}
Hypergraph(num_v=2708, num_e=1118)
Epoch: 0, Time: 0.03163s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.01981s, Loss: 1.94026
update best: 0.30958
Epoch: 2, Time: 0.02077s, Loss: 1.93320
Epoch: 3, Time: 0.01943s, Loss: 1.92488
Epoch: 4, Time: 0.02060s, Loss: 1.91419
Epoch: 5, Time: 0.01938s, Loss: 1.90132
Epoch: 6, Time: 0.02001s, Loss: 1.88789
update best: 0.31464
Epoch: 7, Time: 0.02021s, Loss: 1.87199
update best: 0.33333
Epoch: 8, Time: 0.02505s, Loss: 1.85388
update best: 0.36682
Epoch: 9, Time: 0.01787s, Loss: 1.83219
update best: 0.40265
Epoch: 10, Time: 0.01706s, Loss: 1.81469
update best: 0.44198
Epoch: 11, Time: 0.02112s, Loss: 1.78939
update best: 0.48676
Epoch: 12, Time: 0.02004s, Loss: 1.75848
update best: 0.52298
Epoch: 13, Time: 0.02727s, Loss: 1.72744
update best: 0.54283
Epoch: 14, Time: 0.01948s, Loss: 1.70144
update best: 0.55724
Epoch: 15, Time: 0.01983s, Loss: 1.66515
update best: 0.57048
Epoch: 16, Time: 0.02189s, Loss: 1.62918
update best: 0.57983
Epoch: 17, Time: 0.01811s, Loss: 1.59392
update best: 0.58684
Epoch: 18, Time: 0.01937s, Loss: 1.55869
update best: 0.60942
Epoch: 19, Time: 0.01917s, Loss: 1.51977
update best: 0.62928
Epoch: 20, Time: 0.01942s, Loss: 1.46942
update best: 0.64681
Epoch: 21, Time: 0.01965s, Loss: 1.43009
update best: 0.65343
Epoch: 22, Time: 0.01953s, Loss: 1.38646
update best: 0.65693
Epoch: 23, Time: 0.01959s, Loss: 1.34403
update best: 0.66394
Epoch: 24, Time: 0.01956s, Loss: 1.30409
update best: 0.66861
Epoch: 25, Time: 0.01940s, Loss: 1.25433
update best: 0.67329
Epoch: 26, Time: 0.01932s, Loss: 1.21391
update best: 0.68030
Epoch: 27, Time: 0.01953s, Loss: 1.17483
update best: 0.68263
[I 2024-01-18 06:45:12,243] Trial 50 finished with value: 0.6865264773368835 and parameters: {'border': 0.991}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:46:11,440] Trial 51 finished with value: 0.6876947283744812 and parameters: {'border': 0.986}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:47:10,793] Trial 52 finished with value: 0.6861370801925659 and parameters: {'border': 0.983}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:48:09,726] Trial 53 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:49:09,312] Trial 54 finished with value: 0.6830217838287354 and parameters: {'border': 0.987}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 28, Time: 0.01954s, Loss: 1.13489
update best: 0.68653
Epoch: 29, Time: 0.01845s, Loss: 1.10596

train finished!
best val: 0.68653
test...
final result: epoch: 28
{'accuracy': 0.6865264773368835, 'f1_score': 0.6623810931193944, 'f1_score -> average@micro': 0.6865264797507789}
Hypergraph(num_v=2708, num_e=1237)
Epoch: 0, Time: 0.03664s, Loss: 1.94663
update best: 0.12188
Epoch: 1, Time: 0.02091s, Loss: 1.94043
update best: 0.32749
Epoch: 2, Time: 0.01951s, Loss: 1.93342
Epoch: 3, Time: 0.02106s, Loss: 1.92501
Epoch: 4, Time: 0.02087s, Loss: 1.91462
Epoch: 5, Time: 0.01938s, Loss: 1.90154
Epoch: 6, Time: 0.02177s, Loss: 1.88776
Epoch: 7, Time: 0.02082s, Loss: 1.87184
update best: 0.33995
Epoch: 8, Time: 0.02121s, Loss: 1.85383
update best: 0.37656
Epoch: 9, Time: 0.02445s, Loss: 1.83192
update best: 0.40537
Epoch: 10, Time: 0.01808s, Loss: 1.81376
update best: 0.44704
Epoch: 11, Time: 0.01945s, Loss: 1.78845
update best: 0.47858
Epoch: 12, Time: 0.02103s, Loss: 1.75667
update best: 0.52181
Epoch: 13, Time: 0.02043s, Loss: 1.72660
update best: 0.55023
Epoch: 14, Time: 0.02128s, Loss: 1.69932
update best: 0.56659
Epoch: 15, Time: 0.02014s, Loss: 1.66167
update best: 0.57204
Epoch: 16, Time: 0.02106s, Loss: 1.62382
update best: 0.58528
Epoch: 17, Time: 0.01832s, Loss: 1.58996
update best: 0.60748
Epoch: 18, Time: 0.01926s, Loss: 1.55154
update best: 0.63123
Epoch: 19, Time: 0.01928s, Loss: 1.51352
update best: 0.64291
Epoch: 20, Time: 0.01905s, Loss: 1.46440
update best: 0.65343
Epoch: 21, Time: 0.01930s, Loss: 1.42280
update best: 0.66160
Epoch: 22, Time: 0.01926s, Loss: 1.37718
update best: 0.67017
Epoch: 23, Time: 0.01912s, Loss: 1.33420
update best: 0.67407
Epoch: 24, Time: 0.01914s, Loss: 1.29331
update best: 0.67874
Epoch: 25, Time: 0.01917s, Loss: 1.24430
update best: 0.68107
Epoch: 26, Time: 0.01919s, Loss: 1.20621
update best: 0.68185
Epoch: 27, Time: 0.01922s, Loss: 1.16259
update best: 0.68458
Epoch: 28, Time: 0.02064s, Loss: 1.12618
update best: 0.68769
Epoch: 29, Time: 0.02179s, Loss: 1.09703

train finished!
best val: 0.68769
test...
final result: epoch: 28
{'accuracy': 0.6876947283744812, 'f1_score': 0.6652098366111925, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=1328)
Epoch: 0, Time: 0.03426s, Loss: 1.94657
update best: 0.12188
Epoch: 1, Time: 0.01994s, Loss: 1.94050
update best: 0.33645
Epoch: 2, Time: 0.01923s, Loss: 1.93343
Epoch: 3, Time: 0.02265s, Loss: 1.92494
Epoch: 4, Time: 0.02320s, Loss: 1.91490
Epoch: 5, Time: 0.02200s, Loss: 1.90206
Epoch: 6, Time: 0.01990s, Loss: 1.88843
Epoch: 7, Time: 0.02083s, Loss: 1.87251
update best: 0.34735
Epoch: 8, Time: 0.01958s, Loss: 1.85484
update best: 0.37266
Epoch: 9, Time: 0.02331s, Loss: 1.83434
update best: 0.40226
Epoch: 10, Time: 0.01946s, Loss: 1.81571
update best: 0.44354
Epoch: 11, Time: 0.02042s, Loss: 1.79140
update best: 0.47079
Epoch: 12, Time: 0.01992s, Loss: 1.76039
update best: 0.50701
Epoch: 13, Time: 0.02042s, Loss: 1.73148
update best: 0.53154
Epoch: 14, Time: 0.01910s, Loss: 1.70502
update best: 0.55023
Epoch: 15, Time: 0.01976s, Loss: 1.66855
update best: 0.57165
Epoch: 16, Time: 0.01958s, Loss: 1.63293
update best: 0.57905
Epoch: 17, Time: 0.01800s, Loss: 1.59825
update best: 0.59813
Epoch: 18, Time: 0.01966s, Loss: 1.56177
update best: 0.62266
Epoch: 19, Time: 0.02046s, Loss: 1.52408
update best: 0.63863
Epoch: 20, Time: 0.01647s, Loss: 1.47797
update best: 0.64369
Epoch: 21, Time: 0.01983s, Loss: 1.43491
update best: 0.65343
Epoch: 22, Time: 0.01974s, Loss: 1.39254
update best: 0.66316
Epoch: 23, Time: 0.01996s, Loss: 1.34772
update best: 0.66861
Epoch: 24, Time: 0.01935s, Loss: 1.30814
update best: 0.67329
Epoch: 25, Time: 0.01708s, Loss: 1.26152
update best: 0.67757
Epoch: 26, Time: 0.01985s, Loss: 1.22379
update best: 0.68069
Epoch: 27, Time: 0.01877s, Loss: 1.17742
update best: 0.68536
Epoch: 28, Time: 0.01840s, Loss: 1.14275
update best: 0.68614
Epoch: 29, Time: 0.02005s, Loss: 1.11249

train finished!
best val: 0.68614
test...
final result: epoch: 28
{'accuracy': 0.6861370801925659, 'f1_score': 0.6633361749673746, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.02707s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.01865s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.01987s, Loss: 1.93352
Epoch: 3, Time: 0.01848s, Loss: 1.92512
Epoch: 4, Time: 0.02117s, Loss: 1.91455
Epoch: 5, Time: 0.01564s, Loss: 1.90150
Epoch: 6, Time: 0.01996s, Loss: 1.88778
Epoch: 7, Time: 0.01901s, Loss: 1.87197
Epoch: 8, Time: 0.01985s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.02045s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.01931s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.01748s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.01964s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.01920s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.01686s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.01702s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.02180s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.01979s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.01970s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.01949s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.01927s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.01936s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.02030s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.01953s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.01922s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.01958s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.01966s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.01871s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.01936s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.01933s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1206)
Epoch: 0, Time: 0.03202s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.01859s, Loss: 1.94051
update best: 0.37383
Epoch: 2, Time: 0.02263s, Loss: 1.93361
Epoch: 3, Time: 0.02025s, Loss: 1.92531
Epoch: 4, Time: 0.02307s, Loss: 1.91493
Epoch: 5, Time: 0.02006s, Loss: 1.90201
Epoch: 6, Time: 0.02298s, Loss: 1.88820
Epoch: 7, Time: 0.02050s, Loss: 1.87212
Epoch: 8, Time: 0.01977s, Loss: 1.85420
update best: 0.39330
Epoch: 9, Time: 0.02308s, Loss: 1.83301
update best: 0.41900
Epoch: 10, Time: 0.01920s, Loss: 1.81520
update best: 0.45833
Epoch: 11, Time: 0.01912s, Loss: 1.78938
update best: 0.49299
Epoch: 12, Time: 0.01905s, Loss: 1.75814
update best: 0.52414
Epoch: 13, Time: 0.02157s, Loss: 1.72791
update best: 0.54790
Epoch: 14, Time: 0.01872s, Loss: 1.70101
update best: 0.56425
Epoch: 15, Time: 0.01914s, Loss: 1.66413
update best: 0.57555
Epoch: 16, Time: 0.02040s, Loss: 1.62725
update best: 0.59073
Epoch: 17, Time: 0.02016s, Loss: 1.59247
update best: 0.61643
Epoch: 18, Time: 0.02113s, Loss: 1.55481
update best: 0.63240
Epoch: 19, Time: 0.02016s, Loss: 1.51861
update best: 0.64486
Epoch: 20, Time: 0.02274s, Loss: 1.46778
update best: 0.65771
Epoch: 21, Time: 0.02062s, Loss: 1.42742
update best: 0.65849
Epoch: 22, Time: 0.02002s, Loss: 1.38236
update best: 0.66783
Epoch: 23, Time: 0.02055s, Loss: 1.33881
update best: 0.67134
Epoch: 24, Time: 0.01926s, Loss: 1.29973
update best: 0.67718
Epoch: 25, Time: 0.01925s, Loss: 1.25105
update best: 0.68030
Epoch: 26, Time: 0.02132s, Loss: 1.21320
Epoch: 27, Time: 0.02190s, Loss: 1.16960
update best: 0.68302
Epoch: 28, Time: 0.02025s, Loss: 1.13380
Epoch: 29, Time: 0.01884s, Loss: 1.10606

train finished!
best val: 0.68302
test...
final result: epoch: 27
{'accuracy': 0.6830217838287354, 'f1_score': 0.6580493410678123, 'f1_score -> average@micro': 0.6830218068535826}
Hypergraph(num_v=2708, num_e=1450)
Epoch: 0, Time: 0.03636s, Loss: 1.94659
update best: 0.12188
Epoch: 1, Time: 0.02168s, Loss: 1.94080
update best: 0.31854
Epoch: 2, Time: 0.02145s, Loss: 1.93404
[I 2024-01-18 06:50:08,411] Trial 55 finished with value: 0.6845794320106506 and parameters: {'border': 0.98}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:51:07,743] Trial 56 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:52:07,583] Trial 57 finished with value: 0.6853582262992859 and parameters: {'border': 0.993}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:53:07,333] Trial 58 finished with value: 0.6845794320106506 and parameters: {'border': 0.989}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 3, Time: 0.02065s, Loss: 1.92595
Epoch: 4, Time: 0.02299s, Loss: 1.91588
Epoch: 5, Time: 0.01658s, Loss: 1.90316
update best: 0.32048
Epoch: 6, Time: 0.01704s, Loss: 1.88998
update best: 0.32593
Epoch: 7, Time: 0.01685s, Loss: 1.87500
update best: 0.35358
Epoch: 8, Time: 0.01684s, Loss: 1.85614
update best: 0.39252
Epoch: 9, Time: 0.02240s, Loss: 1.83540
update best: 0.42835
Epoch: 10, Time: 0.01970s, Loss: 1.81852
update best: 0.47858
Epoch: 11, Time: 0.01592s, Loss: 1.79240
update best: 0.52259
Epoch: 12, Time: 0.01616s, Loss: 1.76248
update best: 0.55335
Epoch: 13, Time: 0.01793s, Loss: 1.73171
update best: 0.57048
Epoch: 14, Time: 0.01730s, Loss: 1.70520
update best: 0.57632
Epoch: 15, Time: 0.01692s, Loss: 1.66884
update best: 0.58178
Epoch: 16, Time: 0.01678s, Loss: 1.63496
update best: 0.59385
Epoch: 17, Time: 0.01946s, Loss: 1.59967
update best: 0.62617
Epoch: 18, Time: 0.01832s, Loss: 1.56241
update best: 0.64486
Epoch: 19, Time: 0.01669s, Loss: 1.52472
update best: 0.65382
Epoch: 20, Time: 0.01677s, Loss: 1.47785
update best: 0.65693
Epoch: 21, Time: 0.01591s, Loss: 1.43605
update best: 0.66706
Epoch: 22, Time: 0.01538s, Loss: 1.39455
update best: 0.66900
Epoch: 23, Time: 0.01611s, Loss: 1.34838
update best: 0.67484
Epoch: 24, Time: 0.01666s, Loss: 1.30929
update best: 0.67796
Epoch: 25, Time: 0.01603s, Loss: 1.26239
update best: 0.67835
Epoch: 26, Time: 0.01612s, Loss: 1.22235
update best: 0.68341
Epoch: 27, Time: 0.01420s, Loss: 1.18059
update best: 0.68458
Epoch: 28, Time: 0.01654s, Loss: 1.14425
Epoch: 29, Time: 0.01462s, Loss: 1.11554

train finished!
best val: 0.68458
test...
final result: epoch: 27
{'accuracy': 0.6845794320106506, 'f1_score': 0.6626837334309369, 'f1_score -> average@micro': 0.6845794392523364}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.03269s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.02126s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.01898s, Loss: 1.93352
Epoch: 3, Time: 0.01998s, Loss: 1.92512
Epoch: 4, Time: 0.01975s, Loss: 1.91455
Epoch: 5, Time: 0.01870s, Loss: 1.90150
Epoch: 6, Time: 0.02057s, Loss: 1.88778
Epoch: 7, Time: 0.02035s, Loss: 1.87197
Epoch: 8, Time: 0.01993s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.01821s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.02012s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.01928s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.01928s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.01916s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.01710s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.01947s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.01936s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.01921s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.01821s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.02015s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.01828s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.01997s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.01939s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.01691s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.01872s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.01945s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.01941s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.02019s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.01851s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.01941s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1077)
Epoch: 0, Time: 0.03288s, Loss: 1.94662
update best: 0.12188
Epoch: 1, Time: 0.01964s, Loss: 1.94047
update best: 0.30530
Epoch: 2, Time: 0.02253s, Loss: 1.93329
Epoch: 3, Time: 0.02298s, Loss: 1.92520
Epoch: 4, Time: 0.02153s, Loss: 1.91455
update best: 0.30763
Epoch: 5, Time: 0.02297s, Loss: 1.90177
update best: 0.31153
Epoch: 6, Time: 0.02694s, Loss: 1.88815
update best: 0.31970
Epoch: 7, Time: 0.02306s, Loss: 1.87213
update best: 0.33139
Epoch: 8, Time: 0.02372s, Loss: 1.85390
update best: 0.36410
Epoch: 9, Time: 0.02246s, Loss: 1.83247
update best: 0.40966
Epoch: 10, Time: 0.02036s, Loss: 1.81453
update best: 0.45016
Epoch: 11, Time: 0.02171s, Loss: 1.78885
update best: 0.49611
Epoch: 12, Time: 0.02286s, Loss: 1.75798
update best: 0.53310
Epoch: 13, Time: 0.02306s, Loss: 1.72721
update best: 0.55023
Epoch: 14, Time: 0.02024s, Loss: 1.70015
update best: 0.56503
Epoch: 15, Time: 0.02181s, Loss: 1.66414
update best: 0.57126
Epoch: 16, Time: 0.02234s, Loss: 1.62737
update best: 0.58217
Epoch: 17, Time: 0.02009s, Loss: 1.59241
update best: 0.59930
Epoch: 18, Time: 0.03074s, Loss: 1.55479
update best: 0.62305
Epoch: 19, Time: 0.02430s, Loss: 1.51695
update best: 0.64369
Epoch: 20, Time: 0.02188s, Loss: 1.46607
update best: 0.65265
Epoch: 21, Time: 0.02362s, Loss: 1.42480
update best: 0.65888
Epoch: 22, Time: 0.02080s, Loss: 1.38215
update best: 0.66822
Epoch: 23, Time: 0.02010s, Loss: 1.33711
update best: 0.66939
Epoch: 24, Time: 0.01943s, Loss: 1.29836
update best: 0.67017
Epoch: 25, Time: 0.01923s, Loss: 1.24764
update best: 0.67601
Epoch: 26, Time: 0.01942s, Loss: 1.20658
update best: 0.67952
Epoch: 27, Time: 0.01948s, Loss: 1.16838
update best: 0.68146
Epoch: 28, Time: 0.02340s, Loss: 1.12701
update best: 0.68458
Epoch: 29, Time: 0.02335s, Loss: 1.09775
update best: 0.68536

train finished!
best val: 0.68536
test...
final result: epoch: 29
{'accuracy': 0.6853582262992859, 'f1_score': 0.6636031678896811, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=1159)
Epoch: 0, Time: 0.03434s, Loss: 1.94661
update best: 0.12188
Epoch: 1, Time: 0.02008s, Loss: 1.94038
update best: 0.34151
Epoch: 2, Time: 0.02041s, Loss: 1.93350
Epoch: 3, Time: 0.02248s, Loss: 1.92534
Epoch: 4, Time: 0.02392s, Loss: 1.91478
Epoch: 5, Time: 0.02347s, Loss: 1.90180
Epoch: 6, Time: 0.01994s, Loss: 1.88834
Epoch: 7, Time: 0.02074s, Loss: 1.87205
update best: 0.34696
Epoch: 8, Time: 0.02231s, Loss: 1.85443
update best: 0.37305
Epoch: 9, Time: 0.02095s, Loss: 1.83362
update best: 0.40498
Epoch: 10, Time: 0.02065s, Loss: 1.81586
update best: 0.44393
Epoch: 11, Time: 0.02079s, Loss: 1.79077
update best: 0.47352
Epoch: 12, Time: 0.02543s, Loss: 1.76051
update best: 0.51324
Epoch: 13, Time: 0.01957s, Loss: 1.72942
update best: 0.54089
Epoch: 14, Time: 0.01812s, Loss: 1.70333
update best: 0.55491
Epoch: 15, Time: 0.01941s, Loss: 1.66653
update best: 0.57243
Epoch: 16, Time: 0.01960s, Loss: 1.63049
update best: 0.58450
Epoch: 17, Time: 0.01883s, Loss: 1.59662
update best: 0.60164
Epoch: 18, Time: 0.01997s, Loss: 1.55931
update best: 0.62188
Epoch: 19, Time: 0.02009s, Loss: 1.52301
update best: 0.63240
Epoch: 20, Time: 0.02054s, Loss: 1.47269
update best: 0.64252
Epoch: 21, Time: 0.01990s, Loss: 1.43253
update best: 0.65265
Epoch: 22, Time: 0.02155s, Loss: 1.38843
update best: 0.66121
Epoch: 23, Time: 0.01920s, Loss: 1.34594
update best: 0.66628
Epoch: 24, Time: 0.02107s, Loss: 1.30662
Epoch: 25, Time: 0.02114s, Loss: 1.25731
update best: 0.67212
Epoch: 26, Time: 0.02160s, Loss: 1.21655
update best: 0.67407
Epoch: 27, Time: 0.02119s, Loss: 1.17788
update best: 0.68380
Epoch: 28, Time: 0.01947s, Loss: 1.13940
update best: 0.68458
Epoch: 29, Time: 0.01855s, Loss: 1.11000

train finished!
best val: 0.68458
test...
final result: epoch: 28
{'accuracy': 0.6845794320106506, 'f1_score': 0.6599619408517492, 'f1_score -> average@micro': 0.6845794392523364}
Hypergraph(num_v=2708, num_e=1118)
Epoch: 0, Time: 0.03255s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.02494s, Loss: 1.94026
update best: 0.30958
Epoch: 2, Time: 0.02306s, Loss: 1.93320
Epoch: 3, Time: 0.02364s, Loss: 1.92488
Epoch: 4, Time: 0.01944s, Loss: 1.91419
Epoch: 5, Time: 0.01914s, Loss: 1.90132
Epoch: 6, Time: 0.01797s, Loss: 1.88789
update best: 0.31464
Epoch: 7, Time: 0.01906s, Loss: 1.87199
update best: 0.33333
Epoch: 8, Time: 0.02065s, Loss: 1.85388
update best: 0.36682
Epoch: 9, Time: 0.02125s, Loss: 1.83219
update best: 0.40265
[I 2024-01-18 06:54:06,876] Trial 59 finished with value: 0.6865264773368835 and parameters: {'border': 0.991}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:55:06,457] Trial 60 finished with value: 0.6830217838287354 and parameters: {'border': 0.982}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:56:05,824] Trial 61 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:57:05,312] Trial 62 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 10, Time: 0.02068s, Loss: 1.81469
update best: 0.44198
Epoch: 11, Time: 0.01934s, Loss: 1.78939
update best: 0.48676
Epoch: 12, Time: 0.02239s, Loss: 1.75848
update best: 0.52298
Epoch: 13, Time: 0.02117s, Loss: 1.72744
update best: 0.54283
Epoch: 14, Time: 0.01907s, Loss: 1.70144
update best: 0.55724
Epoch: 15, Time: 0.01942s, Loss: 1.66515
update best: 0.57048
Epoch: 16, Time: 0.01919s, Loss: 1.62918
update best: 0.57983
Epoch: 17, Time: 0.01805s, Loss: 1.59392
update best: 0.58684
Epoch: 18, Time: 0.01941s, Loss: 1.55869
update best: 0.60942
Epoch: 19, Time: 0.02099s, Loss: 1.51977
update best: 0.62928
Epoch: 20, Time: 0.01961s, Loss: 1.46942
update best: 0.64681
Epoch: 21, Time: 0.01947s, Loss: 1.43009
update best: 0.65343
Epoch: 22, Time: 0.01934s, Loss: 1.38646
update best: 0.65693
Epoch: 23, Time: 0.01960s, Loss: 1.34403
update best: 0.66394
Epoch: 24, Time: 0.01955s, Loss: 1.30409
update best: 0.66861
Epoch: 25, Time: 0.01783s, Loss: 1.25433
update best: 0.67329
Epoch: 26, Time: 0.01889s, Loss: 1.21391
update best: 0.68030
Epoch: 27, Time: 0.01810s, Loss: 1.17483
update best: 0.68263
Epoch: 28, Time: 0.01914s, Loss: 1.13489
update best: 0.68653
Epoch: 29, Time: 0.01940s, Loss: 1.10596

train finished!
best val: 0.68653
test...
final result: epoch: 28
{'accuracy': 0.6865264773368835, 'f1_score': 0.6623810931193944, 'f1_score -> average@micro': 0.6865264797507789}
Hypergraph(num_v=2708, num_e=1369)
Epoch: 0, Time: 0.03516s, Loss: 1.94659
update best: 0.12188
Epoch: 1, Time: 0.01992s, Loss: 1.94061
update best: 0.34696
Epoch: 2, Time: 0.02294s, Loss: 1.93380
Epoch: 3, Time: 0.01953s, Loss: 1.92559
Epoch: 4, Time: 0.01941s, Loss: 1.91548
Epoch: 5, Time: 0.01948s, Loss: 1.90287
Epoch: 6, Time: 0.01947s, Loss: 1.88938
Epoch: 7, Time: 0.02746s, Loss: 1.87374
Epoch: 8, Time: 0.02344s, Loss: 1.85597
update best: 0.37344
Epoch: 9, Time: 0.02208s, Loss: 1.83529
update best: 0.41005
Epoch: 10, Time: 0.02160s, Loss: 1.81693
update best: 0.45561
Epoch: 11, Time: 0.02300s, Loss: 1.79231
update best: 0.49065
Epoch: 12, Time: 0.02242s, Loss: 1.76128
update best: 0.53154
Epoch: 13, Time: 0.02275s, Loss: 1.73176
update best: 0.55452
Epoch: 14, Time: 0.01904s, Loss: 1.70478
update best: 0.56659
Epoch: 15, Time: 0.02134s, Loss: 1.66912
update best: 0.57593
Epoch: 16, Time: 0.02055s, Loss: 1.63398
update best: 0.58178
Epoch: 17, Time: 0.02051s, Loss: 1.59909
update best: 0.59813
Epoch: 18, Time: 0.02106s, Loss: 1.56282
update best: 0.62188
Epoch: 19, Time: 0.02049s, Loss: 1.52441
update best: 0.63746
Epoch: 20, Time: 0.02127s, Loss: 1.47729
update best: 0.64875
Epoch: 21, Time: 0.02290s, Loss: 1.43520
update best: 0.65576
Epoch: 22, Time: 0.02087s, Loss: 1.39300
update best: 0.66316
Epoch: 23, Time: 0.02087s, Loss: 1.34628
update best: 0.67173
Epoch: 24, Time: 0.02058s, Loss: 1.30864
update best: 0.67796
Epoch: 25, Time: 0.02071s, Loss: 1.26108
update best: 0.67835
Epoch: 26, Time: 0.01937s, Loss: 1.22270
update best: 0.67913
Epoch: 27, Time: 0.02276s, Loss: 1.17871
update best: 0.68302
Epoch: 28, Time: 0.02078s, Loss: 1.14430
Epoch: 29, Time: 0.02160s, Loss: 1.11382

train finished!
best val: 0.68302
test...
final result: epoch: 27
{'accuracy': 0.6830217838287354, 'f1_score': 0.6601386848332408, 'f1_score -> average@micro': 0.6830218068535826}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.03473s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.01916s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.02092s, Loss: 1.93352
Epoch: 3, Time: 0.02382s, Loss: 1.92512
Epoch: 4, Time: 0.01951s, Loss: 1.91455
Epoch: 5, Time: 0.02173s, Loss: 1.90150
Epoch: 6, Time: 0.02115s, Loss: 1.88778
Epoch: 7, Time: 0.02512s, Loss: 1.87197
Epoch: 8, Time: 0.02176s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.02654s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.02279s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.01906s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.01926s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.01930s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.02322s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.01938s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.02023s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.02216s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.01944s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.01576s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.01954s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.02041s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.01995s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.02199s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.02012s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.02152s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.01623s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.01954s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.02084s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.02054s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.03213s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.02179s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.02521s, Loss: 1.93352
Epoch: 3, Time: 0.02282s, Loss: 1.92512
Epoch: 4, Time: 0.02138s, Loss: 1.91455
Epoch: 5, Time: 0.02130s, Loss: 1.90150
Epoch: 6, Time: 0.02076s, Loss: 1.88778
Epoch: 7, Time: 0.02103s, Loss: 1.87197
Epoch: 8, Time: 0.02116s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.02007s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.02283s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.02138s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.01925s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.01980s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.02104s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.02017s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.01964s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.01992s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.01929s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.01932s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.01933s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.01920s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.01936s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.01947s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.01933s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.01948s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.01947s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.02013s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.01948s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.02014s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1159)
Epoch: 0, Time: 0.03310s, Loss: 1.94661
update best: 0.12188
Epoch: 1, Time: 0.01910s, Loss: 1.94038
update best: 0.34151
Epoch: 2, Time: 0.01949s, Loss: 1.93350
Epoch: 3, Time: 0.01990s, Loss: 1.92534
Epoch: 4, Time: 0.01993s, Loss: 1.91478
Epoch: 5, Time: 0.01976s, Loss: 1.90180
Epoch: 6, Time: 0.01765s, Loss: 1.88834
Epoch: 7, Time: 0.02000s, Loss: 1.87205
update best: 0.34696
Epoch: 8, Time: 0.01919s, Loss: 1.85443
update best: 0.37305
Epoch: 9, Time: 0.01947s, Loss: 1.83362
update best: 0.40498
Epoch: 10, Time: 0.01914s, Loss: 1.81586
update best: 0.44393
Epoch: 11, Time: 0.01965s, Loss: 1.79077
update best: 0.47352
Epoch: 12, Time: 0.01901s, Loss: 1.76051
update best: 0.51324
Epoch: 13, Time: 0.01936s, Loss: 1.72942
update best: 0.54089
Epoch: 14, Time: 0.01924s, Loss: 1.70333
update best: 0.55491
Epoch: 15, Time: 0.01978s, Loss: 1.66653
update best: 0.57243
Epoch: 16, Time: 0.01892s, Loss: 1.63049
update best: 0.58450
Epoch: 17, Time: 0.01921s, Loss: 1.59662
update best: 0.60164
[I 2024-01-18 06:58:04,686] Trial 63 finished with value: 0.6845794320106506 and parameters: {'border': 0.989}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 06:59:04,067] Trial 64 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:00:03,381] Trial 65 finished with value: 0.6865264773368835 and parameters: {'border': 0.984}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:01:02,679] Trial 66 finished with value: 0.6865264773368835 and parameters: {'border': 0.991}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 18, Time: 0.02007s, Loss: 1.55931
update best: 0.62188
Epoch: 19, Time: 0.01854s, Loss: 1.52301
update best: 0.63240
Epoch: 20, Time: 0.01939s, Loss: 1.47269
update best: 0.64252
Epoch: 21, Time: 0.01952s, Loss: 1.43253
update best: 0.65265
Epoch: 22, Time: 0.01928s, Loss: 1.38843
update best: 0.66121
Epoch: 23, Time: 0.02176s, Loss: 1.34594
update best: 0.66628
Epoch: 24, Time: 0.01712s, Loss: 1.30662
Epoch: 25, Time: 0.01844s, Loss: 1.25731
update best: 0.67212
Epoch: 26, Time: 0.01876s, Loss: 1.21655
update best: 0.67407
Epoch: 27, Time: 0.01977s, Loss: 1.17788
update best: 0.68380
Epoch: 28, Time: 0.01927s, Loss: 1.13940
update best: 0.68458
Epoch: 29, Time: 0.01922s, Loss: 1.11000

train finished!
best val: 0.68458
test...
final result: epoch: 28
{'accuracy': 0.6845794320106506, 'f1_score': 0.6599619408517492, 'f1_score -> average@micro': 0.6845794392523364}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.03252s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.01941s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.01927s, Loss: 1.93352
Epoch: 3, Time: 0.02003s, Loss: 1.92512
Epoch: 4, Time: 0.02348s, Loss: 1.91455
Epoch: 5, Time: 0.01989s, Loss: 1.90150
Epoch: 6, Time: 0.01987s, Loss: 1.88778
Epoch: 7, Time: 0.01985s, Loss: 1.87197
Epoch: 8, Time: 0.01984s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.01908s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.02241s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.01990s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.02816s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.01965s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.02189s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.02123s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.01793s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.01963s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.01982s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.02010s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.01903s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.01927s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.01929s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.01927s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.01970s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.02206s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.02021s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.01943s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.02261s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.02085s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1300)
Epoch: 0, Time: 0.03363s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.01985s, Loss: 1.94049
update best: 0.36955
Epoch: 2, Time: 0.02447s, Loss: 1.93363
Epoch: 3, Time: 0.02252s, Loss: 1.92542
Epoch: 4, Time: 0.02061s, Loss: 1.91522
Epoch: 5, Time: 0.01960s, Loss: 1.90234
Epoch: 6, Time: 0.01953s, Loss: 1.88865
Epoch: 7, Time: 0.02349s, Loss: 1.87333
Epoch: 8, Time: 0.02920s, Loss: 1.85552
update best: 0.39798
Epoch: 9, Time: 0.02118s, Loss: 1.83460
update best: 0.43069
Epoch: 10, Time: 0.01903s, Loss: 1.81624
update best: 0.46262
Epoch: 11, Time: 0.02301s, Loss: 1.79111
update best: 0.50350
Epoch: 12, Time: 0.02062s, Loss: 1.76028
update best: 0.53816
Epoch: 13, Time: 0.02112s, Loss: 1.73058
update best: 0.55841
Epoch: 14, Time: 0.02474s, Loss: 1.70390
update best: 0.56970
Epoch: 15, Time: 0.02112s, Loss: 1.66774
update best: 0.57710
Epoch: 16, Time: 0.02335s, Loss: 1.63196
update best: 0.58528
Epoch: 17, Time: 0.02109s, Loss: 1.59608
update best: 0.60942
Epoch: 18, Time: 0.02189s, Loss: 1.55982
update best: 0.62656
Epoch: 19, Time: 0.02338s, Loss: 1.52333
update best: 0.64097
Epoch: 20, Time: 0.02163s, Loss: 1.47363
update best: 0.64759
Epoch: 21, Time: 0.02050s, Loss: 1.43356
update best: 0.65460
Epoch: 22, Time: 0.02166s, Loss: 1.38996
update best: 0.66706
Epoch: 23, Time: 0.02260s, Loss: 1.34418
update best: 0.67368
Epoch: 24, Time: 0.02096s, Loss: 1.30672
update best: 0.67601
Epoch: 25, Time: 0.02031s, Loss: 1.25776
update best: 0.67796
Epoch: 26, Time: 0.02036s, Loss: 1.22161
update best: 0.68030
Epoch: 27, Time: 0.02006s, Loss: 1.17642
update best: 0.68419
Epoch: 28, Time: 0.02207s, Loss: 1.14161
Epoch: 29, Time: 0.01969s, Loss: 1.11272
update best: 0.68653

train finished!
best val: 0.68653
test...
final result: epoch: 29
{'accuracy': 0.6865264773368835, 'f1_score': 0.6645425193745674, 'f1_score -> average@micro': 0.6865264797507789}
Hypergraph(num_v=2708, num_e=1118)
Epoch: 0, Time: 0.03231s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.01970s, Loss: 1.94026
update best: 0.30958
Epoch: 2, Time: 0.02000s, Loss: 1.93320
Epoch: 3, Time: 0.02403s, Loss: 1.92488
Epoch: 4, Time: 0.02401s, Loss: 1.91419
Epoch: 5, Time: 0.02090s, Loss: 1.90132
Epoch: 6, Time: 0.02024s, Loss: 1.88789
update best: 0.31464
Epoch: 7, Time: 0.02216s, Loss: 1.87199
update best: 0.33333
Epoch: 8, Time: 0.02525s, Loss: 1.85388
update best: 0.36682
Epoch: 9, Time: 0.01664s, Loss: 1.83219
update best: 0.40265
Epoch: 10, Time: 0.01692s, Loss: 1.81469
update best: 0.44198
Epoch: 11, Time: 0.01756s, Loss: 1.78939
update best: 0.48676
Epoch: 12, Time: 0.01516s, Loss: 1.75848
update best: 0.52298
Epoch: 13, Time: 0.01599s, Loss: 1.72744
update best: 0.54283
Epoch: 14, Time: 0.01785s, Loss: 1.70144
update best: 0.55724
Epoch: 15, Time: 0.01652s, Loss: 1.66515
update best: 0.57048
Epoch: 16, Time: 0.01509s, Loss: 1.62918
update best: 0.57983
Epoch: 17, Time: 0.01563s, Loss: 1.59392
update best: 0.58684
Epoch: 18, Time: 0.01583s, Loss: 1.55869
update best: 0.60942
Epoch: 19, Time: 0.01583s, Loss: 1.51977
update best: 0.62928
Epoch: 20, Time: 0.01654s, Loss: 1.46942
update best: 0.64681
Epoch: 21, Time: 0.01700s, Loss: 1.43009
update best: 0.65343
Epoch: 22, Time: 0.01581s, Loss: 1.38646
update best: 0.65693
Epoch: 23, Time: 0.01643s, Loss: 1.34403
update best: 0.66394
Epoch: 24, Time: 0.01421s, Loss: 1.30409
update best: 0.66861
Epoch: 25, Time: 0.01436s, Loss: 1.25433
update best: 0.67329
Epoch: 26, Time: 0.01280s, Loss: 1.21391
update best: 0.68030
Epoch: 27, Time: 0.01332s, Loss: 1.17483
update best: 0.68263
Epoch: 28, Time: 0.01303s, Loss: 1.13489
update best: 0.68653
Epoch: 29, Time: 0.01279s, Loss: 1.10596

train finished!
best val: 0.68653
test...
final result: epoch: 28
{'accuracy': 0.6865264773368835, 'f1_score': 0.6623810931193944, 'f1_score -> average@micro': 0.6865264797507789}
Hypergraph(num_v=2708, num_e=1077)
Epoch: 0, Time: 0.02603s, Loss: 1.94662
update best: 0.12188
Epoch: 1, Time: 0.01999s, Loss: 1.94047
update best: 0.30530
Epoch: 2, Time: 0.01709s, Loss: 1.93329
Epoch: 3, Time: 0.01985s, Loss: 1.92520
Epoch: 4, Time: 0.01851s, Loss: 1.91455
update best: 0.30763
Epoch: 5, Time: 0.01949s, Loss: 1.90177
update best: 0.31153
Epoch: 6, Time: 0.01781s, Loss: 1.88815
update best: 0.31970
Epoch: 7, Time: 0.01943s, Loss: 1.87213
update best: 0.33139
Epoch: 8, Time: 0.02096s, Loss: 1.85390
update best: 0.36410
Epoch: 9, Time: 0.01609s, Loss: 1.83247
update best: 0.40966
Epoch: 10, Time: 0.02068s, Loss: 1.81453
update best: 0.45016
Epoch: 11, Time: 0.02019s, Loss: 1.78885
update best: 0.49611
Epoch: 12, Time: 0.01920s, Loss: 1.75798
update best: 0.53310
Epoch: 13, Time: 0.01962s, Loss: 1.72721
update best: 0.55023
Epoch: 14, Time: 0.01951s, Loss: 1.70015
update best: 0.56503
Epoch: 15, Time: 0.01980s, Loss: 1.66414
update best: 0.57126
Epoch: 16, Time: 0.02142s, Loss: 1.62737
update best: 0.58217
Epoch: 17, Time: 0.01959s, Loss: 1.59241
update best: 0.59930
Epoch: 18, Time: 0.01961s, Loss: 1.55479
update best: 0.62305
Epoch: 19, Time: 0.01938s, Loss: 1.51695
update best: 0.64369
Epoch: 20, Time: 0.01946s, Loss: 1.46607
update best: 0.65265
Epoch: 21, Time: 0.01755s, Loss: 1.42480
update best: 0.65888
Epoch: 22, Time: 0.01872s, Loss: 1.38215
update best: 0.66822
Epoch: 23, Time: 0.01804s, Loss: 1.33711
update best: 0.66939
[I 2024-01-18 07:02:02,307] Trial 67 finished with value: 0.6853582262992859 and parameters: {'border': 0.993}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:03:02,052] Trial 68 finished with value: 0.6873052716255188 and parameters: {'border': 0.998}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:04:01,871] Trial 69 finished with value: 0.6849688291549683 and parameters: {'border': 0.985}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:05:00,985] Trial 70 finished with value: 0.6857476830482483 and parameters: {'border': 0.996}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:06:00,981] Trial 71 finished with value: 0.6830217838287354 and parameters: {'border': 0.987}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 24, Time: 0.01631s, Loss: 1.29836
update best: 0.67017
Epoch: 25, Time: 0.01861s, Loss: 1.24764
update best: 0.67601
Epoch: 26, Time: 0.01664s, Loss: 1.20658
update best: 0.67952
Epoch: 27, Time: 0.01524s, Loss: 1.16838
update best: 0.68146
Epoch: 28, Time: 0.01569s, Loss: 1.12701
update best: 0.68458
Epoch: 29, Time: 0.01663s, Loss: 1.09775
update best: 0.68536

train finished!
best val: 0.68536
test...
final result: epoch: 29
{'accuracy': 0.6853582262992859, 'f1_score': 0.6636031678896811, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=999)
Epoch: 0, Time: 0.03292s, Loss: 1.94644
update best: 0.12188
Epoch: 1, Time: 0.02079s, Loss: 1.94041
update best: 0.33762
Epoch: 2, Time: 0.01940s, Loss: 1.93325
Epoch: 3, Time: 0.02187s, Loss: 1.92476
Epoch: 4, Time: 0.01943s, Loss: 1.91421
Epoch: 5, Time: 0.03099s, Loss: 1.90030
Epoch: 6, Time: 0.02024s, Loss: 1.88649
Epoch: 7, Time: 0.02015s, Loss: 1.87042
update best: 0.36682
Epoch: 8, Time: 0.03154s, Loss: 1.85123
update best: 0.39798
Epoch: 9, Time: 0.01913s, Loss: 1.82972
update best: 0.43575
Epoch: 10, Time: 0.01814s, Loss: 1.81020
update best: 0.47002
Epoch: 11, Time: 0.02093s, Loss: 1.78358
update best: 0.50818
Epoch: 12, Time: 0.01955s, Loss: 1.75346
update best: 0.53583
Epoch: 13, Time: 0.02343s, Loss: 1.72126
update best: 0.55530
Epoch: 14, Time: 0.01996s, Loss: 1.69239
update best: 0.56931
Epoch: 15, Time: 0.02486s, Loss: 1.65625
update best: 0.57944
Epoch: 16, Time: 0.02243s, Loss: 1.61695
update best: 0.60047
Epoch: 17, Time: 0.02300s, Loss: 1.58092
update best: 0.62422
Epoch: 18, Time: 0.02024s, Loss: 1.54277
update best: 0.63785
Epoch: 19, Time: 0.02291s, Loss: 1.50485
update best: 0.65187
Epoch: 20, Time: 0.01753s, Loss: 1.45146
update best: 0.65382
Epoch: 21, Time: 0.02156s, Loss: 1.41001
update best: 0.65966
Epoch: 22, Time: 0.01805s, Loss: 1.36709
update best: 0.66550
Epoch: 23, Time: 0.02093s, Loss: 1.32046
update best: 0.67212
Epoch: 24, Time: 0.02354s, Loss: 1.28129
update best: 0.67445
Epoch: 25, Time: 0.02271s, Loss: 1.23135
update best: 0.68107
Epoch: 26, Time: 0.01910s, Loss: 1.18946
Epoch: 27, Time: 0.01878s, Loss: 1.14818
update best: 0.68497
Epoch: 28, Time: 0.01842s, Loss: 1.10696
update best: 0.68731
Epoch: 29, Time: 0.01968s, Loss: 1.07705

train finished!
best val: 0.68731
test...
final result: epoch: 28
{'accuracy': 0.6873052716255188, 'f1_score': 0.666859853470488, 'f1_score -> average@micro': 0.6873052959501558}
Hypergraph(num_v=2708, num_e=1274)
Epoch: 0, Time: 0.03538s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.01936s, Loss: 1.94053
update best: 0.35787
Epoch: 2, Time: 0.02034s, Loss: 1.93369
Epoch: 3, Time: 0.02021s, Loss: 1.92571
Epoch: 4, Time: 0.02561s, Loss: 1.91552
Epoch: 5, Time: 0.02395s, Loss: 1.90279
Epoch: 6, Time: 0.02227s, Loss: 1.88936
Epoch: 7, Time: 0.02104s, Loss: 1.87385
Epoch: 8, Time: 0.02540s, Loss: 1.85672
update best: 0.38279
Epoch: 9, Time: 0.02254s, Loss: 1.83579
update best: 0.40810
Epoch: 10, Time: 0.02216s, Loss: 1.81825
update best: 0.44431
Epoch: 11, Time: 0.01659s, Loss: 1.79322
update best: 0.47508
Epoch: 12, Time: 0.02001s, Loss: 1.76261
update best: 0.51324
Epoch: 13, Time: 0.02101s, Loss: 1.73314
update best: 0.54128
Epoch: 14, Time: 0.02077s, Loss: 1.70659
update best: 0.55802
Epoch: 15, Time: 0.01669s, Loss: 1.67099
update best: 0.56698
Epoch: 16, Time: 0.02042s, Loss: 1.63474
update best: 0.57516
Epoch: 17, Time: 0.01995s, Loss: 1.60033
update best: 0.59852
Epoch: 18, Time: 0.02019s, Loss: 1.56347
update best: 0.62305
Epoch: 19, Time: 0.01974s, Loss: 1.52661
update best: 0.63512
Epoch: 20, Time: 0.01922s, Loss: 1.47767
update best: 0.64642
Epoch: 21, Time: 0.01919s, Loss: 1.43740
update best: 0.65537
Epoch: 22, Time: 0.02090s, Loss: 1.39440
update best: 0.66472
Epoch: 23, Time: 0.02028s, Loss: 1.34836
update best: 0.67017
Epoch: 24, Time: 0.02024s, Loss: 1.31151
update best: 0.67562
Epoch: 25, Time: 0.02316s, Loss: 1.26169
update best: 0.67874
Epoch: 26, Time: 0.01872s, Loss: 1.22363
update best: 0.68107
Epoch: 27, Time: 0.01927s, Loss: 1.18038
update best: 0.68497
Epoch: 28, Time: 0.01983s, Loss: 1.14599
Epoch: 29, Time: 0.01831s, Loss: 1.11687

train finished!
best val: 0.68497
test...
final result: epoch: 27
{'accuracy': 0.6849688291549683, 'f1_score': 0.6616746092396986, 'f1_score -> average@micro': 0.6849688473520249}
Hypergraph(num_v=2708, num_e=1033)
Epoch: 0, Time: 0.03021s, Loss: 1.94643
update best: 0.12188
Epoch: 1, Time: 0.01947s, Loss: 1.94040
update best: 0.33917
Epoch: 2, Time: 0.02072s, Loss: 1.93313
Epoch: 3, Time: 0.02042s, Loss: 1.92469
Epoch: 4, Time: 0.02282s, Loss: 1.91391
Epoch: 5, Time: 0.01993s, Loss: 1.90041
Epoch: 6, Time: 0.01978s, Loss: 1.88635
update best: 0.34579
Epoch: 7, Time: 0.02021s, Loss: 1.87042
update best: 0.37227
Epoch: 8, Time: 0.02119s, Loss: 1.85155
update best: 0.40226
Epoch: 9, Time: 0.01989s, Loss: 1.82983
update best: 0.43925
Epoch: 10, Time: 0.01917s, Loss: 1.81041
update best: 0.49221
Epoch: 11, Time: 0.02077s, Loss: 1.78359
update best: 0.52570
Epoch: 12, Time: 0.02141s, Loss: 1.75353
update best: 0.55062
Epoch: 13, Time: 0.02042s, Loss: 1.72137
update best: 0.56581
Epoch: 14, Time: 0.02129s, Loss: 1.69333
update best: 0.57438
Epoch: 15, Time: 0.01982s, Loss: 1.65659
update best: 0.58645
Epoch: 16, Time: 0.02411s, Loss: 1.61735
update best: 0.60358
Epoch: 17, Time: 0.02389s, Loss: 1.58197
update best: 0.62344
Epoch: 18, Time: 0.01603s, Loss: 1.54412
update best: 0.64097
Epoch: 19, Time: 0.01420s, Loss: 1.50678
update best: 0.64992
Epoch: 20, Time: 0.01461s, Loss: 1.45406
update best: 0.65498
Epoch: 21, Time: 0.02088s, Loss: 1.41198
update best: 0.66550
Epoch: 22, Time: 0.01667s, Loss: 1.36879
update best: 0.67017
Epoch: 23, Time: 0.01626s, Loss: 1.32291
update best: 0.67368
Epoch: 24, Time: 0.01798s, Loss: 1.28286
update best: 0.67445
Epoch: 25, Time: 0.01737s, Loss: 1.23468
update best: 0.68030
Epoch: 26, Time: 0.01882s, Loss: 1.19418
Epoch: 27, Time: 0.01485s, Loss: 1.15191
update best: 0.68107
Epoch: 28, Time: 0.01719s, Loss: 1.11292
update best: 0.68575
Epoch: 29, Time: 0.01631s, Loss: 1.08156

train finished!
best val: 0.68575
test...
final result: epoch: 28
{'accuracy': 0.6857476830482483, 'f1_score': 0.6648293795468189, 'f1_score -> average@micro': 0.6857476635514018}
Hypergraph(num_v=2708, num_e=1206)
Epoch: 0, Time: 0.02735s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.01860s, Loss: 1.94051
update best: 0.37383
Epoch: 2, Time: 0.02516s, Loss: 1.93361
Epoch: 3, Time: 0.01980s, Loss: 1.92531
Epoch: 4, Time: 0.01703s, Loss: 1.91493
Epoch: 5, Time: 0.01965s, Loss: 1.90201
Epoch: 6, Time: 0.02070s, Loss: 1.88820
Epoch: 7, Time: 0.01997s, Loss: 1.87212
Epoch: 8, Time: 0.02018s, Loss: 1.85420
update best: 0.39330
Epoch: 9, Time: 0.01934s, Loss: 1.83301
update best: 0.41900
Epoch: 10, Time: 0.01961s, Loss: 1.81520
update best: 0.45833
Epoch: 11, Time: 0.01936s, Loss: 1.78938
update best: 0.49299
Epoch: 12, Time: 0.02255s, Loss: 1.75814
update best: 0.52414
Epoch: 13, Time: 0.02109s, Loss: 1.72791
update best: 0.54790
Epoch: 14, Time: 0.02000s, Loss: 1.70101
update best: 0.56425
Epoch: 15, Time: 0.01975s, Loss: 1.66413
update best: 0.57555
Epoch: 16, Time: 0.02008s, Loss: 1.62725
update best: 0.59073
Epoch: 17, Time: 0.01963s, Loss: 1.59247
update best: 0.61643
Epoch: 18, Time: 0.01942s, Loss: 1.55481
update best: 0.63240
Epoch: 19, Time: 0.01976s, Loss: 1.51861
update best: 0.64486
Epoch: 20, Time: 0.02056s, Loss: 1.46778
update best: 0.65771
Epoch: 21, Time: 0.02011s, Loss: 1.42742
update best: 0.65849
Epoch: 22, Time: 0.02017s, Loss: 1.38236
update best: 0.66783
Epoch: 23, Time: 0.02246s, Loss: 1.33881
update best: 0.67134
Epoch: 24, Time: 0.01997s, Loss: 1.29973
update best: 0.67718
Epoch: 25, Time: 0.01938s, Loss: 1.25105
update best: 0.68030
Epoch: 26, Time: 0.01964s, Loss: 1.21320
Epoch: 27, Time: 0.01927s, Loss: 1.16960
update best: 0.68302
Epoch: 28, Time: 0.01915s, Loss: 1.13380
Epoch: 29, Time: 0.02092s, Loss: 1.10606

train finished!
best val: 0.68302
test...
final result: epoch: 27
{'accuracy': 0.6830217838287354, 'f1_score': 0.6580493410678123, 'f1_score -> average@micro': 0.6830218068535826}
[I 2024-01-18 07:07:00,611] Trial 72 finished with value: 0.6873052716255188 and parameters: {'border': 0.99}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:08:00,120] Trial 73 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:08:59,491] Trial 74 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:09:58,988] Trial 75 finished with value: 0.6830217838287354 and parameters: {'border': 0.982}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Hypergraph(num_v=2708, num_e=1140)
Epoch: 0, Time: 0.03372s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.02154s, Loss: 1.94045
update best: 0.31542
Epoch: 2, Time: 0.02069s, Loss: 1.93341
Epoch: 3, Time: 0.01992s, Loss: 1.92518
Epoch: 4, Time: 0.02009s, Loss: 1.91454
Epoch: 5, Time: 0.01613s, Loss: 1.90185
Epoch: 6, Time: 0.01902s, Loss: 1.88838
update best: 0.31737
Epoch: 7, Time: 0.02151s, Loss: 1.87250
update best: 0.33684
Epoch: 8, Time: 0.01886s, Loss: 1.85475
update best: 0.36877
Epoch: 9, Time: 0.01986s, Loss: 1.83312
update best: 0.40460
Epoch: 10, Time: 0.01931s, Loss: 1.81559
update best: 0.44081
Epoch: 11, Time: 0.01982s, Loss: 1.79045
update best: 0.48326
Epoch: 12, Time: 0.01868s, Loss: 1.75942
update best: 0.51986
Epoch: 13, Time: 0.01706s, Loss: 1.72896
update best: 0.54439
Epoch: 14, Time: 0.01876s, Loss: 1.70258
update best: 0.55491
Epoch: 15, Time: 0.01977s, Loss: 1.66629
update best: 0.56854
Epoch: 16, Time: 0.01967s, Loss: 1.63043
update best: 0.57827
Epoch: 17, Time: 0.01733s, Loss: 1.59577
update best: 0.58217
Epoch: 18, Time: 0.01873s, Loss: 1.55994
update best: 0.61176
Epoch: 19, Time: 0.01937s, Loss: 1.52208
update best: 0.63084
Epoch: 20, Time: 0.02033s, Loss: 1.47199
update best: 0.64525
Epoch: 21, Time: 0.01954s, Loss: 1.43174
update best: 0.65537
Epoch: 22, Time: 0.01804s, Loss: 1.38862
update best: 0.66005
Epoch: 23, Time: 0.01985s, Loss: 1.34424
update best: 0.66355
Epoch: 24, Time: 0.01666s, Loss: 1.30237
update best: 0.66978
Epoch: 25, Time: 0.01901s, Loss: 1.25589
update best: 0.67562
Epoch: 26, Time: 0.01791s, Loss: 1.21605
update best: 0.68146
Epoch: 27, Time: 0.01799s, Loss: 1.17547
update best: 0.68341
Epoch: 28, Time: 0.01939s, Loss: 1.13525
update best: 0.68731
Epoch: 29, Time: 0.01941s, Loss: 1.10585

train finished!
best val: 0.68731
test...
final result: epoch: 28
{'accuracy': 0.6873052716255188, 'f1_score': 0.6623724299431235, 'f1_score -> average@micro': 0.6873052959501558}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.03568s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.02104s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.02051s, Loss: 1.93352
Epoch: 3, Time: 0.02019s, Loss: 1.92512
Epoch: 4, Time: 0.02023s, Loss: 1.91455
Epoch: 5, Time: 0.02088s, Loss: 1.90150
Epoch: 6, Time: 0.02162s, Loss: 1.88778
Epoch: 7, Time: 0.02346s, Loss: 1.87197
Epoch: 8, Time: 0.01937s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.02155s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.01995s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.01920s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.01910s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.01922s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.01924s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.01927s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.01932s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.01938s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.01938s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.01859s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.01943s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.01950s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.01640s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.02007s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.01887s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.01929s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.01702s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.01989s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.01962s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.01974s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.02791s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.01868s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.01820s, Loss: 1.93352
Epoch: 3, Time: 0.02184s, Loss: 1.92512
Epoch: 4, Time: 0.02114s, Loss: 1.91455
Epoch: 5, Time: 0.01621s, Loss: 1.90150
Epoch: 6, Time: 0.01961s, Loss: 1.88778
Epoch: 7, Time: 0.01986s, Loss: 1.87197
Epoch: 8, Time: 0.01767s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.01913s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.01943s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.01916s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.01936s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.01988s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.01890s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.01680s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.01851s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.01966s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.02147s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.01857s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.02140s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.01880s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.02189s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.01683s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.01575s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.01609s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.02195s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.01975s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.01927s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.02256s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1369)
Epoch: 0, Time: 0.03438s, Loss: 1.94659
update best: 0.12188
Epoch: 1, Time: 0.02008s, Loss: 1.94061
update best: 0.34696
Epoch: 2, Time: 0.02068s, Loss: 1.93380
Epoch: 3, Time: 0.02316s, Loss: 1.92559
Epoch: 4, Time: 0.02125s, Loss: 1.91548
Epoch: 5, Time: 0.01850s, Loss: 1.90287
Epoch: 6, Time: 0.01733s, Loss: 1.88938
Epoch: 7, Time: 0.02097s, Loss: 1.87374
Epoch: 8, Time: 0.02082s, Loss: 1.85597
update best: 0.37344
Epoch: 9, Time: 0.02100s, Loss: 1.83529
update best: 0.41005
Epoch: 10, Time: 0.02071s, Loss: 1.81693
update best: 0.45561
Epoch: 11, Time: 0.02210s, Loss: 1.79231
update best: 0.49065
Epoch: 12, Time: 0.02181s, Loss: 1.76128
update best: 0.53154
Epoch: 13, Time: 0.02159s, Loss: 1.73176
update best: 0.55452
Epoch: 14, Time: 0.01760s, Loss: 1.70478
update best: 0.56659
Epoch: 15, Time: 0.01990s, Loss: 1.66912
update best: 0.57593
Epoch: 16, Time: 0.01992s, Loss: 1.63398
update best: 0.58178
Epoch: 17, Time: 0.02017s, Loss: 1.59909
update best: 0.59813
Epoch: 18, Time: 0.01920s, Loss: 1.56282
update best: 0.62188
Epoch: 19, Time: 0.02012s, Loss: 1.52441
update best: 0.63746
Epoch: 20, Time: 0.02117s, Loss: 1.47729
update best: 0.64875
Epoch: 21, Time: 0.01618s, Loss: 1.43520
update best: 0.65576
Epoch: 22, Time: 0.02066s, Loss: 1.39300
update best: 0.66316
Epoch: 23, Time: 0.01994s, Loss: 1.34628
update best: 0.67173
Epoch: 24, Time: 0.01972s, Loss: 1.30864
update best: 0.67796
Epoch: 25, Time: 0.02061s, Loss: 1.26108
update best: 0.67835
Epoch: 26, Time: 0.01757s, Loss: 1.22270
update best: 0.67913
Epoch: 27, Time: 0.01964s, Loss: 1.17871
update best: 0.68302
Epoch: 28, Time: 0.01993s, Loss: 1.14430
Epoch: 29, Time: 0.01869s, Loss: 1.11382

train finished!
best val: 0.68302
test...
final result: epoch: 27
{'accuracy': 0.6830217838287354, 'f1_score': 0.6601386848332408, 'f1_score -> average@micro': 0.6830218068535826}
Hypergraph(num_v=2708, num_e=1060)
Epoch: 0, Time: 0.03049s, Loss: 1.94653
update best: 0.12188
Epoch: 1, Time: 0.01924s, Loss: 1.94055
update best: 0.35319
Epoch: 2, Time: 0.01936s, Loss: 1.93342
Epoch: 3, Time: 0.02406s, Loss: 1.92514
Epoch: 4, Time: 0.01915s, Loss: 1.91444
Epoch: 5, Time: 0.02172s, Loss: 1.90140
Epoch: 6, Time: 0.02042s, Loss: 1.88764
Epoch: 7, Time: 0.02303s, Loss: 1.87198
update best: 0.36215
Epoch: 8, Time: 0.02133s, Loss: 1.85344
update best: 0.39798
[I 2024-01-18 07:10:58,519] Trial 76 finished with value: 0.6853582262992859 and parameters: {'border': 0.994}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:12:01,556] Trial 77 finished with value: 0.6849688291549683 and parameters: {'border': 0.985}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:13:01,032] Trial 78 finished with value: 0.6853582262992859 and parameters: {'border': 0.992}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:14:00,717] Trial 79 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 9, Time: 0.02308s, Loss: 1.83194
update best: 0.42913
Epoch: 10, Time: 0.02152s, Loss: 1.81350
update best: 0.47002
Epoch: 11, Time: 0.01589s, Loss: 1.78776
update best: 0.51363
Epoch: 12, Time: 0.01602s, Loss: 1.75692
update best: 0.53816
Epoch: 13, Time: 0.01693s, Loss: 1.72604
update best: 0.55880
Epoch: 14, Time: 0.01598s, Loss: 1.69900
update best: 0.56659
Epoch: 15, Time: 0.01484s, Loss: 1.66267
update best: 0.57827
Epoch: 16, Time: 0.01648s, Loss: 1.62586
update best: 0.58411
Epoch: 17, Time: 0.01515s, Loss: 1.59031
update best: 0.60475
Epoch: 18, Time: 0.01444s, Loss: 1.55297
update best: 0.62695
Epoch: 19, Time: 0.01661s, Loss: 1.51509
update best: 0.64174
Epoch: 20, Time: 0.01565s, Loss: 1.46442
update best: 0.65265
Epoch: 21, Time: 0.01477s, Loss: 1.42304
update best: 0.65927
Epoch: 22, Time: 0.01619s, Loss: 1.38101
update best: 0.66783
Epoch: 23, Time: 0.01708s, Loss: 1.33465
update best: 0.67173
Epoch: 24, Time: 0.12719s, Loss: 1.29590
update best: 0.67407
Epoch: 25, Time: 0.01695s, Loss: 1.24604
update best: 0.67835
Epoch: 26, Time: 0.01522s, Loss: 1.20626
Epoch: 27, Time: 0.01611s, Loss: 1.16624
update best: 0.68185
Epoch: 28, Time: 0.01782s, Loss: 1.12636
update best: 0.68536
Epoch: 29, Time: 0.01874s, Loss: 1.09677

train finished!
best val: 0.68536
test...
final result: epoch: 28
{'accuracy': 0.6853582262992859, 'f1_score': 0.6605734854940827, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=1274)
Epoch: 0, Time: 0.03365s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.01937s, Loss: 1.94053
update best: 0.35787
Epoch: 2, Time: 0.02268s, Loss: 1.93369
Epoch: 3, Time: 0.02279s, Loss: 1.92571
Epoch: 4, Time: 0.01967s, Loss: 1.91552
Epoch: 5, Time: 0.02121s, Loss: 1.90279
Epoch: 6, Time: 0.02052s, Loss: 1.88936
Epoch: 7, Time: 0.02010s, Loss: 1.87385
Epoch: 8, Time: 0.02147s, Loss: 1.85672
update best: 0.38279
Epoch: 9, Time: 0.02140s, Loss: 1.83579
update best: 0.40810
Epoch: 10, Time: 0.02162s, Loss: 1.81825
update best: 0.44431
Epoch: 11, Time: 0.02131s, Loss: 1.79322
update best: 0.47508
Epoch: 12, Time: 0.02356s, Loss: 1.76261
update best: 0.51324
Epoch: 13, Time: 0.01698s, Loss: 1.73314
update best: 0.54128
Epoch: 14, Time: 0.02057s, Loss: 1.70659
update best: 0.55802
Epoch: 15, Time: 0.02036s, Loss: 1.67099
update best: 0.56698
Epoch: 16, Time: 0.01976s, Loss: 1.63474
update best: 0.57516
Epoch: 17, Time: 0.02025s, Loss: 1.60033
update best: 0.59852
Epoch: 18, Time: 0.02013s, Loss: 1.56347
update best: 0.62305
Epoch: 19, Time: 0.01633s, Loss: 1.52661
update best: 0.63512
Epoch: 20, Time: 0.01985s, Loss: 1.47767
update best: 0.64642
Epoch: 21, Time: 0.01827s, Loss: 1.43740
update best: 0.65537
Epoch: 22, Time: 0.01885s, Loss: 1.39440
update best: 0.66472
Epoch: 23, Time: 0.01912s, Loss: 1.34836
update best: 0.67017
Epoch: 24, Time: 0.01738s, Loss: 1.31151
update best: 0.67562
Epoch: 25, Time: 0.02029s, Loss: 1.26169
update best: 0.67874
Epoch: 26, Time: 0.02019s, Loss: 1.22363
update best: 0.68107
Epoch: 27, Time: 0.01922s, Loss: 1.18038
update best: 0.68497
Epoch: 28, Time: 0.01718s, Loss: 1.14599
Epoch: 29, Time: 0.01973s, Loss: 1.11687

train finished!
best val: 0.68497
test...
final result: epoch: 27
{'accuracy': 0.6849688291549683, 'f1_score': 0.6616746092396986, 'f1_score -> average@micro': 0.6849688473520249}
Hypergraph(num_v=2708, num_e=1094)
Epoch: 0, Time: 0.03290s, Loss: 1.94664
update best: 0.12188
Epoch: 1, Time: 0.02157s, Loss: 1.94020
update best: 0.30491
Epoch: 2, Time: 0.02017s, Loss: 1.93297
Epoch: 3, Time: 0.02403s, Loss: 1.92462
Epoch: 4, Time: 0.01979s, Loss: 1.91404
Epoch: 5, Time: 0.01956s, Loss: 1.90111
update best: 0.30919
Epoch: 6, Time: 0.02277s, Loss: 1.88750
update best: 0.31698
Epoch: 7, Time: 0.01952s, Loss: 1.87170
update best: 0.32710
Epoch: 8, Time: 0.02245s, Loss: 1.85345
update best: 0.35164
Epoch: 9, Time: 0.01916s, Loss: 1.83182
update best: 0.39875
Epoch: 10, Time: 0.01952s, Loss: 1.81383
update best: 0.43886
Epoch: 11, Time: 0.01890s, Loss: 1.78861
update best: 0.48910
Epoch: 12, Time: 0.02364s, Loss: 1.75761
update best: 0.52220
Epoch: 13, Time: 0.01703s, Loss: 1.72707
update best: 0.54517
Epoch: 14, Time: 0.01694s, Loss: 1.70023
update best: 0.56153
Epoch: 15, Time: 0.01690s, Loss: 1.66424
update best: 0.56815
Epoch: 16, Time: 0.01719s, Loss: 1.62698
update best: 0.58061
Epoch: 17, Time: 0.01677s, Loss: 1.59259
update best: 0.59463
Epoch: 18, Time: 0.01818s, Loss: 1.55558
update best: 0.61877
Epoch: 19, Time: 0.01641s, Loss: 1.51741
update best: 0.63474
Epoch: 20, Time: 0.01590s, Loss: 1.46639
update best: 0.64447
Epoch: 21, Time: 0.01521s, Loss: 1.42576
update best: 0.65849
Epoch: 22, Time: 0.01586s, Loss: 1.38338
update best: 0.66511
Epoch: 23, Time: 0.01534s, Loss: 1.33898
update best: 0.66628
Epoch: 24, Time: 0.01513s, Loss: 1.30067
update best: 0.66861
Epoch: 25, Time: 0.01931s, Loss: 1.25041
update best: 0.67407
Epoch: 26, Time: 0.01572s, Loss: 1.20821
update best: 0.67991
Epoch: 27, Time: 0.01496s, Loss: 1.16992
update best: 0.68224
Epoch: 28, Time: 0.01443s, Loss: 1.13034
update best: 0.68536
Epoch: 29, Time: 0.01474s, Loss: 1.10097

train finished!
best val: 0.68536
test...
final result: epoch: 28
{'accuracy': 0.6853582262992859, 'f1_score': 0.6595623797267406, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.03144s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.02092s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.02065s, Loss: 1.93352
Epoch: 3, Time: 0.02266s, Loss: 1.92512
Epoch: 4, Time: 0.02402s, Loss: 1.91455
Epoch: 5, Time: 0.02757s, Loss: 1.90150
Epoch: 6, Time: 0.02055s, Loss: 1.88778
Epoch: 7, Time: 0.02270s, Loss: 1.87197
Epoch: 8, Time: 0.02836s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.01599s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.01697s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.01421s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.02054s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.02314s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.02077s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.02049s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.02765s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.02419s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.02728s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.03139s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.02028s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.02158s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.01991s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.02327s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.02318s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.01934s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.01955s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.02498s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.02174s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.01872s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1328)
Epoch: 0, Time: 0.03478s, Loss: 1.94657
update best: 0.12188
Epoch: 1, Time: 0.01972s, Loss: 1.94050
update best: 0.33645
Epoch: 2, Time: 0.02174s, Loss: 1.93343
Epoch: 3, Time: 0.01951s, Loss: 1.92494
Epoch: 4, Time: 0.01954s, Loss: 1.91490
Epoch: 5, Time: 0.01960s, Loss: 1.90206
Epoch: 6, Time: 0.01922s, Loss: 1.88843
Epoch: 7, Time: 0.01988s, Loss: 1.87251
update best: 0.34735
Epoch: 8, Time: 0.01985s, Loss: 1.85484
update best: 0.37266
Epoch: 9, Time: 0.02022s, Loss: 1.83434
update best: 0.40226
Epoch: 10, Time: 0.01860s, Loss: 1.81571
update best: 0.44354
Epoch: 11, Time: 0.01897s, Loss: 1.79140
update best: 0.47079
Epoch: 12, Time: 0.02060s, Loss: 1.76039
update best: 0.50701
Epoch: 13, Time: 0.02434s, Loss: 1.73148
update best: 0.53154
Epoch: 14, Time: 0.02117s, Loss: 1.70502
update best: 0.55023
Epoch: 15, Time: 0.01943s, Loss: 1.66855
update best: 0.57165
Epoch: 16, Time: 0.01982s, Loss: 1.63293
[I 2024-01-18 07:15:00,293] Trial 80 finished with value: 0.6861370801925659 and parameters: {'border': 0.983}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:15:59,972] Trial 81 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:17:00,575] Trial 82 finished with value: 0.6873052716255188 and parameters: {'border': 0.99}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:17:59,828] Trial 83 finished with value: 0.6876947283744812 and parameters: {'border': 0.986}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
update best: 0.57905
Epoch: 17, Time: 0.02263s, Loss: 1.59825
update best: 0.59813
Epoch: 18, Time: 0.01689s, Loss: 1.56177
update best: 0.62266
Epoch: 19, Time: 0.02024s, Loss: 1.52408
update best: 0.63863
Epoch: 20, Time: 0.01942s, Loss: 1.47797
update best: 0.64369
Epoch: 21, Time: 0.02320s, Loss: 1.43491
update best: 0.65343
Epoch: 22, Time: 0.01761s, Loss: 1.39254
update best: 0.66316
Epoch: 23, Time: 0.01661s, Loss: 1.34772
update best: 0.66861
Epoch: 24, Time: 0.01765s, Loss: 1.30814
update best: 0.67329
Epoch: 25, Time: 0.01745s, Loss: 1.26152
update best: 0.67757
Epoch: 26, Time: 0.01695s, Loss: 1.22379
update best: 0.68069
Epoch: 27, Time: 0.01731s, Loss: 1.17742
update best: 0.68536
Epoch: 28, Time: 0.01480s, Loss: 1.14275
update best: 0.68614
Epoch: 29, Time: 0.01543s, Loss: 1.11249

train finished!
best val: 0.68614
test...
final result: epoch: 28
{'accuracy': 0.6861370801925659, 'f1_score': 0.6633361749673746, 'f1_score -> average@micro': 0.6861370716510904}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.03222s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.01899s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.01901s, Loss: 1.93352
Epoch: 3, Time: 0.02200s, Loss: 1.92512
Epoch: 4, Time: 0.02666s, Loss: 1.91455
Epoch: 5, Time: 0.02024s, Loss: 1.90150
Epoch: 6, Time: 0.02527s, Loss: 1.88778
Epoch: 7, Time: 0.02178s, Loss: 1.87197
Epoch: 8, Time: 0.02062s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.02121s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.02071s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.02131s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.02119s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.02035s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.02244s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.01972s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.01928s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.01936s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.01932s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.01929s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.01934s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.02145s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.01664s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.01685s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.01669s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.01702s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.01550s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.01681s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.01885s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.01664s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1140)
Epoch: 0, Time: 0.02585s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.02293s, Loss: 1.94045
update best: 0.31542
Epoch: 2, Time: 0.02004s, Loss: 1.93341
Epoch: 3, Time: 0.02056s, Loss: 1.92518
Epoch: 4, Time: 0.01988s, Loss: 1.91454
Epoch: 5, Time: 0.02003s, Loss: 1.90185
Epoch: 6, Time: 0.01989s, Loss: 1.88838
update best: 0.31737
Epoch: 7, Time: 0.01932s, Loss: 1.87250
update best: 0.33684
Epoch: 8, Time: 0.01934s, Loss: 1.85475
update best: 0.36877
Epoch: 9, Time: 0.02024s, Loss: 1.83312
update best: 0.40460
Epoch: 10, Time: 0.02029s, Loss: 1.81559
update best: 0.44081
Epoch: 11, Time: 0.02117s, Loss: 1.79045
update best: 0.48326
Epoch: 12, Time: 0.01938s, Loss: 1.75942
update best: 0.51986
Epoch: 13, Time: 0.02096s, Loss: 1.72896
update best: 0.54439
Epoch: 14, Time: 0.01952s, Loss: 1.70258
update best: 0.55491
Epoch: 15, Time: 0.02154s, Loss: 1.66629
update best: 0.56854
Epoch: 16, Time: 0.01927s, Loss: 1.63043
update best: 0.57827
Epoch: 17, Time: 0.01941s, Loss: 1.59577
update best: 0.58217
Epoch: 18, Time: 0.02215s, Loss: 1.55994
update best: 0.61176
Epoch: 19, Time: 0.02231s, Loss: 1.52208
update best: 0.63084
Epoch: 20, Time: 0.01560s, Loss: 1.47199
update best: 0.64525
Epoch: 21, Time: 0.02136s, Loss: 1.43174
update best: 0.65537
Epoch: 22, Time: 0.01767s, Loss: 1.38862
update best: 0.66005
Epoch: 23, Time: 0.01862s, Loss: 1.34424
update best: 0.66355
Epoch: 24, Time: 0.01951s, Loss: 1.30237
update best: 0.66978
Epoch: 25, Time: 0.01944s, Loss: 1.25589
update best: 0.67562
Epoch: 26, Time: 0.01979s, Loss: 1.21605
update best: 0.68146
Epoch: 27, Time: 0.01950s, Loss: 1.17547
update best: 0.68341
Epoch: 28, Time: 0.01938s, Loss: 1.13525
update best: 0.68731
Epoch: 29, Time: 0.01797s, Loss: 1.10585

train finished!
best val: 0.68731
test...
final result: epoch: 28
{'accuracy': 0.6873052716255188, 'f1_score': 0.6623724299431235, 'f1_score -> average@micro': 0.6873052959501558}
Hypergraph(num_v=2708, num_e=1237)
Epoch: 0, Time: 0.03662s, Loss: 1.94663
update best: 0.12188
Epoch: 1, Time: 0.01834s, Loss: 1.94043
update best: 0.32749
Epoch: 2, Time: 0.01990s, Loss: 1.93342
Epoch: 3, Time: 0.02010s, Loss: 1.92501
Epoch: 4, Time: 0.02068s, Loss: 1.91462
Epoch: 5, Time: 0.02195s, Loss: 1.90154
Epoch: 6, Time: 0.02110s, Loss: 1.88776
Epoch: 7, Time: 0.02170s, Loss: 1.87184
update best: 0.33995
Epoch: 8, Time: 0.02266s, Loss: 1.85383
update best: 0.37656
Epoch: 9, Time: 0.02140s, Loss: 1.83192
update best: 0.40537
Epoch: 10, Time: 0.01997s, Loss: 1.81376
update best: 0.44704
Epoch: 11, Time: 0.02643s, Loss: 1.78845
update best: 0.47858
Epoch: 12, Time: 0.01926s, Loss: 1.75667
update best: 0.52181
Epoch: 13, Time: 0.02129s, Loss: 1.72660
update best: 0.55023
Epoch: 14, Time: 0.02008s, Loss: 1.69932
update best: 0.56659
Epoch: 15, Time: 0.02087s, Loss: 1.66167
update best: 0.57204
Epoch: 16, Time: 0.02205s, Loss: 1.62382
update best: 0.58528
Epoch: 17, Time: 0.01946s, Loss: 1.58996
update best: 0.60748
Epoch: 18, Time: 0.02054s, Loss: 1.55154
update best: 0.63123
Epoch: 19, Time: 0.01970s, Loss: 1.51352
update best: 0.64291
Epoch: 20, Time: 0.01985s, Loss: 1.46440
update best: 0.65343
Epoch: 21, Time: 0.01919s, Loss: 1.42280
update best: 0.66160
Epoch: 22, Time: 0.01922s, Loss: 1.37718
update best: 0.67017
Epoch: 23, Time: 0.01927s, Loss: 1.33420
update best: 0.67407
Epoch: 24, Time: 0.01928s, Loss: 1.29331
update best: 0.67874
Epoch: 25, Time: 0.01924s, Loss: 1.24430
update best: 0.68107
Epoch: 26, Time: 0.01984s, Loss: 1.20621
update best: 0.68185
Epoch: 27, Time: 0.01892s, Loss: 1.16259
update best: 0.68458
Epoch: 28, Time: 0.01894s, Loss: 1.12618
update best: 0.68769
Epoch: 29, Time: 0.01915s, Loss: 1.09703

train finished!
best val: 0.68769
test...
final result: epoch: 28
{'accuracy': 0.6876947283744812, 'f1_score': 0.6652098366111925, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.03324s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.02120s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.01832s, Loss: 1.93352
Epoch: 3, Time: 0.02034s, Loss: 1.92512
Epoch: 4, Time: 0.02098s, Loss: 1.91455
Epoch: 5, Time: 0.01981s, Loss: 1.90150
Epoch: 6, Time: 0.01985s, Loss: 1.88778
Epoch: 7, Time: 0.01987s, Loss: 1.87197
Epoch: 8, Time: 0.01992s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.01820s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.02005s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.02130s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.02121s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.01920s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.01936s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.01918s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.01692s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.02231s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.02070s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.01832s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.01798s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.01907s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.01922s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.01856s, Loss: 1.33736
[I 2024-01-18 07:18:59,447] Trial 84 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:19:58,942] Trial 85 finished with value: 0.6553738117218018 and parameters: {'border': 0.958}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:20:58,416] Trial 86 finished with value: 0.6865264773368835 and parameters: {'border': 0.991}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:21:57,891] Trial 87 finished with value: 0.6865264773368835 and parameters: {'border': 0.984}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
update best: 0.66978
Epoch: 24, Time: 0.01673s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.01939s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.01929s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.02019s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.01912s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.01951s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=2734)
Epoch: 0, Time: 0.04520s, Loss: 1.94646
update best: 0.12150
Epoch: 1, Time: 0.02426s, Loss: 1.94155
update best: 0.36449
Epoch: 2, Time: 0.02333s, Loss: 1.93550
Epoch: 3, Time: 0.02327s, Loss: 1.92853
Epoch: 4, Time: 0.02354s, Loss: 1.91946
Epoch: 5, Time: 0.02802s, Loss: 1.90817
Epoch: 6, Time: 0.02040s, Loss: 1.89677
Epoch: 7, Time: 0.02277s, Loss: 1.88383
update best: 0.37344
Epoch: 8, Time: 0.02565s, Loss: 1.86714
update best: 0.39408
Epoch: 9, Time: 0.02522s, Loss: 1.84742
update best: 0.42562
Epoch: 10, Time: 0.02619s, Loss: 1.83285
update best: 0.46028
Epoch: 11, Time: 0.02544s, Loss: 1.80938
update best: 0.48287
Epoch: 12, Time: 0.02505s, Loss: 1.78297
update best: 0.51285
Epoch: 13, Time: 0.02514s, Loss: 1.75584
update best: 0.54322
Epoch: 14, Time: 0.02585s, Loss: 1.73113
update best: 0.56893
Epoch: 15, Time: 0.02566s, Loss: 1.69918
update best: 0.60008
Epoch: 16, Time: 0.02513s, Loss: 1.66786
update best: 0.60942
Epoch: 17, Time: 0.02519s, Loss: 1.63900
update best: 0.62383
Epoch: 18, Time: 0.02493s, Loss: 1.60080
update best: 0.64291
Epoch: 19, Time: 0.02376s, Loss: 1.57180
Epoch: 20, Time: 0.02494s, Loss: 1.52605
Epoch: 21, Time: 0.02421s, Loss: 1.48944
update best: 0.64720
Epoch: 22, Time: 0.02435s, Loss: 1.45535
update best: 0.65031
Epoch: 23, Time: 0.02367s, Loss: 1.41342
update best: 0.65537
Epoch: 24, Time: 0.02481s, Loss: 1.37551
Epoch: 25, Time: 0.02524s, Loss: 1.33206
Epoch: 26, Time: 0.02661s, Loss: 1.29449
Epoch: 27, Time: 0.02346s, Loss: 1.25809
Epoch: 28, Time: 0.02339s, Loss: 1.22571
Epoch: 29, Time: 0.02461s, Loss: 1.20123

train finished!
best val: 0.65537
test...
final result: epoch: 23
{'accuracy': 0.6553738117218018, 'f1_score': 0.6284641319066386, 'f1_score -> average@micro': 0.655373831775701}
Hypergraph(num_v=2708, num_e=1118)
Epoch: 0, Time: 0.03334s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.01875s, Loss: 1.94026
update best: 0.30958
Epoch: 2, Time: 0.02188s, Loss: 1.93320
Epoch: 3, Time: 0.02007s, Loss: 1.92488
Epoch: 4, Time: 0.01922s, Loss: 1.91419
Epoch: 5, Time: 0.01737s, Loss: 1.90132
Epoch: 6, Time: 0.01966s, Loss: 1.88789
update best: 0.31464
Epoch: 7, Time: 0.01985s, Loss: 1.87199
update best: 0.33333
Epoch: 8, Time: 0.01980s, Loss: 1.85388
update best: 0.36682
Epoch: 9, Time: 0.02058s, Loss: 1.83219
update best: 0.40265
Epoch: 10, Time: 0.01805s, Loss: 1.81469
update best: 0.44198
Epoch: 11, Time: 0.01929s, Loss: 1.78939
update best: 0.48676
Epoch: 12, Time: 0.01948s, Loss: 1.75848
update best: 0.52298
Epoch: 13, Time: 0.02174s, Loss: 1.72744
update best: 0.54283
Epoch: 14, Time: 0.01924s, Loss: 1.70144
update best: 0.55724
Epoch: 15, Time: 0.01930s, Loss: 1.66515
update best: 0.57048
Epoch: 16, Time: 0.01885s, Loss: 1.62918
update best: 0.57983
Epoch: 17, Time: 0.01934s, Loss: 1.59392
update best: 0.58684
Epoch: 18, Time: 0.01965s, Loss: 1.55869
update best: 0.60942
Epoch: 19, Time: 0.01933s, Loss: 1.51977
update best: 0.62928
Epoch: 20, Time: 0.01742s, Loss: 1.46942
update best: 0.64681
Epoch: 21, Time: 0.01953s, Loss: 1.43009
update best: 0.65343
Epoch: 22, Time: 0.01950s, Loss: 1.38646
update best: 0.65693
Epoch: 23, Time: 0.01919s, Loss: 1.34403
update best: 0.66394
Epoch: 24, Time: 0.01937s, Loss: 1.30409
update best: 0.66861
Epoch: 25, Time: 0.01961s, Loss: 1.25433
update best: 0.67329
Epoch: 26, Time: 0.01985s, Loss: 1.21391
update best: 0.68030
Epoch: 27, Time: 0.01510s, Loss: 1.17483
update best: 0.68263
Epoch: 28, Time: 0.01887s, Loss: 1.13489
update best: 0.68653
Epoch: 29, Time: 0.01849s, Loss: 1.10596

train finished!
best val: 0.68653
test...
final result: epoch: 28
{'accuracy': 0.6865264773368835, 'f1_score': 0.6623810931193944, 'f1_score -> average@micro': 0.6865264797507789}
Hypergraph(num_v=2708, num_e=1300)
Epoch: 0, Time: 0.03463s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.01981s, Loss: 1.94049
update best: 0.36955
Epoch: 2, Time: 0.02346s, Loss: 1.93363
Epoch: 3, Time: 0.02205s, Loss: 1.92542
Epoch: 4, Time: 0.01959s, Loss: 1.91522
Epoch: 5, Time: 0.02130s, Loss: 1.90234
Epoch: 6, Time: 0.02139s, Loss: 1.88865
Epoch: 7, Time: 0.02572s, Loss: 1.87333
Epoch: 8, Time: 0.02100s, Loss: 1.85552
update best: 0.39798
Epoch: 9, Time: 0.02190s, Loss: 1.83460
update best: 0.43069
Epoch: 10, Time: 0.01969s, Loss: 1.81624
update best: 0.46262
Epoch: 11, Time: 0.02087s, Loss: 1.79111
update best: 0.50350
Epoch: 12, Time: 0.01782s, Loss: 1.76028
update best: 0.53816
Epoch: 13, Time: 0.01696s, Loss: 1.73058
update best: 0.55841
Epoch: 14, Time: 0.01972s, Loss: 1.70390
update best: 0.56970
Epoch: 15, Time: 0.01996s, Loss: 1.66774
update best: 0.57710
Epoch: 16, Time: 0.02014s, Loss: 1.63196
update best: 0.58528
Epoch: 17, Time: 0.02004s, Loss: 1.59608
update best: 0.60942
Epoch: 18, Time: 0.01700s, Loss: 1.55982
update best: 0.62656
Epoch: 19, Time: 0.01698s, Loss: 1.52333
update best: 0.64097
Epoch: 20, Time: 0.02120s, Loss: 1.47363
update best: 0.64759
Epoch: 21, Time: 0.02051s, Loss: 1.43356
update best: 0.65460
Epoch: 22, Time: 0.01926s, Loss: 1.38996
update best: 0.66706
Epoch: 23, Time: 0.01666s, Loss: 1.34418
update best: 0.67368
Epoch: 24, Time: 0.01983s, Loss: 1.30672
update best: 0.67601
Epoch: 25, Time: 0.02094s, Loss: 1.25776
update best: 0.67796
Epoch: 26, Time: 0.01953s, Loss: 1.22161
update best: 0.68030
Epoch: 27, Time: 0.01847s, Loss: 1.17642
update best: 0.68419
Epoch: 28, Time: 0.01761s, Loss: 1.14161
Epoch: 29, Time: 0.01947s, Loss: 1.11272
update best: 0.68653

train finished!
best val: 0.68653
test...
final result: epoch: 29
{'accuracy': 0.6865264773368835, 'f1_score': 0.6645425193745674, 'f1_score -> average@micro': 0.6865264797507789}
Hypergraph(num_v=2708, num_e=1402)
Epoch: 0, Time: 0.03393s, Loss: 1.94655
update best: 0.12188
Epoch: 1, Time: 0.02250s, Loss: 1.94065
update best: 0.31581
Epoch: 2, Time: 0.02221s, Loss: 1.93373
Epoch: 3, Time: 0.02002s, Loss: 1.92576
Epoch: 4, Time: 0.01940s, Loss: 1.91560
Epoch: 5, Time: 0.02053s, Loss: 1.90313
update best: 0.31970
Epoch: 6, Time: 0.02083s, Loss: 1.88955
update best: 0.32827
Epoch: 7, Time: 0.02207s, Loss: 1.87418
update best: 0.36098
Epoch: 8, Time: 0.02222s, Loss: 1.85648
update best: 0.39136
Epoch: 9, Time: 0.02226s, Loss: 1.83593
update best: 0.42913
Epoch: 10, Time: 0.02193s, Loss: 1.81792
update best: 0.47469
Epoch: 11, Time: 0.02641s, Loss: 1.79278
update best: 0.51402
Epoch: 12, Time: 0.01743s, Loss: 1.76247
update best: 0.55140
Epoch: 13, Time: 0.02270s, Loss: 1.73306
update best: 0.56153
Epoch: 14, Time: 0.02113s, Loss: 1.70610
update best: 0.56893
Epoch: 15, Time: 0.02064s, Loss: 1.67097
update best: 0.57632
Epoch: 16, Time: 0.02065s, Loss: 1.63598
update best: 0.58333
Epoch: 17, Time: 0.01978s, Loss: 1.60226
update best: 0.60514
Epoch: 18, Time: 0.02082s, Loss: 1.56524
update best: 0.63006
Epoch: 19, Time: 0.02407s, Loss: 1.52803
update best: 0.64759
Epoch: 20, Time: 0.02042s, Loss: 1.48042
update best: 0.65187
Epoch: 21, Time: 0.02070s, Loss: 1.43816
update best: 0.66277
Epoch: 22, Time: 0.02061s, Loss: 1.39751
update best: 0.66706
Epoch: 23, Time: 0.02003s, Loss: 1.35024
update best: 0.66861
Epoch: 24, Time: 0.02041s, Loss: 1.31254
update best: 0.67523
Epoch: 25, Time: 0.01957s, Loss: 1.26568
Epoch: 26, Time: 0.02050s, Loss: 1.22675
update best: 0.67679
Epoch: 27, Time: 0.01953s, Loss: 1.18360
update best: 0.67874
Epoch: 28, Time: 0.01996s, Loss: 1.14871
update best: 0.67991
Epoch: 29, Time: 0.01981s, Loss: 1.11912
update best: 0.68030

train finished!
best val: 0.68030
test...
final result: epoch: 29
[I 2024-01-18 07:22:57,385] Trial 88 finished with value: 0.6802959442138672 and parameters: {'border': 0.981}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:23:56,248] Trial 89 finished with value: 0.6853582262992859 and parameters: {'border': 0.994}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:24:55,539] Trial 90 finished with value: 0.6873052716255188 and parameters: {'border': 0.99}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:25:55,167] Trial 91 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:26:54,602] Trial 92 finished with value: 0.6876947283744812 and parameters: {'border': 0.986}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
{'accuracy': 0.6802959442138672, 'f1_score': 0.6591743885608691, 'f1_score -> average@micro': 0.6802959501557633}
Hypergraph(num_v=2708, num_e=1060)
Epoch: 0, Time: 0.03079s, Loss: 1.94653
update best: 0.12188
Epoch: 1, Time: 0.01852s, Loss: 1.94055
update best: 0.35319
Epoch: 2, Time: 0.02141s, Loss: 1.93342
Epoch: 3, Time: 0.02235s, Loss: 1.92514
Epoch: 4, Time: 0.01860s, Loss: 1.91444
Epoch: 5, Time: 0.02008s, Loss: 1.90140
Epoch: 6, Time: 0.01965s, Loss: 1.88764
Epoch: 7, Time: 0.02068s, Loss: 1.87198
update best: 0.36215
Epoch: 8, Time: 0.02239s, Loss: 1.85344
update best: 0.39798
Epoch: 9, Time: 0.02411s, Loss: 1.83194
update best: 0.42913
Epoch: 10, Time: 0.02237s, Loss: 1.81350
update best: 0.47002
Epoch: 11, Time: 0.02445s, Loss: 1.78776
update best: 0.51363
Epoch: 12, Time: 0.02073s, Loss: 1.75692
update best: 0.53816
Epoch: 13, Time: 0.02521s, Loss: 1.72604
update best: 0.55880
Epoch: 14, Time: 0.02493s, Loss: 1.69900
update best: 0.56659
Epoch: 15, Time: 0.01944s, Loss: 1.66267
update best: 0.57827
Epoch: 16, Time: 0.01929s, Loss: 1.62586
update best: 0.58411
Epoch: 17, Time: 0.02608s, Loss: 1.59031
update best: 0.60475
Epoch: 18, Time: 0.02071s, Loss: 1.55297
update best: 0.62695
Epoch: 19, Time: 0.02339s, Loss: 1.51509
update best: 0.64174
Epoch: 20, Time: 0.01984s, Loss: 1.46442
update best: 0.65265
Epoch: 21, Time: 0.01848s, Loss: 1.42304
update best: 0.65927
Epoch: 22, Time: 0.02087s, Loss: 1.38101
update best: 0.66783
Epoch: 23, Time: 0.01951s, Loss: 1.33465
update best: 0.67173
Epoch: 24, Time: 0.01770s, Loss: 1.29590
update best: 0.67407
Epoch: 25, Time: 0.01539s, Loss: 1.24604
update best: 0.67835
Epoch: 26, Time: 0.01949s, Loss: 1.20626
Epoch: 27, Time: 0.01867s, Loss: 1.16624
update best: 0.68185
Epoch: 28, Time: 0.01894s, Loss: 1.12636
update best: 0.68536
Epoch: 29, Time: 0.01702s, Loss: 1.09677

train finished!
best val: 0.68536
test...
final result: epoch: 28
{'accuracy': 0.6853582262992859, 'f1_score': 0.6605734854940827, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=1140)
Epoch: 0, Time: 0.03090s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.01866s, Loss: 1.94045
update best: 0.31542
Epoch: 2, Time: 0.02003s, Loss: 1.93341
Epoch: 3, Time: 0.02379s, Loss: 1.92518
Epoch: 4, Time: 0.02393s, Loss: 1.91454
Epoch: 5, Time: 0.02002s, Loss: 1.90185
Epoch: 6, Time: 0.01995s, Loss: 1.88838
update best: 0.31737
Epoch: 7, Time: 0.01819s, Loss: 1.87250
update best: 0.33684
Epoch: 8, Time: 0.02240s, Loss: 1.85475
update best: 0.36877
Epoch: 9, Time: 0.01964s, Loss: 1.83312
update best: 0.40460
Epoch: 10, Time: 0.01901s, Loss: 1.81559
update best: 0.44081
Epoch: 11, Time: 0.02036s, Loss: 1.79045
update best: 0.48326
Epoch: 12, Time: 0.02023s, Loss: 1.75942
update best: 0.51986
Epoch: 13, Time: 0.01939s, Loss: 1.72896
update best: 0.54439
Epoch: 14, Time: 0.01927s, Loss: 1.70258
update best: 0.55491
Epoch: 15, Time: 0.01947s, Loss: 1.66629
update best: 0.56854
Epoch: 16, Time: 0.01627s, Loss: 1.63043
update best: 0.57827
Epoch: 17, Time: 0.02063s, Loss: 1.59577
update best: 0.58217
Epoch: 18, Time: 0.01935s, Loss: 1.55994
update best: 0.61176
Epoch: 19, Time: 0.01913s, Loss: 1.52208
update best: 0.63084
Epoch: 20, Time: 0.01602s, Loss: 1.47199
update best: 0.64525
Epoch: 21, Time: 0.01983s, Loss: 1.43174
update best: 0.65537
Epoch: 22, Time: 0.01936s, Loss: 1.38862
update best: 0.66005
Epoch: 23, Time: 0.01976s, Loss: 1.34424
update best: 0.66355
Epoch: 24, Time: 0.01654s, Loss: 1.30237
update best: 0.66978
Epoch: 25, Time: 0.01786s, Loss: 1.25589
update best: 0.67562
Epoch: 26, Time: 0.01928s, Loss: 1.21605
update best: 0.68146
Epoch: 27, Time: 0.01705s, Loss: 1.17547
update best: 0.68341
Epoch: 28, Time: 0.01848s, Loss: 1.13525
update best: 0.68731
Epoch: 29, Time: 0.02063s, Loss: 1.10585

train finished!
best val: 0.68731
test...
final result: epoch: 28
{'accuracy': 0.6873052716255188, 'f1_score': 0.6623724299431235, 'f1_score -> average@micro': 0.6873052959501558}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.03232s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.02074s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.02311s, Loss: 1.93352
Epoch: 3, Time: 0.02131s, Loss: 1.92512
Epoch: 4, Time: 0.02141s, Loss: 1.91455
Epoch: 5, Time: 0.02157s, Loss: 1.90150
Epoch: 6, Time: 0.01955s, Loss: 1.88778
Epoch: 7, Time: 0.01943s, Loss: 1.87197
Epoch: 8, Time: 0.02311s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.02304s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.02102s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.02065s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.02281s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.02325s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.02081s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.02236s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.02020s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.02192s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.01705s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.01925s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.01939s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.01964s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.01922s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.01930s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.01923s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.01919s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.01961s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.01724s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.01992s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.01941s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1237)
Epoch: 0, Time: 0.03353s, Loss: 1.94663
update best: 0.12188
Epoch: 1, Time: 0.01871s, Loss: 1.94043
update best: 0.32749
Epoch: 2, Time: 0.02170s, Loss: 1.93342
Epoch: 3, Time: 0.02339s, Loss: 1.92501
Epoch: 4, Time: 0.02185s, Loss: 1.91462
Epoch: 5, Time: 0.01981s, Loss: 1.90154
Epoch: 6, Time: 0.02154s, Loss: 1.88776
Epoch: 7, Time: 0.02017s, Loss: 1.87184
update best: 0.33995
Epoch: 8, Time: 0.02365s, Loss: 1.85383
update best: 0.37656
Epoch: 9, Time: 0.02266s, Loss: 1.83192
update best: 0.40537
Epoch: 10, Time: 0.02122s, Loss: 1.81376
update best: 0.44704
Epoch: 11, Time: 0.02064s, Loss: 1.78845
update best: 0.47858
Epoch: 12, Time: 0.01908s, Loss: 1.75667
update best: 0.52181
Epoch: 13, Time: 0.02071s, Loss: 1.72660
update best: 0.55023
Epoch: 14, Time: 0.02021s, Loss: 1.69932
update best: 0.56659
Epoch: 15, Time: 0.01989s, Loss: 1.66167
update best: 0.57204
Epoch: 16, Time: 0.01970s, Loss: 1.62382
update best: 0.58528
Epoch: 17, Time: 0.02199s, Loss: 1.58996
update best: 0.60748
Epoch: 18, Time: 0.01945s, Loss: 1.55154
update best: 0.63123
Epoch: 19, Time: 0.01913s, Loss: 1.51352
update best: 0.64291
Epoch: 20, Time: 0.02300s, Loss: 1.46440
update best: 0.65343
Epoch: 21, Time: 0.01915s, Loss: 1.42280
update best: 0.66160
Epoch: 22, Time: 0.01917s, Loss: 1.37718
update best: 0.67017
Epoch: 23, Time: 0.01978s, Loss: 1.33420
update best: 0.67407
Epoch: 24, Time: 0.02489s, Loss: 1.29331
update best: 0.67874
Epoch: 25, Time: 0.02126s, Loss: 1.24430
update best: 0.68107
Epoch: 26, Time: 0.02286s, Loss: 1.20621
update best: 0.68185
Epoch: 27, Time: 0.01968s, Loss: 1.16259
update best: 0.68458
Epoch: 28, Time: 0.02230s, Loss: 1.12618
update best: 0.68769
Epoch: 29, Time: 0.01960s, Loss: 1.09703

train finished!
best val: 0.68769
test...
final result: epoch: 28
{'accuracy': 0.6876947283744812, 'f1_score': 0.6652098366111925, 'f1_score -> average@micro': 0.6876947040498442}
Hypergraph(num_v=2708, num_e=1181)
Epoch: 0, Time: 0.03228s, Loss: 1.94654
update best: 0.12188
Epoch: 1, Time: 0.01996s, Loss: 1.94050
update best: 0.37266
Epoch: 2, Time: 0.02234s, Loss: 1.93352
Epoch: 3, Time: 0.02321s, Loss: 1.92512
Epoch: 4, Time: 0.02669s, Loss: 1.91455
Epoch: 5, Time: 0.02465s, Loss: 1.90150
[I 2024-01-18 07:27:53,634] Trial 93 finished with value: 0.6884735226631165 and parameters: {'border': 0.988}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:28:53,047] Trial 94 finished with value: 0.6849688291549683 and parameters: {'border': 0.985}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:29:52,036] Trial 95 finished with value: 0.6830217838287354 and parameters: {'border': 0.987}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:30:51,236] Trial 96 finished with value: 0.6845794320106506 and parameters: {'border': 0.989}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
Epoch: 6, Time: 0.02040s, Loss: 1.88778
Epoch: 7, Time: 0.02330s, Loss: 1.87197
Epoch: 8, Time: 0.02133s, Loss: 1.85355
update best: 0.39486
Epoch: 9, Time: 0.02081s, Loss: 1.83217
update best: 0.42290
Epoch: 10, Time: 0.02198s, Loss: 1.81418
update best: 0.45717
Epoch: 11, Time: 0.01948s, Loss: 1.78916
update best: 0.49650
Epoch: 12, Time: 0.02256s, Loss: 1.75775
update best: 0.53232
Epoch: 13, Time: 0.01967s, Loss: 1.72689
update best: 0.55257
Epoch: 14, Time: 0.01901s, Loss: 1.69977
update best: 0.57087
Epoch: 15, Time: 0.01929s, Loss: 1.66289
update best: 0.58100
Epoch: 16, Time: 0.02248s, Loss: 1.62579
update best: 0.58762
Epoch: 17, Time: 0.02010s, Loss: 1.59192
update best: 0.61332
Epoch: 18, Time: 0.01994s, Loss: 1.55382
update best: 0.62695
Epoch: 19, Time: 0.01565s, Loss: 1.51601
update best: 0.64058
Epoch: 20, Time: 0.01882s, Loss: 1.46602
update best: 0.65070
Epoch: 21, Time: 0.01930s, Loss: 1.42664
update best: 0.66083
Epoch: 22, Time: 0.01918s, Loss: 1.38014
update best: 0.66511
Epoch: 23, Time: 0.01912s, Loss: 1.33736
update best: 0.66978
Epoch: 24, Time: 0.01817s, Loss: 1.29693
update best: 0.67251
Epoch: 25, Time: 0.01953s, Loss: 1.24855
update best: 0.68069
Epoch: 26, Time: 0.01947s, Loss: 1.20766
update best: 0.68263
Epoch: 27, Time: 0.01966s, Loss: 1.16561
update best: 0.68575
Epoch: 28, Time: 0.01931s, Loss: 1.12699
update best: 0.68847
Epoch: 29, Time: 0.01684s, Loss: 1.10072

train finished!
best val: 0.68847
test...
final result: epoch: 28
{'accuracy': 0.6884735226631165, 'f1_score': 0.6671175145904458, 'f1_score -> average@micro': 0.6884735202492211}
Hypergraph(num_v=2708, num_e=1274)
Epoch: 0, Time: 0.03297s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.02086s, Loss: 1.94053
update best: 0.35787
Epoch: 2, Time: 0.02205s, Loss: 1.93369
Epoch: 3, Time: 0.01962s, Loss: 1.92571
Epoch: 4, Time: 0.01956s, Loss: 1.91552
Epoch: 5, Time: 0.01959s, Loss: 1.90279
Epoch: 6, Time: 0.01963s, Loss: 1.88936
Epoch: 7, Time: 0.01956s, Loss: 1.87385
Epoch: 8, Time: 0.01968s, Loss: 1.85672
update best: 0.38279
Epoch: 9, Time: 0.02615s, Loss: 1.83579
update best: 0.40810
Epoch: 10, Time: 0.02339s, Loss: 1.81825
update best: 0.44431
Epoch: 11, Time: 0.03035s, Loss: 1.79322
update best: 0.47508
Epoch: 12, Time: 0.02487s, Loss: 1.76261
update best: 0.51324
Epoch: 13, Time: 0.02240s, Loss: 1.73314
update best: 0.54128
Epoch: 14, Time: 0.01985s, Loss: 1.70659
update best: 0.55802
Epoch: 15, Time: 0.02422s, Loss: 1.67099
update best: 0.56698
Epoch: 16, Time: 0.02305s, Loss: 1.63474
update best: 0.57516
Epoch: 17, Time: 0.01699s, Loss: 1.60033
update best: 0.59852
Epoch: 18, Time: 0.02003s, Loss: 1.56347
update best: 0.62305
Epoch: 19, Time: 0.01973s, Loss: 1.52661
update best: 0.63512
Epoch: 20, Time: 0.01912s, Loss: 1.47767
update best: 0.64642
Epoch: 21, Time: 0.02295s, Loss: 1.43740
update best: 0.65537
Epoch: 22, Time: 0.01963s, Loss: 1.39440
update best: 0.66472
Epoch: 23, Time: 0.02654s, Loss: 1.34836
update best: 0.67017
Epoch: 24, Time: 0.03096s, Loss: 1.31151
update best: 0.67562
Epoch: 25, Time: 0.01877s, Loss: 1.26169
update best: 0.67874
Epoch: 26, Time: 0.02191s, Loss: 1.22363
update best: 0.68107
Epoch: 27, Time: 0.02078s, Loss: 1.18038
update best: 0.68497
Epoch: 28, Time: 0.02502s, Loss: 1.14599
Epoch: 29, Time: 0.02428s, Loss: 1.11687

train finished!
best val: 0.68497
test...
final result: epoch: 27
{'accuracy': 0.6849688291549683, 'f1_score': 0.6616746092396986, 'f1_score -> average@micro': 0.6849688473520249}
Hypergraph(num_v=2708, num_e=1206)
Epoch: 0, Time: 0.03482s, Loss: 1.94656
update best: 0.12188
Epoch: 1, Time: 0.02007s, Loss: 1.94051
update best: 0.37383
Epoch: 2, Time: 0.02298s, Loss: 1.93361
Epoch: 3, Time: 0.02125s, Loss: 1.92531
Epoch: 4, Time: 0.02149s, Loss: 1.91493
Epoch: 5, Time: 0.01897s, Loss: 1.90201
Epoch: 6, Time: 0.01973s, Loss: 1.88820
Epoch: 7, Time: 0.01939s, Loss: 1.87212
Epoch: 8, Time: 0.01940s, Loss: 1.85420
update best: 0.39330
Epoch: 9, Time: 0.02302s, Loss: 1.83301
update best: 0.41900
Epoch: 10, Time: 0.02276s, Loss: 1.81520
update best: 0.45833
Epoch: 11, Time: 0.02011s, Loss: 1.78938
update best: 0.49299
Epoch: 12, Time: 0.02238s, Loss: 1.75814
update best: 0.52414
Epoch: 13, Time: 0.01979s, Loss: 1.72791
update best: 0.54790
Epoch: 14, Time: 0.02009s, Loss: 1.70101
update best: 0.56425
Epoch: 15, Time: 0.02167s, Loss: 1.66413
update best: 0.57555
Epoch: 16, Time: 0.02243s, Loss: 1.62725
update best: 0.59073
Epoch: 17, Time: 0.02389s, Loss: 1.59247
update best: 0.61643
Epoch: 18, Time: 0.02179s, Loss: 1.55481
update best: 0.63240
Epoch: 19, Time: 0.02152s, Loss: 1.51861
update best: 0.64486
Epoch: 20, Time: 0.02242s, Loss: 1.46778
update best: 0.65771
Epoch: 21, Time: 0.01933s, Loss: 1.42742
update best: 0.65849
Epoch: 22, Time: 0.02038s, Loss: 1.38236
update best: 0.66783
Epoch: 23, Time: 0.02580s, Loss: 1.33881
update best: 0.67134
Epoch: 24, Time: 0.01924s, Loss: 1.29973
update best: 0.67718
Epoch: 25, Time: 0.01924s, Loss: 1.25105
update best: 0.68030
Epoch: 26, Time: 0.02027s, Loss: 1.21320
Epoch: 27, Time: 0.01898s, Loss: 1.16960
update best: 0.68302
Epoch: 28, Time: 0.02004s, Loss: 1.13380
Epoch: 29, Time: 0.01946s, Loss: 1.10606

train finished!
best val: 0.68302
test...
final result: epoch: 27
{'accuracy': 0.6830217838287354, 'f1_score': 0.6580493410678123, 'f1_score -> average@micro': 0.6830218068535826}
Hypergraph(num_v=2708, num_e=1159)
Epoch: 0, Time: 0.03221s, Loss: 1.94661
update best: 0.12188
Epoch: 1, Time: 0.02050s, Loss: 1.94038
update best: 0.34151
Epoch: 2, Time: 0.02140s, Loss: 1.93350
Epoch: 3, Time: 0.01679s, Loss: 1.92534
Epoch: 4, Time: 0.01685s, Loss: 1.91478
Epoch: 5, Time: 0.01729s, Loss: 1.90180
Epoch: 6, Time: 0.01561s, Loss: 1.88834
Epoch: 7, Time: 0.01808s, Loss: 1.87205
update best: 0.34696
Epoch: 8, Time: 0.01819s, Loss: 1.85443
update best: 0.37305
Epoch: 9, Time: 0.01499s, Loss: 1.83362
update best: 0.40498
Epoch: 10, Time: 0.01700s, Loss: 1.81586
update best: 0.44393
Epoch: 11, Time: 0.01729s, Loss: 1.79077
update best: 0.47352
Epoch: 12, Time: 0.01383s, Loss: 1.76051
update best: 0.51324
Epoch: 13, Time: 0.01398s, Loss: 1.72942
update best: 0.54089
Epoch: 14, Time: 0.01422s, Loss: 1.70333
update best: 0.55491
Epoch: 15, Time: 0.01382s, Loss: 1.66653
update best: 0.57243
Epoch: 16, Time: 0.01489s, Loss: 1.63049
update best: 0.58450
Epoch: 17, Time: 0.01378s, Loss: 1.59662
update best: 0.60164
Epoch: 18, Time: 0.01464s, Loss: 1.55931
update best: 0.62188
Epoch: 19, Time: 0.01357s, Loss: 1.52301
update best: 0.63240
Epoch: 20, Time: 0.01359s, Loss: 1.47269
update best: 0.64252
Epoch: 21, Time: 0.01522s, Loss: 1.43253
update best: 0.65265
Epoch: 22, Time: 0.01340s, Loss: 1.38843
update best: 0.66121
Epoch: 23, Time: 0.01451s, Loss: 1.34594
update best: 0.66628
Epoch: 24, Time: 0.01354s, Loss: 1.30662
Epoch: 25, Time: 0.01507s, Loss: 1.25731
update best: 0.67212
Epoch: 26, Time: 0.01321s, Loss: 1.21655
update best: 0.67407
Epoch: 27, Time: 0.01307s, Loss: 1.17788
update best: 0.68380
Epoch: 28, Time: 0.01366s, Loss: 1.13940
update best: 0.68458
Epoch: 29, Time: 0.01340s, Loss: 1.11000

train finished!
best val: 0.68458
test...
final result: epoch: 28
{'accuracy': 0.6845794320106506, 'f1_score': 0.6599619408517492, 'f1_score -> average@micro': 0.6845794392523364}
Hypergraph(num_v=2708, num_e=1094)
Epoch: 0, Time: 0.03198s, Loss: 1.94664
update best: 0.12188
Epoch: 1, Time: 0.02007s, Loss: 1.94020
update best: 0.30491
Epoch: 2, Time: 0.02156s, Loss: 1.93297
Epoch: 3, Time: 0.01780s, Loss: 1.92462
Epoch: 4, Time: 0.02227s, Loss: 1.91404
Epoch: 5, Time: 0.02359s, Loss: 1.90111
update best: 0.30919
Epoch: 6, Time: 0.01829s, Loss: 1.88750
update best: 0.31698
Epoch: 7, Time: 0.02353s, Loss: 1.87170
update best: 0.32710
Epoch: 8, Time: 0.02301s, Loss: 1.85345
update best: 0.35164
Epoch: 9, Time: 0.01940s, Loss: 1.83182
update best: 0.39875
Epoch: 10, Time: 0.02165s, Loss: 1.81383
update best: 0.43886
Epoch: 11, Time: 0.02111s, Loss: 1.78861
update best: 0.48910
Epoch: 12, Time: 0.02297s, Loss: 1.75761
update best: 0.52220
Epoch: 13, Time: 0.02294s, Loss: 1.72707
update best: 0.54517
Epoch: 14, Time: 0.02057s, Loss: 1.70023
update best: 0.56153
[I 2024-01-18 07:31:51,262] Trial 97 finished with value: 0.6853582262992859 and parameters: {'border': 0.992}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:32:51,116] Trial 98 finished with value: 0.6873052716255188 and parameters: {'border': 0.99}. Best is trial 13 with value: 0.6884735226631165.
/users/Min/GAug/optuna_hgaugm.py:125: FutureWarning: suggest_discrete_uniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., step=...) instead.
  border = trial.suggest_discrete_uniform('border', 0.95, 1, 0.001)
[I 2024-01-18 07:33:50,401] Trial 99 finished with value: 0.6865264773368835 and parameters: {'border': 0.984}. Best is trial 13 with value: 0.6884735226631165.
Epoch: 15, Time: 0.02091s, Loss: 1.66424
update best: 0.56815
Epoch: 16, Time: 0.02093s, Loss: 1.62698
update best: 0.58061
Epoch: 17, Time: 0.02188s, Loss: 1.59259
update best: 0.59463
Epoch: 18, Time: 0.01619s, Loss: 1.55558
update best: 0.61877
Epoch: 19, Time: 0.01856s, Loss: 1.51741
update best: 0.63474
Epoch: 20, Time: 0.01973s, Loss: 1.46639
update best: 0.64447
Epoch: 21, Time: 0.01935s, Loss: 1.42576
update best: 0.65849
Epoch: 22, Time: 0.02144s, Loss: 1.38338
update best: 0.66511
Epoch: 23, Time: 0.01909s, Loss: 1.33898
update best: 0.66628
Epoch: 24, Time: 0.01995s, Loss: 1.30067
update best: 0.66861
Epoch: 25, Time: 0.01763s, Loss: 1.25041
update best: 0.67407
Epoch: 26, Time: 0.01537s, Loss: 1.20821
update best: 0.67991
Epoch: 27, Time: 0.01947s, Loss: 1.16992
update best: 0.68224
Epoch: 28, Time: 0.01830s, Loss: 1.13034
update best: 0.68536
Epoch: 29, Time: 0.01876s, Loss: 1.10097

train finished!
best val: 0.68536
test...
final result: epoch: 28
{'accuracy': 0.6853582262992859, 'f1_score': 0.6595623797267406, 'f1_score -> average@micro': 0.6853582554517134}
Hypergraph(num_v=2708, num_e=1140)
Epoch: 0, Time: 0.03242s, Loss: 1.94658
update best: 0.12188
Epoch: 1, Time: 0.01998s, Loss: 1.94045
update best: 0.31542
Epoch: 2, Time: 0.01957s, Loss: 1.93341
Epoch: 3, Time: 0.02022s, Loss: 1.92518
Epoch: 4, Time: 0.02064s, Loss: 1.91454
Epoch: 5, Time: 0.01953s, Loss: 1.90185
Epoch: 6, Time: 0.01953s, Loss: 1.88838
update best: 0.31737
Epoch: 7, Time: 0.02076s, Loss: 1.87250
update best: 0.33684
Epoch: 8, Time: 0.01869s, Loss: 1.85475
update best: 0.36877
Epoch: 9, Time: 0.02129s, Loss: 1.83312
update best: 0.40460
Epoch: 10, Time: 0.01893s, Loss: 1.81559
update best: 0.44081
Epoch: 11, Time: 0.01918s, Loss: 1.79045
update best: 0.48326
Epoch: 12, Time: 0.02317s, Loss: 1.75942
update best: 0.51986
Epoch: 13, Time: 0.02178s, Loss: 1.72896
update best: 0.54439
Epoch: 14, Time: 0.02129s, Loss: 1.70258
update best: 0.55491
Epoch: 15, Time: 0.01972s, Loss: 1.66629
update best: 0.56854
Epoch: 16, Time: 0.02432s, Loss: 1.63043
update best: 0.57827
Epoch: 17, Time: 0.02326s, Loss: 1.59577
update best: 0.58217
Epoch: 18, Time: 0.02001s, Loss: 1.55994
update best: 0.61176
Epoch: 19, Time: 0.01886s, Loss: 1.52208
update best: 0.63084
Epoch: 20, Time: 0.02253s, Loss: 1.47199
update best: 0.64525
Epoch: 21, Time: 0.02028s, Loss: 1.43174
update best: 0.65537
Epoch: 22, Time: 0.02148s, Loss: 1.38862
update best: 0.66005
Epoch: 23, Time: 0.02109s, Loss: 1.34424
update best: 0.66355
Epoch: 24, Time: 0.02011s, Loss: 1.30237
update best: 0.66978
Epoch: 25, Time: 0.01949s, Loss: 1.25589
update best: 0.67562
Epoch: 26, Time: 0.01840s, Loss: 1.21605
update best: 0.68146
Epoch: 27, Time: 0.01947s, Loss: 1.17547
update best: 0.68341
Epoch: 28, Time: 0.01948s, Loss: 1.13525
update best: 0.68731
Epoch: 29, Time: 0.01908s, Loss: 1.10585

train finished!
best val: 0.68731
test...
final result: epoch: 28
{'accuracy': 0.6873052716255188, 'f1_score': 0.6623724299431235, 'f1_score -> average@micro': 0.6873052959501558}
Hypergraph(num_v=2708, num_e=1300)
Epoch: 0, Time: 0.03396s, Loss: 1.94651
update best: 0.12188
Epoch: 1, Time: 0.02082s, Loss: 1.94049
update best: 0.36955
Epoch: 2, Time: 0.02307s, Loss: 1.93363
Epoch: 3, Time: 0.02169s, Loss: 1.92542
Epoch: 4, Time: 0.02062s, Loss: 1.91522
Epoch: 5, Time: 0.02323s, Loss: 1.90234
Epoch: 6, Time: 0.01981s, Loss: 1.88865
Epoch: 7, Time: 0.02015s, Loss: 1.87333
Epoch: 8, Time: 0.01695s, Loss: 1.85552
update best: 0.39798
Epoch: 9, Time: 0.01989s, Loss: 1.83460
update best: 0.43069
Epoch: 10, Time: 0.01906s, Loss: 1.81624
update best: 0.46262
Epoch: 11, Time: 0.01802s, Loss: 1.79111
update best: 0.50350
Epoch: 12, Time: 0.01980s, Loss: 1.76028
update best: 0.53816
Epoch: 13, Time: 0.01802s, Loss: 1.73058
update best: 0.55841
Epoch: 14, Time: 0.01743s, Loss: 1.70390
update best: 0.56970
Epoch: 15, Time: 0.02020s, Loss: 1.66774
update best: 0.57710
Epoch: 16, Time: 0.01948s, Loss: 1.63196
update best: 0.58528
Epoch: 17, Time: 0.02011s, Loss: 1.59608
update best: 0.60942
Epoch: 18, Time: 0.02191s, Loss: 1.55982
update best: 0.62656
Epoch: 19, Time: 0.01897s, Loss: 1.52333
update best: 0.64097
Epoch: 20, Time: 0.01658s, Loss: 1.47363
update best: 0.64759
Epoch: 21, Time: 0.01949s, Loss: 1.43356
update best: 0.65460
Epoch: 22, Time: 0.01904s, Loss: 1.38996
update best: 0.66706
Epoch: 23, Time: 0.01869s, Loss: 1.34418
update best: 0.67368
Epoch: 24, Time: 0.01624s, Loss: 1.30672
update best: 0.67601
Epoch: 25, Time: 0.01869s, Loss: 1.25776
update best: 0.67796
Epoch: 26, Time: 0.01910s, Loss: 1.22161
update best: 0.68030
Epoch: 27, Time: 0.01948s, Loss: 1.17642
update best: 0.68419
Epoch: 28, Time: 0.02022s, Loss: 1.14161
Epoch: 29, Time: 0.02010s, Loss: 1.11272
update best: 0.68653

train finished!
best val: 0.68653
test...
final result: epoch: 29
{'accuracy': 0.6865264773368835, 'f1_score': 0.6645425193745674, 'f1_score -> average@micro': 0.6865264797507789}
Number of finished trials:  100
Best trial:
  Value:  0.6884735226631165
  Params: 
    border: 0.988
